{"version":3,"sources":["webpack:///./resources/assets/backend/js/site-dashboard.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./node_modules/moment/locale sync select2[\\/\\\\]dist[\\/\\\\]js[\\/\\\\]i18n","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/moment/moment.js"],"names":["GoogleAnaylytics","window","chartColors","red","orange","yellow","green","blue","purple","grey","gapi","analytics","ready","data","ids","gid","access_token","gtok","auth","authorize","serverAuth","createComponent","initialize","this","activeUsers","once","handleSignOut_","bind","execute","polling_","stop","render_","isAuthorized","pollActiveUsers_","clearTimeout","timeout_","emit","opts","get","container","document","getElementById","innerHTML","template","querySelector","options","pollingInterval","isNaN","Error","client","realtime","metrics","then","response","result","newValue","totalResults","rows","oldValue","onChange_","setTimeout","delta","valueContainer","handleSignIn_","now","thisWeek","lastWeek","ext","ActiveUsers","query","params","Promise","resolve","reject","report","Data","makeCanvas","id","canvas","createElement","ctx","getContext","width","offsetWidth","height","offsetHeight","appendChild","timeout","firstChild","on","element","animationClass","className","replace","set","dimensions","start-date","subtract","day","format","end-date","all","results","data1","map","row","data2","labels","label","datasets","fillColor","strokeColor","pointColor","pointStrokeColor","backgroundColor","borderColor","borderWidth","Chart","Line","thisYear","date","month","lastYear","i","len","length","undefined","Bar","err","console","error","stack","renderYearOverYearChart","sort","chartData","forEach","push","Doughnut","renderTopBrowsersChart","totalUsers","totalsForAllResults","$","text","colors","bgColors","colorCounter","renderTopCountriesChart","defaults","global","animationSteps","animationEasing","responsive","maintainAspectRatio","module","exports","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","source","target","prop","spaces","maxes","charAt","capped","chans","sname","index","svalues","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","Object","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","keys","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","Element","configuration","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","addResizeListener","ticking","expando","resizer","expand","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsiveAnimationDuration","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","week","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","__webpack_require__","webpackEmptyContext","req","code","webpackPolyfill","deprecate","paths","children","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","number","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS"],"mappings":"4VAEMA,qLAEEC,OAAOC,YAAc,CACjBC,IAAK,oBACLC,OAAQ,oBACRC,OAAQ,oBACRC,MAAO,oBACPC,KAAM,oBACNC,OAAQ,qBACRC,KAAM,oBAKVC,KAAKC,UAAUC,MAAM,WACjB,IAAIC,EAAO,CAACC,IAAKb,OAAOc,KACpBC,EAAef,OAAOgB,KAO1BP,KAAKC,UAAUO,KAAKC,UAAU,CAC1BC,WAAc,CACVJ,aAAgBA,KAIxBN,KAAKC,UAAUU,gBAAgB,cAAe,CAE1CC,WAAY,WACRC,KAAKC,YAAc,EACnBd,KAAKC,UAAUO,KAAKO,KAAK,UAAWF,KAAKG,eAAeC,KAAKJ,QAGjEK,QAAS,WAEDL,KAAKM,UACLN,KAAKO,OAGTP,KAAKQ,UAGDrB,KAAKC,UAAUO,KAAKc,eACpBT,KAAKU,mBAELvB,KAAKC,UAAUO,KAAKO,KAAK,SAAUF,KAAKU,iBAAiBN,KAAKJ,QAItEO,KAAM,WACFI,aAAaX,KAAKY,UAClBZ,KAAKM,UAAW,EAChBN,KAAKa,KAAK,OAAQ,CAAEZ,YAAaD,KAAKC,eAG1CO,QAAS,WACL,IAAIM,EAAOd,KAAKe,MAGhBf,KAAKgB,UAAqC,iBAAlBF,EAAKE,UAAwBC,SAASC,eAAeJ,EAAKE,WAAaF,EAAKE,UAEpGhB,KAAKgB,UAAUG,UAAYL,EAAKM,UAAYpB,KAAKoB,SACjDpB,KAAKgB,UAAUK,cAAc,KAAKF,UAAYnB,KAAKC,aAGvDS,iBAAkB,WACd,IAAIY,EAAUtB,KAAKe,MACfQ,EAAmD,KAAhCD,EAAQC,iBAAmB,GAElD,GAAIC,MAAMD,IAAoBA,EAAkB,IAC5C,MAAM,IAAIE,MAAM,wCAGpBzB,KAAKM,UAAW,EAChBnB,KAAKuC,OAAOtC,UAAUE,KAAKqC,SAASZ,IAAI,CAAExB,IAAK+B,EAAQ/B,IAAKqC,QAAS,mBAAoBC,KAAK,SAAUC,GACpG,IAAIC,EAASD,EAASC,OAClBC,EAAWD,EAAOE,cAAgBF,EAAOG,KAAK,GAAG,GAAK,EACtDC,EAAWnC,KAAKC,YAEpBD,KAAKa,KAAK,UAAW,CAAEZ,YAAaD,KAAKC,cAErC+B,GAAYG,IACZnC,KAAKC,YAAc+B,EACnBhC,KAAKoC,UAAUJ,EAAWG,IAGT,GAAjBnC,KAAKM,WACLN,KAAKY,SAAWyB,WAAWrC,KAAKU,iBAAiBN,KAAKJ,MAAOuB,KAEnEnB,KAAKJ,QAGXoC,UAAW,SAAmBE,GAC1B,IAAIC,EAAiBvC,KAAKgB,UAAUK,cAAc,KAC9CkB,IAAgBA,EAAepB,UAAYnB,KAAKC,aAEpDD,KAAKa,KAAK,SAAU,CAAEZ,YAAaD,KAAKC,YAAaqC,MAAOA,IACxDA,EAAQ,EACRtC,KAAKa,KAAK,WAAY,CAAEZ,YAAaD,KAAKC,YAAaqC,MAAOA,IAE9DtC,KAAKa,KAAK,WAAY,CAAEZ,YAAaD,KAAKC,YAAaqC,MAAOA,KAItEnC,eAAgB,WACZH,KAAKO,OACLpB,KAAKC,UAAUO,KAAKO,KAAK,SAAUF,KAAKwC,cAAcpC,KAAKJ,QAG/DwC,cAAe,WACXxC,KAAKU,mBACLvB,KAAKC,UAAUO,KAAKO,KAAK,UAAWF,KAAKG,eAAeC,KAAKJ,QAGjEoB,SAAU,iGAUd,IAqCiC7B,EAGzBkD,EAEAC,EAQAC,EAlDJ1C,EAAc,IAAId,KAAKC,UAAUwD,IAAIC,YAAY,CACjD7B,UAAW,yBACXO,gBAAiB,IA8SrB,SAASuB,EAAMC,GACX,OAAO,IAAIC,QAAQ,SAASC,EAASC,GACtB,IAAI/D,KAAKC,UAAU+D,OAAOC,KAAK,CAACN,MAAOC,IAC7C7C,KAAK,UAAW,SAAS4B,GAAYmB,EAAQnB,KAC7C5B,KAAK,QAAS,SAAS4B,GAAYoB,EAAOpB,KAC1CzB,YAWb,SAASgD,EAAWC,GAChB,IAAItC,EAAYC,SAASC,eAAeoC,GACpCC,EAAStC,SAASuC,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAO5B,OALA1C,EAAUG,UAAY,GACtBoC,EAAOI,MAAQ3C,EAAU4C,YACzBL,EAAOM,OAAS7C,EAAU8C,aAC1B9C,EAAU+C,YAAYR,GAEfE,EAjUXxD,EAAYC,KAAK,UAAW,WACxB,IACI8D,EADUhE,KAAKgB,UAAUiD,WAG7BjE,KAAKkE,GAAG,SAAU,SAAS5E,GACvB,IAAI6E,EAAUnE,KAAKgB,UAAUiD,WACzBG,EAAiB9E,EAAKgD,MAAQ,EAAI,gBAAkB,gBACxD6B,EAAQE,WAAc,IAAMD,EAE5BzD,aAAaqD,GACbA,EAAU3B,WAAW,WACjB8B,EAAQE,UACJF,EAAQE,UAAUC,QAAQ,+BAAgC,KAC/D,SAGXrE,EAAYsE,IAAIjF,GAAMe,UAYWd,EAVTD,EAAKC,IAarBkD,EAAM/D,IAENgE,EAAWI,EAAM,CACjBvD,IAAOA,EACPiF,WAAc,oBACd5C,QAAW,cACX6C,aAAc/F,EAAc+D,GAAKiC,SAAS,EAAG,OAAOC,IAAI,GAAGC,OAAO,cAClEC,WAAYnG,EAAc+D,GAAKmC,OAAO,gBAGtCjC,EAAWG,EAAM,CACjBvD,IAAOA,EACPiF,WAAc,oBACd5C,QAAW,cACX6C,aAAc/F,EAAc+D,GAAKiC,SAAS,EAAG,OAAOC,IAAI,GAAGD,SAAS,EAAG,QAClEE,OAAO,cACZC,WAAYnG,EAAc+D,GAAKiC,SAAS,EAAG,OAAOC,IAAI,GAAGD,SAAS,EAAG,QAChEE,OAAO,gBAGhB5B,QAAQ8B,IAAI,CAACpC,EAAUC,IAAWd,KAAK,SAASkD,GAE5C,IAAIC,EAAQD,EAAQ,GAAG7C,KAAK+C,IAAI,SAASC,GAAO,OAAQA,EAAI,KACxDC,EAAQJ,EAAQ,GAAG7C,KAAK+C,IAAI,SAASC,GAAO,OAAQA,EAAI,KACxDE,EAASL,EAAQ,GAAG7C,KAAK+C,IAAI,SAASC,GAAO,OAAQA,EAAI,KAMzD5F,EAAO,CACP8F,OALJA,EAASA,EAAOH,IAAI,SAASI,GACzB,OAAO3G,EAAc2G,EAAO,YAAYT,OAAO,SAK/CU,SAAW,CACP,CACID,MAAO,YACPE,UAAY,wBACZC,YAAc,sBACdC,WAAa,sBACbC,iBAAmB,OACnBC,gBAAiBjH,OAAOC,YAAYK,KACpC4G,YAAalH,OAAOC,YAAYK,KAChC6G,YAAa,EACbvG,KAAO6F,GAEX,CACIE,MAAO,YACPE,UAAY,wBACZC,YAAc,sBACdC,WAAa,sBACbC,iBAAmB,OACnBC,gBAAiBjH,OAAOC,YAAYI,MACpC6G,YAAalH,OAAOC,YAAYI,MAChC8G,YAAa,EACbvG,KAAO0F,KAKnBc,IAAMC,KAAK1C,EAAW,qBAAsB,CACxC/D,KAAMA,MAWlB,SAAiCC,GAG7B,IAAIkD,EAAM/D,IAENsH,EAAWlD,EAAM,CACjBvD,IAAOA,EACPiF,WAAc,uBACd5C,QAAW,WACX6C,aAAc/F,EAAc+D,GAAKwD,KAAK,GAAGC,MAAM,GAAGtB,OAAO,cACzDC,WAAYnG,EAAc+D,GAAKmC,OAAO,gBAGtCuB,EAAWrD,EAAM,CACjBvD,IAAOA,EACPiF,WAAc,uBACd5C,QAAW,WACX6C,aAAc/F,EAAc+D,GAAKiC,SAAS,EAAG,QAAQuB,KAAK,GAAGC,MAAM,GAC9DtB,OAAO,cACZC,WAAYnG,EAAc+D,GAAKwD,KAAK,GAAGC,MAAM,GAAGxB,SAAS,EAAG,OACvDE,OAAO,gBAGhB5B,QAAQ8B,IAAI,CAACkB,EAAUG,IAAWtE,KAAK,SAASkD,GAQ5C,IAPA,IAAIC,EAAQD,EAAQ,GAAG7C,KAAK+C,IAAI,SAASC,GAAO,OAAQA,EAAI,KACxDC,EAAQJ,EAAQ,GAAG7C,KAAK+C,IAAI,SAASC,GAAO,OAAQA,EAAI,KACxDE,EAAS,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MACxC,MAAM,MAAM,MAAM,MAAM,MAAM,OAIzBgB,EAAI,EAAGC,EAAMjB,EAAOkB,OAAQF,EAAIC,EAAKD,SACzBG,IAAbvB,EAAMoB,KAAkBpB,EAAMoB,GAAK,WACtBG,IAAbpB,EAAMiB,KAAkBjB,EAAMiB,GAAK,MAG3C,IAAI9G,EAAO,CACP8F,OAASA,EACTE,SAAW,CACP,CACID,MAAO,YACPE,UAAY,wBACZC,YAAc,sBACdG,gBAAiBjH,OAAOC,YAAYE,OACpC+G,YAAa,wBACbtG,KAAO6F,GAEX,CACIE,MAAO,YACPE,UAAY,wBACZC,YAAc,sBACdG,gBAAiBjH,OAAOC,YAAYM,OACpC2G,YAAY,yBACZtG,KAAO0F,KAKnBc,IAAMU,IAAInD,EAAW,qBAAqB,CACtC/D,KAAMA,MApCd,MAuCW,SAASmH,GACZC,QAAQC,MAAMF,EAAIG,SAjJ9BC,CAAwBvH,EAAKC,KA0J7B,SAAgCA,GAC5B,IAAIkD,EAAM/D,IACVoE,EAAM,CACFvD,IAAOA,EACPiF,WAAc,aACd5C,QAAW,eACXkF,KAAQ,gBAERrC,aAAc/F,EAAc+D,GAAKwD,KAAK,GAAGC,MAAM,GAAGtB,OAAO,cACzDC,WAAYnG,EAAc+D,GAAKmC,OAAO,gBAErC/C,KAAK,SAASC,GAEX,IAAIiF,EAAY,GACZ3B,EAAS,GACbtD,EAASI,KAAK8E,QAAQ,SAAS9B,EAAKkB,GAChCW,EAAUE,KAAK/B,EAAI,IACnBE,EAAO6B,KAAK/B,EAAI,MAEpB5F,EAAO,CACHgG,SAAU,CAAC,CACPhG,KAAMyH,EACNpB,gBAAiB,CACbjH,OAAOC,YAAYC,IACnBF,OAAOC,YAAYE,OACnBH,OAAOC,YAAYG,OACnBJ,OAAOC,YAAYI,MACnBL,OAAOC,YAAYK,KACnBN,OAAOC,YAAYM,OACnBP,OAAOC,YAAYO,QAG3BkG,OAAQA,GAGZU,IAAMoB,SAAS7D,EAAW,qBAAqB,CAC3C/D,KAAKA,MA7LrB6H,CAAuB7H,EAAKC,KAwM5B,SAAiCA,GAC7B,IAAIkD,EAAM/D,IACVoE,EAAM,CACFvD,IAAOA,EACPiF,WAAc,aACd5C,QAAW,WACXkF,KAAQ,YAERrC,aAAc/F,EAAc+D,GAAKwD,KAAK,GAAGC,MAAM,GAAGtB,OAAO,cACzDC,WAAYnG,EAAc+D,GAAKmC,OAAO,gBAErC/C,KAAK,SAASC,GACX,IAAIsF,EAAatF,EAASuF,oBAAoB,YAC9CC,EAAE,kBAAkBC,KAAKH,GACzB,IAAIL,EAAY,GACZ3B,EAAS,GACToC,EAAS,CACT,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBAEAC,EAAW,GACXC,EAAe,EAEnB5F,EAASI,KAAK8E,QAAQ,SAAS9B,EAAKkB,GAEhCW,EAAUE,KAAK/B,EAAI,IACnBE,EAAO6B,KAAK/B,EAAI,IAEhBuC,EAASR,KAAKO,EAAOE,MACrBA,GACiBF,EAAOlB,SACpBoB,EAAc,KAKtBpI,EAAO,CACHgG,SAAU,CAAC,CACPhG,KAAMyH,EACNpB,gBAAiB8B,IAErBrC,OAAQA,GAGZU,IAAMoB,SAAS7D,EAAW,qBAAqB,CAC3C/D,KAAKA,MAzPrBqI,CAAwBrI,EAAKC,KAkT7BuG,IAAM8B,SAASC,OAAOC,eAAiB,GACvChC,IAAM8B,SAASC,OAAOE,gBAAkB,iBACxCjC,IAAM8B,SAASC,OAAOG,YAAa,EACnClC,IAAM8B,SAASC,OAAOI,qBAAsB,iDAMxDvJ,OAAOD,iBAAmBA,0DCndkCyJ,EAAAC,QAG3D,SAAAC,GAA2B,aAE5BA,OAAAC,eAAA,WAAAD,EAAA,QAAAA,EAIA,IAAAE,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QAuLA,SAAAC,GACA,OAAAC,EAAAH,EAAAE,KAtLAE,UACAC,QA8NA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGA,WAAAG,EAGA,QAOA,CAAAF,EADA,GAFAC,IADAC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAD,GACA,KAFAC,EAAAD,GAAA,EAEA,MA7OAE,QAgPA,SAAAR,GACA,OAAAN,EAAAQ,EAAAF,KAhPAS,SAmPA,SAAAT,GACA,OAAAL,EAAAO,EAAAF,KAnPAU,YAsPA,SAAAV,GACA,OAAAJ,EAAAM,EAAAF,KArPAW,UACAC,QAoRA,SAAAC,GACA,IAGAC,EAAAP,EAHAF,EAAAQ,EAAA,GACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAR,EAAAS,EAIA,CAAAV,EAAA,KAFAS,GADAA,IAFAP,GAAA,EAAAD,GAAAS,IAEA,EAAAR,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA7RAS,QAiSA,SAAAhB,GACA,OAAAN,EAAAiB,EAAAX,KAjSAiB,SAoSA,SAAAjB,GACA,OAAAL,EAAAgB,EAAAX,KApSAkB,YAuSA,SAAAlB,GACA,OAAAJ,EAAAe,EAAAX,KAtSAmB,UACAC,QA4UA,SAAApB,GACA,OAAAR,EAAA2B,EAAAnB,KA5UAqB,QA+UA,SAAArB,GACA,OAAAP,EAAA0B,EAAAnB,KA/UAsB,SAkVA,SAAAtB,GACA,OAAAL,EAAAwB,EAAAnB,KAlVAuB,YAqVA,SAAAvB,GACA,OAAAJ,EAAAuB,EAAAnB,KApVAwB,WACAC,SAmWA,SAAAzB,GACA,OAAAR,EAAAgC,EAAAxB,KAnWA0B,SAsWA,SAAA1B,GACA,OAAAP,EAAA+B,EAAAxB,KAtWA2B,SAyWA,SAAA3B,GACA,OAAAN,EAAA8B,EAAAxB,KAzWA4B,aA4WA,SAAA5B,GACA,OAAAJ,EAAA4B,EAAAxB,KA3WA6B,cACAC,YAkeA,SAAA9B,GACA,OAAAR,EAAAqC,EAAA7B,KAleA+B,YAqeA,SAAA/B,GACA,OAAAP,EAAAoC,EAAA7B,KAreAgC,YAweA,SAAAhC,GACA,OAAAN,EAAAmC,EAAA7B,KAxeAiC,aA2eA,SAAAjC,GACA,OAAAL,EAAAkC,EAAA7B,KA3eAkC,YA8eA,SAAAlC,GACA,OAAAF,EAAA+B,EAAA7B,KA9eAmC,YAifA,SAAAnC,GACA,OAAAH,EAAAgC,EAAA7B,KAhfAoC,UACAC,UACAC,QAqZA,SAAAtC,GACA,OAAAC,EAAAoC,EAAArC,KApZAuC,UACAC,UACAvC,UAEAwC,UACAC,QAscA,SAAA1C,GACA,OAAAuC,EAAAE,EAAAzC,KAtcA2C,QAycA,SAAA3C,GACA,OAAAwC,EAAAC,EAAAzC,MAtcA,SAAAR,EAAAoD,GACA,IAMAvC,EAAAE,EANAsC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAxJ,EAAA2J,EAAAF,EA0BA,OAvBAE,GAAAF,EACA3C,EAAA,EACAwC,GAAAK,EACA7C,GAAAyC,EAAAC,GAAAxJ,EACAuJ,GAAAI,EACA7C,EAAA,GAAA0C,EAAAF,GAAAtJ,EACAwJ,GAAAG,IACA7C,EAAA,GAAAwC,EAAAC,GAAAvJ,IAEA8G,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MAEA,IACAA,GAAA,KAEAE,GAAAyC,EAAAE,GAAA,EASA,CAAA7C,EAAA,KAPA6C,GAAAF,EACA,EACAzC,GAAA,GACAhH,GAAA2J,EAAAF,GAEAzJ,GAAA,EAAA2J,EAAAF,IAEA,IAAAzC,GAGA,SAAAd,EAAAmD,GACA,IAMAvC,EAAAC,EANAuC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAxJ,EAAA2J,EAAAF,EAwBA,OApBA1C,EADA,GAAA4C,EACA,EAEA3J,EAAA2J,EAAA,OAEAA,GAAAF,EACA3C,EAAA,EACAwC,GAAAK,EACA7C,GAAAyC,EAAAC,GAAAxJ,EACAuJ,GAAAI,EACA7C,EAAA,GAAA0C,EAAAF,GAAAtJ,EACAwJ,GAAAG,IACA7C,EAAA,GAAAwC,EAAAC,GAAAvJ,IAEA8G,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MAEA,IACAA,GAAA,KAIA,CAAAA,EAAAC,EAFA4C,EAAA,YAKA,SAAAxD,EAAAkD,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAvC,EAAAb,EAAAoD,GAAA,GACAO,EAAA,MAAAF,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IACAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,IAEA,OAAA1C,EAAA,IAAA8C,EAAA,IAAAJ,GAGA,SAAApD,EAAAiD,GACA,IAGAQ,EAHAP,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAOA,OAJAQ,EAAAH,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GAIA,OAHA,EAAAF,EAAAO,IAAA,EAAAA,IAAA,GAGA,MAFA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAL,EAAAK,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAxD,EAAAgD,GACA,OAAAS,EAAAC,KAAAC,UAAAX,IAGA,SAAA/C,EAAA+C,GACA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGAC,IAAA,OAAAI,KAAAO,KAAAX,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAG,KAAAO,KAAAV,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAE,KAAAO,KAAAT,EAAA,iBAAAA,EAAA,MAEA,IAAAU,EAAA,MAAAZ,EAAA,MAAAC,EAAA,MAAAC,EACAW,EAAA,MAAAb,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EAEA,WAAAU,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA7D,EAAA8C,GACA,IAAAgB,EAAA/D,EAAA+C,GACAa,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAeA,OAXAF,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAR,KAAAO,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAT,KAAAO,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAO,IAAAG,EAAA,WAAAA,EAAA,OAMA,CAJA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IASA,SAAAzD,EAAAE,GACA,IAGAyD,EAAAC,EAAAC,EAAAnB,EAAAoB,EAHA3D,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGA,MAAAE,EAEA,OADA0D,EAAA,IAAAzD,EACAyD,KAOAH,EAAA,EAAAtD,GAHAuD,EADAvD,EAAA,GACAA,GAAA,EAAAD,GAEAC,EAAAD,EAAAC,EAAAD,GAGAsC,EAAA,QACA,QAAAvF,EAAA,EAAiBA,EAAA,EAAOA,KACxB0G,EAAA1D,EAAA,MAAAhD,EAAA,IACA,GAAA0G,IACAA,EAAA,GAAAA,IAGAC,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEAjB,EAAAvF,GAAA,IAAA2G,EAGA,OAAApB,EAmCA,SAAAjC,EAAAE,GACA,IAAAR,EAAAQ,EAAA,MACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OACAoD,EAAAhB,KAAAiB,MAAA7D,GAAA,EAEA8D,EAAA9D,EAAA4C,KAAAiB,MAAA7D,GACA+D,EAAA,IAAArD,GAAA,EAAAT,GACA+D,EAAA,IAAAtD,GAAA,EAAAT,EAAA6D,GACAG,EAAA,IAAAvD,GAAA,EAAAT,GAAA,EAAA6D,IACApD,EAAA,IAAAA,EAEA,OAAAkD,GACA,OACA,OAAAlD,EAAAuD,EAAAF,GACA,OACA,OAAAC,EAAAtD,EAAAqD,GACA,OACA,OAAAA,EAAArD,EAAAuD,GACA,OACA,OAAAF,EAAAC,EAAAtD,GACA,OACA,OAAAuD,EAAAF,EAAArD,GACA,OACA,OAAAA,EAAAqD,EAAAC,IA+BA,SAAAlD,EAAAoD,GACA,IAIAlH,EAAA0D,EAAAoD,EAAAK,EAJAnE,EAAAkE,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAF,EAAAC,EAiBA,OAbAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGAtH,EAAA4F,KAAAiB,MAAA,EAAA7D,GAEA8D,EAAA,EAAA9D,EAAAhD,EACA,MAAAA,KACA8G,EAAA,EAAAA,GAEAK,EAAAC,EAAAN,IALApD,EAAA,EAAA2D,GAKAD,GAEApH,GACA,QACA,OACA,OAAAwF,EAAA9B,EAAkB+B,EAAA0B,EAAOzB,EAAA0B,EAAQ,MACjC,OAAA5B,EAAA2B,EAAkB1B,EAAA/B,EAAOgC,EAAA0B,EAAQ,MACjC,OAAA5B,EAAA4B,EAAmB3B,EAAA/B,EAAOgC,EAAAyB,EAAO,MACjC,OAAA3B,EAAA4B,EAAmB3B,EAAA0B,EAAOzB,EAAAhC,EAAO,MACjC,OAAA8B,EAAA2B,EAAkB1B,EAAA2B,EAAQ1B,EAAAhC,EAAO,MACjC,OAAA8B,EAAA9B,EAAkB+B,EAAA2B,EAAQ1B,EAAAyB,EAG1B,WAAA3B,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAvB,EAAAoD,GACA,IAIA/B,EAAAC,EAAAC,EAJA8B,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAlB,EAAAkB,EAAA,OACAxB,EAAAwB,EAAA,OAMA,OAHA/B,EAAA,EAAAI,KAAAD,IAAA,EAAA6B,GAAA,EAAAzB,MACAN,EAAA,EAAAG,KAAAD,IAAA,EAAA8B,GAAA,EAAA1B,MACAL,EAAA,EAAAE,KAAAD,IAAA,EAAAU,GAAA,EAAAN,MACA,KAAAP,EAAA,IAAAC,EAAA,IAAAC,GAoBA,SAAAX,EAAAwB,GACA,IAGAf,EAAAC,EAAAC,EAHAU,EAAAG,EAAA,OACAF,EAAAE,EAAA,OACAD,EAAAC,EAAA,OAqBA,OAjBAd,GAAA,MAAAW,EAAA,OAAAC,EAAA,MAAAC,EACAZ,EAAA,MAAAU,GAAA,KAAAC,EAAA,MAAAC,EAGAd,GALAA,EAAA,OAAAY,GAAA,OAAAC,GAAA,MAAAC,GAKA,eAAAV,KAAAO,IAAAX,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAG,KAAAO,IAAAV,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAE,KAAAO,IAAAT,EAAA,YACAA,GAAA,MAEAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,GAEA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAV,EAAAuB,GACA,IAAAH,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAeA,OAXAF,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAR,KAAAO,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAT,KAAAO,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAO,IAAAG,EAAA,WAAAA,EAAA,OAMA,CAJA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IASA,SAAApB,EAAAwC,GACA,IAGAtB,EAAAC,EAAAC,EAAAqB,EAHAzE,EAAAwE,EAAA,GACAE,EAAAF,EAAA,GACAhC,EAAAgC,EAAA,GAeA,OAZAxE,GAAA,EAEAyE,GADAtB,EAAA,IAAAnD,EAAA,OACA,kBAEAmD,EAAA,IAAAT,KAAAO,KAAAjD,EAAA,WACAyE,EAAA/B,KAAAO,IAAAE,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAAwB,EAAA,IAAAD,EAAA,qBAAA/B,KAAAO,IAAAyB,EAAA,IAAAD,EAAA,GAEArB,IAAA,iBAAAA,EAAA,SAAAqB,EAAAjC,EAAA,0BAAAE,KAAAO,IAAAwB,EAAAjC,EAAA,OAEA,CAAAU,EAAAC,EAAAC,GAGA,SAAA1D,EAAA8E,GACA,IAGAG,EAAA7E,EAAAwE,EAHAtE,EAAAwE,EAAA,GACAE,EAAAF,EAAA,GACAhC,EAAAgC,EAAA,GASA,OANAG,EAAAjC,KAAAkC,MAAApC,EAAAkC,IACA5E,EAAA,IAAA6E,EAAA,EAAAjC,KAAAmC,IACA,IACA/E,GAAA,KAEAwE,EAAA5B,KAAAoC,KAAAJ,IAAAlC,KACA,CAAAxC,EAAAsE,EAAAxE,GAGA,SAAAmC,EAAAxC,GACA,OAAAoC,EAAAG,EAAAvC,IAGA,SAAAyC,EAAA6C,GACA,IAGAL,EAAAlC,EAAAmC,EAHA3E,EAAA+E,EAAA,GACAT,EAAAS,EAAA,GACAjF,EAAAiF,EAAA,GAMA,OAHAJ,EAAA7E,EAAA,MAAA4C,KAAAmC,GACAH,EAAAJ,EAAA5B,KAAAsC,IAAAL,GACAnC,EAAA8B,EAAA5B,KAAAuC,IAAAN,GACA,CAAA3E,EAAA0E,EAAAlC,GAWA,SAAAlB,EAAA4D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAlQ,KAAA,UACAmQ,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACA/S,MAAA,UACAgT,YAAA,aACA7S,KAAA,cACA8S,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAlW,OAAA,YACAmW,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACA1W,OAAA,YACA2W,cAAA,aACAhX,IAAA,UACAiX,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAvY,OAAA,YACAwY,YAAA,cAGAlL,EAAA,GACA,QAAAmL,KAAA9I,EACArC,EAAAC,KAAAC,UAAAmC,EAAA8I,OAGA,IAAAC,EAAA,WACA,WAAAC,GAGA,QAAAC,KAAApP,EAAA,CAEAkP,EAAAE,EAAA,gBAAAA,GAEA,gBAAAC,GAGA,MAFA,iBAAAA,IACAA,EAAAC,MAAAC,UAAAC,MAAAC,KAAAC,YACA1P,EAAAoP,GAAAC,IALA,CAOGD,GAEH,IAAAO,EAAA,cAAAC,KAAAR,GACAS,EAAAF,EAAA,GACAG,EAAAH,EAAA,IAGAT,EAAAW,GAAAX,EAAAW,IAAA,IAEAC,GAAAZ,EAAAE,GAAA,SAAAA,GACA,gBAAAC,GACA,iBAAAA,IACAA,EAAAC,MAAAC,UAAAC,MAAAC,KAAAC,YAEA,IAAAjL,EAAAzE,EAAAoP,GAAAC,GACA,oBAAA5K,QAAAxG,IAAAwG,EACA,OAAAA,EAEA,QAAA3G,EAAA,EAAqBA,EAAA2G,EAAAzG,OAAgBF,IACrC2G,EAAA3G,GAAA4F,KAAAqM,MAAAtL,EAAA3G,IACA,OAAA2G,GAXA,CAaG2K,GAKH,IAAAD,EAAA,WACAzX,KAAAsY,MAAA,IAKAb,EAAAI,UAAAU,WAAA,SAAAC,EAAAzP,GACA,IAAA0P,EAAA1P,EAAA,GACA,YAAAxC,IAAAkS,EAEAzY,KAAA0Y,UAAAF,IAGA,iBAAAC,IACAA,EAAAb,MAAAC,UAAAC,MAAAC,KAAAhP,IAGA/I,KAAA2Y,UAAAH,EAAAC,KAIAhB,EAAAI,UAAAc,UAAA,SAAAH,EAAAC,GAIA,OAHAzY,KAAAwY,QACAxY,KAAAsY,MAAA,GACAtY,KAAAsY,MAAAE,GAAAC,EACAzY,MAMAyX,EAAAI,UAAAa,UAAA,SAAAF,GACA,IAAAI,EAAA5Y,KAAAsY,MAAAE,GACA,IAAAI,EAAA,CACA,IAAAC,EAAA7Y,KAAAwY,MACAL,EAAAnY,KAAAsY,MAAAO,GACAD,EAAApB,EAAAqB,GAAAL,GAAAL,GAEAnY,KAAAsY,MAAAE,GAAAI,EAEA,OAAAA,GAGA,qCAAA5R,QAAA,SAAAwR,GACAf,EAAAI,UAAAW,GAAA,SAAAI,GACA,OAAA5Y,KAAAuY,WAAAC,EAAAR,cAIA,IAAAc,EAAAtB,EAEAuB,EAAA,CACArK,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAlQ,KAAA,UACAmQ,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACA/S,MAAA,UACAgT,YAAA,aACA7S,KAAA,cACA8S,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAlW,OAAA,YACAmW,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACA1W,OAAA,YACA2W,cAAA,aACAhX,IAAA,UACAiX,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAvY,OAAA,YACAwY,YAAA,cAMA0B,EAAA,CACAC,UACAC,UACAC,OAqHA,SAAAC,GACA,IAAAC,EAAAJ,EAAAG,GACA,OAAAC,KAAAvB,MAAA,MAtHAwB,OAyHA,SAAAF,GACA,IAAAG,EAAAL,EAAAE,GACA,OAAAG,KAAAzB,MAAA,MA1HA0B,SACAC,SA4HA,SAAAL,GACA,IAAAR,EAAAK,EAAAG,GACA,OAAAR,EACAA,EAAA,IAEAA,EAAAM,EAAAE,IACAR,EAAA,IAEAA,EAAAY,EAAAJ,IACAR,EAAA,QADA,GAlIAc,UAwIA,SAAAL,EAAArL,GACA,IAAAA,OAAAzH,IAAAyH,GAAA,IAAAqL,EAAA/S,OAAA0H,EAAAqL,EAAA,GACA,UAAAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,KAEArL,GAAA,GAAAA,EAAA,EACA2L,EAAA3N,KAAAqM,MAAA,IAAArK,IACA,KA/IA4L,UAmJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAEA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAtJAS,aACAC,cAgKA,SAAAV,EAAAQ,GACA,GAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACA,OAAAW,EAAAX,EAAAQ,GAEA,IAAAjO,EAAAI,KAAAqM,MAAAgB,EAAA,YACAxN,EAAAG,KAAAqM,MAAAgB,EAAA,YACAvN,EAAAE,KAAAqM,MAAAgB,EAAA,YAEA,aAAAzN,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAvKAkO,iBACAC,UAgLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAEA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAnLAW,aACAC,UA+LA,SAAA7M,EAAAuM,GAIA,YAHAtT,IAAAsT,IACAA,OAAAtT,IAAA+G,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aACA/G,IAAAsT,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAnMArL,QAsMA,SAAA7C,GACA,OAAAyO,EAAAzO,EAAAmM,MAAA,QApMA,SAAAmB,EAAAG,GACA,GAAAA,EAAA,CAGA,IAMAzN,EAAA,QACAqC,EAAA,EACAqM,EAAAjB,EAAAiB,MARA,0BASAC,EAAA,GACA,GAAAD,EAAA,CACAA,IAAA,GACAC,EAAAD,EAAA,GACA,QAAAjU,EAAA,EAAqBA,EAAAuF,EAAArF,OAAgBF,IACrCuF,EAAAvF,GAAAmU,SAAAF,EAAAjU,GAAAiU,EAAAjU,GAAA,IAEAkU,IACAtM,EAAAhC,KAAAqM,MAAAkC,SAAAD,IAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MAnBA,yCAmBA,CACAC,EAAAD,EAAA,GACAA,IAAA,GACA,QAAAjU,EAAA,EAAqBA,EAAAuF,EAAArF,OAAgBF,IACrCuF,EAAAvF,GAAAmU,SAAAF,EAAAvC,MAAA,EAAA1R,EAAA,EAAAA,EAAA,OAEAkU,IACAtM,EAAAhC,KAAAqM,MAAAkC,SAAAD,EAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MA5BA,4FA4BA,CACA,QAAAjU,EAAA,EAAqBA,EAAAuF,EAAArF,OAAgBF,IACrCuF,EAAAvF,GAAAmU,SAAAF,EAAAjU,EAAA,IAEA4H,EAAAwM,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAjCA,8GAiCA,CACA,QAAAjU,EAAA,EAAqBA,EAAAuF,EAAArF,OAAgBF,IACrCuF,EAAAvF,GAAA4F,KAAAqM,MAAA,KAAAmC,WAAAH,EAAAjU,EAAA,KAEA4H,EAAAwM,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAtCA,SAsCA,CACA,kBAAAA,EAAA,GACA,gBAGA,KADA1O,EAAAoN,EAAAsB,EAAA,KAEA,OAIA,QAAAjU,EAAA,EAAkBA,EAAAuF,EAAArF,OAAgBF,IAClCuF,EAAAvF,GAAAqU,EAAA9O,EAAAvF,GAAA,OASA,OAHA4H,EAJAA,GAAA,GAAAA,EAIAyM,EAAAzM,EAAA,KAHA,EAKArC,EAAA,GAAAqC,EACArC,GAGA,SAAAuN,EAAAE,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,4GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAjR,EAAAqR,EAAAF,SAAAF,EAAA,WACAhR,EAAAoR,EAAAD,WAAAH,EAAA,WACA/Q,EAAAmR,EAAAD,WAAAH,EAAA,WACArM,EAAAyM,EAAAjZ,MAAAqY,GAAA,EAAAA,EAAA,KACA,OAAAzQ,EAAAC,EAAAC,EAAA0E,KAIA,SAAAwL,EAAAJ,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,0GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAjR,EAAAqR,EAAAF,SAAAF,EAAA,WACAnO,EAAAuO,EAAAD,WAAAH,EAAA,WACAvO,EAAA2O,EAAAD,WAAAH,EAAA,WACArM,EAAAyM,EAAAjZ,MAAAqY,GAAA,EAAAA,EAAA,KACA,OAAAzQ,EAAA8C,EAAAJ,EAAAkC,KA+CA,SAAA8L,EAAAT,EAAAQ,GAIA,YAHAtT,IAAAsT,IACAA,OAAAtT,IAAA8S,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GACA,IAAAjO,EAAAI,KAAAqM,MAAAgB,EAAA,YACAxN,EAAAG,KAAAqM,MAAAgB,EAAA,YACAvN,EAAAE,KAAAqM,MAAAgB,EAAA,YACA,cAAAzN,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAA+N,GAAAR,EAAA,WAUA,SAAAa,EAAAX,EAAAM,GAIA,YAHAtT,IAAAsT,IACAA,OAAAtT,IAAAgT,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAM,EAAA,IAkBA,SAAAY,EAAAC,EAAA3O,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAA2O,GAAAzO,GAGA,SAAA0N,EAAAe,GACA,IAAAC,EAAAD,EAAAE,SAAA,IAAAC,cACA,OAAAF,EAAArU,OAAA,MAAAqU,IAKA,IAAAP,EAAA,GACA,QAAAU,KAAA/B,EACAqB,EAAArB,EAAA+B,MAOA,IAAAC,EAAA,SAAAC,GACA,OAAAA,aAAAD,EACAC,EAEAhb,gBAAA+a,GAIA/a,KAAAib,OAAA,EACAjb,KAAAyY,OAAA,CACA9M,IAAA,QACAxC,IAAA,QACAS,IAAA,QACA0D,IAAA,QACAK,KAAA,UACAkM,MAAA,QAKA,iBAAAmB,GACApC,EAAAI,EAAAC,QAAA+B,IAEAhb,KAAA2Y,UAAA,MAAAC,IACGA,EAAAI,EAAAE,QAAA8B,IACHhb,KAAA2Y,UAAA,MAAAC,IACGA,EAAAI,EAAAQ,OAAAwB,KACHhb,KAAA2Y,UAAA,MAAAC,GAEE,iBAAAoC,SAEFzU,KADAqS,EAAAoC,GACApP,QAAArF,IAAAqS,EAAAha,IACAoB,KAAA2Y,UAAA,MAAAC,QACGrS,IAAAqS,EAAAtP,QAAA/C,IAAAqS,EAAAsC,UACHlb,KAAA2Y,UAAA,MAAAC,QACGrS,IAAAqS,EAAA9O,QAAAvD,IAAAqS,EAAAuC,MACHnb,KAAA2Y,UAAA,MAAAC,QACGrS,IAAAqS,EAAA1M,QAAA3F,IAAAqS,EAAAwC,UACHpb,KAAA2Y,UAAA,MAAAC,QACGrS,IAAAqS,EAAAhL,QAAArH,IAAAqS,EAAA/I,MACH7P,KAAA2Y,UAAA,OAAAC,MAnCA,IAAAmC,EAAAC,GAcA,IAAApC,GA0BAmC,EAAAlD,UAAA,CACAwD,QAAA,WACA,OAAArb,KAAAib,OAEAtP,IAAA,WACA,OAAA3L,KAAAsb,SAAA,MAAAtD,YAEA7O,IAAA,WACA,OAAAnJ,KAAAsb,SAAA,MAAAtD,YAEApO,IAAA,WACA,OAAA5J,KAAAsb,SAAA,MAAAtD,YAEA1K,IAAA,WACA,OAAAtN,KAAAsb,SAAA,MAAAtD,YAEArK,KAAA,WACA,OAAA3N,KAAAsb,SAAA,OAAAtD,YAGAuD,SAAA,WACA,OAAAvb,KAAAyY,OAAA9M,KAEA6P,SAAA,WACA,OAAAxb,KAAAyY,OAAAtP,KAEAsS,SAAA,WACA,OAAAzb,KAAAyY,OAAA7O,KAEA8R,SAAA,WACA,IAAAjD,EAAAzY,KAAAyY,OACA,WAAAA,EAAAoB,MACApB,EAAAnL,IAAAqO,OAAA,CAAAlD,EAAAoB,QAEApB,EAAAnL,KAEAsO,UAAA,WACA,OAAA5b,KAAAyY,OAAA9K,MAEAkO,UAAA,WACA,IAAApD,EAAAzY,KAAAyY,OACA,OAAAA,EAAA9M,IAAAgQ,OAAA,CAAAlD,EAAAoB,SAEAiC,UAAA,WACA,IAAArD,EAAAzY,KAAAyY,OACA,OAAAA,EAAAtP,IAAAwS,OAAA,CAAAlD,EAAAoB,SAEAA,MAAA,SAAA9M,GACA,YAAAxG,IAAAwG,EACA/M,KAAAyY,OAAAoB,OAEA7Z,KAAA2Y,UAAA,QAAA5L,GACA/M,OAGApB,IAAA,SAAAmO,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEAhO,MAAA,SAAAgO,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEA/N,KAAA,SAAA+N,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEAiP,IAAA,SAAAjP,GAKA,OAJAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAEA/M,KAAA+b,WAAA,QAAAhP,IAEAkP,WAAA,SAAAlP,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEAmO,UAAA,SAAAnO,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEAmP,YAAA,SAAAnP,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEAqO,UAAA,SAAArO,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEAoP,UAAA,SAAApP,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEAoO,MAAA,SAAApO,GACA,OAAA/M,KAAA+b,WAAA,QAAAhP,IAEA8C,KAAA,SAAA9C,GACA,OAAA/M,KAAA+b,WAAA,SAAAhP,IAEA6G,QAAA,SAAA7G,GACA,OAAA/M,KAAA+b,WAAA,SAAAhP,IAEAjO,OAAA,SAAAiO,GACA,OAAA/M,KAAA+b,WAAA,SAAAhP,IAEAkC,MAAA,SAAAlC,GACA,OAAA/M,KAAA+b,WAAA,SAAAhP,IAGA2M,UAAA,WACA,OAAAV,EAAAU,UAAA1Z,KAAAyY,OAAA9M,MAEAiO,UAAA,WACA,OAAAZ,EAAAY,UAAA5Z,KAAAyY,OAAA9M,IAAA3L,KAAAyY,OAAAoB,QAEAC,WAAA,WACA,OAAAd,EAAAc,WAAA9Z,KAAAyY,OAAA9M,IAAA3L,KAAAyY,OAAAoB,QAEAE,cAAA,WACA,OAAAf,EAAAe,cAAA/Z,KAAAyY,OAAA9M,IAAA3L,KAAAyY,OAAAoB,QAEAI,UAAA,WACA,OAAAjB,EAAAiB,UAAAja,KAAAyY,OAAAtP,IAAAnJ,KAAAyY,OAAAoB,QAEAK,WAAA,WACA,OAAAlB,EAAAkB,WAAAla,KAAAyY,OAAAtP,IAAAnJ,KAAAyY,OAAAoB,QAEAM,UAAA,WACA,OAAAnB,EAAAmB,UAAAna,KAAAyY,OAAAnL,IAAAtN,KAAAyY,OAAAoB,QAEArL,QAAA,WACA,OAAAwK,EAAAxK,QAAAxO,KAAAyY,OAAA9M,IAAA3L,KAAAyY,OAAAoB,QAGAuC,UAAA,WACA,IAAAzQ,EAAA3L,KAAAyY,OAAA9M,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAGA0Q,WAAA,WAIA,IAFA,IAAA1Q,EAAA3L,KAAAyY,OAAA9M,IACA2Q,EAAA,GACAlW,EAAA,EAAiBA,EAAAuF,EAAArF,OAAgBF,IAAA,CACjC,IAAAmW,EAAA5Q,EAAAvF,GAAA,IACAkW,EAAAlW,GAAAmW,GAAA,OAAAA,EAAA,MAAAvQ,KAAAO,KAAAgQ,EAAA,iBAEA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAE,SAAA,SAAAC,GAEA,IAAAC,EAAA1c,KAAAqc,aACAM,EAAAF,EAAAJ,aACA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,IAAAI,EAAA7c,KAAAwc,SAAAC,GACA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAGAC,KAAA,WAEA,IAAAnR,EAAA3L,KAAAyY,OAAA9M,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAGAoR,MAAA,WACA,OAAA/c,KAAA8c,QAGAE,OAAA,WAEA,IADA,IAAArR,EAAA,GACAvF,EAAA,EAAiBA,EAAA,EAAOA,IACxBuF,EAAAvF,GAAA,IAAApG,KAAAyY,OAAA9M,IAAAvF,GAGA,OADApG,KAAA2Y,UAAA,MAAAhN,GACA3L,MAGAid,QAAA,SAAAvP,GACA,IAAAvE,EAAAnJ,KAAAyY,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACA1N,KAAA2Y,UAAA,MAAAxP,GACAnJ,MAGAkd,OAAA,SAAAxP,GACA,IAAAvE,EAAAnJ,KAAAyY,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACA1N,KAAA2Y,UAAA,MAAAxP,GACAnJ,MAGAmd,SAAA,SAAAzP,GACA,IAAAvE,EAAAnJ,KAAAyY,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACA1N,KAAA2Y,UAAA,MAAAxP,GACAnJ,MAGAod,WAAA,SAAA1P,GACA,IAAAvE,EAAAnJ,KAAAyY,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACA1N,KAAA2Y,UAAA,MAAAxP,GACAnJ,MAGAqd,OAAA,SAAA3P,GACA,IAAAJ,EAAAtN,KAAAyY,OAAAnL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACA1N,KAAA2Y,UAAA,MAAArL,GACAtN,MAGAsd,QAAA,SAAA5P,GACA,IAAAJ,EAAAtN,KAAAyY,OAAAnL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACA1N,KAAA2Y,UAAA,MAAArL,GACAtN,MAGAud,UAAA,WACA,IAAA5R,EAAA3L,KAAAyY,OAAA9M,IAEAoB,EAAA,GAAApB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADA3L,KAAA2Y,UAAA,OAAA5L,QACA/M,MAGAwd,QAAA,SAAA9P,GACA,IAAAmM,EAAA7Z,KAAAyY,OAAAoB,MAEA,OADA7Z,KAAA2Y,UAAA,QAAAkB,IAAAnM,GACA1N,MAGAyd,QAAA,SAAA/P,GACA,IAAAmM,EAAA7Z,KAAAyY,OAAAoB,MAEA,OADA7Z,KAAA2Y,UAAA,QAAAkB,IAAAnM,GACA1N,MAGA0d,OAAA,SAAAC,GACA,IAAAxU,EAAAnJ,KAAAyY,OAAAtP,IACA6S,GAAA7S,EAAA,GAAAwU,GAAA,IAGA,OAFAxU,EAAA,GAAA6S,EAAA,MAAAA,IACAhc,KAAA2Y,UAAA,MAAAxP,GACAnJ,MAOA4d,IAAA,SAAAC,EAAAC,GACA,IACArB,EAAAoB,EACA1Q,OAAA5G,IAAAuX,EAAA,GAAAA,EAEA5R,EAAA,EAAAiB,EAAA,EACAa,EALAhO,KAKA6Z,QAAA4C,EAAA5C,QAEAkE,IAAA7R,EAAA8B,IAAA,EAAA9B,KAAA8B,IAAA,EAAA9B,EAAA8B,IAAA,KACAgQ,EAAA,EAAAD,EAEA,OAAA/d,KACA2L,IACAoS,EAZA/d,KAYApB,MAAAof,EAAAvB,EAAA7d,MACAmf,EAbA/d,KAaAjB,QAAAif,EAAAvB,EAAA1d,QACAgf,EAdA/d,KAcAhB,OAAAgf,EAAAvB,EAAAzd,QAEA6a,MAhBA7Z,KAgBA6Z,QAAA1M,EAAAsP,EAAA5C,SAAA,EAAA1M,KAGA8Q,OAAA,WACA,OAAAje,KAAA2L,OAGAuS,MAAA,WAKA,IAGA/C,EAAAgD,EAHApc,EAAA,IAAAgZ,EACAqD,EAAApe,KAAAyY,OACA4F,EAAAtc,EAAA0W,OAGA,QAAA6F,KAAAF,EACAA,EAAA/V,eAAAiW,KACAnD,EAAAiD,EAAAE,GAEA,oBADAH,EAAA,GAAcvD,SAAA7C,KAAAoD,IAEdkD,EAAAC,GAAAnD,EAAArD,MAAA,GACK,oBAAAqG,EACLE,EAAAC,GAAAnD,EAEAzU,QAAAC,MAAA,0BAAAwU,IAKA,OAAApZ,IAIAgZ,EAAAlD,UAAA0G,OAAA,CACA5S,IAAA,uBACAxC,IAAA,iCACAS,IAAA,6BACA0D,IAAA,gCACAK,KAAA,qCAGAoN,EAAAlD,UAAA2G,MAAA,CACA7S,IAAA,cACAxC,IAAA,cACAS,IAAA,cACA0D,IAAA,cACAK,KAAA,mBAGAoN,EAAAlD,UAAAa,UAAA,SAAAF,GAIA,IAHA,IAAAC,EAAAzY,KAAAyY,OACAG,EAAA,GAEAxS,EAAA,EAAgBA,EAAAoS,EAAAlS,OAAkBF,IAClCwS,EAAAJ,EAAAiG,OAAArY,IAAAqS,EAAAD,GAAApS,GAQA,OALA,IAAAqS,EAAAoB,QACAjB,EAAA5K,EAAAyK,EAAAoB,OAIAjB,GAGAmC,EAAAlD,UAAAc,UAAA,SAAAH,EAAAI,GACA,IAIAxS,EAkCAsY,EAtCAjG,EAAAzY,KAAAyY,OACA8F,EAAAve,KAAAue,OACAC,EAAAxe,KAAAwe,MACA3E,EAAA,EAKA,GAFA7Z,KAAAib,OAAA,EAEA,UAAAzC,EACAqB,EAAAjB,OACE,GAAAA,EAAAtS,OAEFmS,EAAAD,GAAAI,EAAAd,MAAA,EAAAU,EAAAlS,QACAuT,EAAAjB,EAAAJ,EAAAlS,aACE,QAAAC,IAAAqS,EAAAJ,EAAAiG,OAAA,KAEF,IAAArY,EAAA,EAAaA,EAAAoS,EAAAlS,OAAkBF,IAC/BqS,EAAAD,GAAApS,GAAAwS,EAAAJ,EAAAiG,OAAArY,IAGAyT,EAAAjB,EAAA5K,OACE,QAAAzH,IAAAqS,EAAA2F,EAAA/F,GAAA,KAEF,IAAAmG,EAAAJ,EAAA/F,GAEA,IAAApS,EAAA,EAAaA,EAAAoS,EAAAlS,OAAkBF,IAC/BqS,EAAAD,GAAApS,GAAAwS,EAAA+F,EAAAvY,IAGAyT,EAAAjB,EAAAiB,MAKA,GAFApB,EAAAoB,MAAA7N,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAAxF,IAAAsT,EAAApB,EAAAoB,UAEA,UAAArB,EACA,SAMA,IAAApS,EAAA,EAAYA,EAAAoS,EAAAlS,OAAkBF,IAC9BsY,EAAA1S,KAAAC,IAAA,EAAAD,KAAAD,IAAAyS,EAAAhG,GAAApS,GAAAqS,EAAAD,GAAApS,KACAqS,EAAAD,GAAApS,GAAA4F,KAAAqM,MAAAqG,GAIA,QAAAE,KAAAL,EACAK,IAAApG,IACAC,EAAAmG,GAAA9F,EAAAN,GAAAoG,GAAAnG,EAAAD,KAIA,UAGAuC,EAAAlD,UAAAyD,SAAA,SAAA9C,EAAAzP,GACA,IAAA6P,EAAA7P,EAAA,GAEA,YAAAxC,IAAAqS,EAEA5Y,KAAA0Y,UAAAF,IAIA,iBAAAI,IACAA,EAAAhB,MAAAC,UAAAC,MAAAC,KAAAhP,IAGA/I,KAAA2Y,UAAAH,EAAAI,GACA5Y,OAGA+a,EAAAlD,UAAAkE,WAAA,SAAAvD,EAAAqG,EAAA9R,GACA,IAAA+R,EAAA9e,KAAAyY,OAAAD,GACA,YAAAjS,IAAAwG,EAEA+R,EAAAD,GACE9R,IAAA+R,EAAAD,GAEF7e,MAIA8e,EAAAD,GAAA9R,EACA/M,KAAA2Y,UAAAH,EAAAsG,GAEA9e,OAGA,oBAAAtB,SACAA,OAAAqc,SAGA,IAiBAzX,EAjBAyb,EAAAhE,EAKAiE,EAAA,CAIAC,KAAA,aAOAC,KACA5b,EAAA,EACA,WACA,OAAAA,MAUA6b,cAAA,SAAAhE,GACA,OAAAA,SASAiE,QAAA,SAAAjE,GACA,GAAAvD,MAAAwH,SAAAxH,MAAAwH,QAAAjE,GACA,SAEA,IAAAgD,EAAAkB,OAAAxH,UAAA+C,SAAA7C,KAAAoD,GACA,kBAAAgD,EAAAmB,OAAA,iBAAAnB,EAAAmB,QAAA,IAYAC,SAAA,SAAApE,GACA,cAAAA,GAAA,oBAAAkE,OAAAxH,UAAA+C,SAAA7C,KAAAoD,IAQAqE,SAAA,SAAArE,GACA,wBAAAA,gBAAAsE,SAAAD,SAAArE,IASAuE,eAAA,SAAAvE,EAAAwE,GACA,gBAAAxE,EAAAwE,EAAAxE,GAUAyE,sBAAA,SAAAzE,EAAA0D,EAAAc,GACA,OAAAX,EAAAU,eAAAV,EAAAI,QAAAjE,KAAA0D,GAAA1D,EAAAwE,IAWAE,SAAA,SAAAC,EAAA/W,EAAAgX,GACA,GAAAD,GAAA,mBAAAA,EAAA/H,KACA,OAAA+H,EAAAE,MAAAD,EAAAhX,IAaAkX,KAAA,SAAAC,EAAAJ,EAAAC,EAAAI,GACA,IAAA/Z,EAAAC,EAAA+Z,EACA,GAAApB,EAAAI,QAAAc,GAEA,GADA7Z,EAAA6Z,EAAA5Z,OACA6Z,EACA,IAAA/Z,EAAAC,EAAA,EAAqBD,GAAA,EAAQA,IAC7B0Z,EAAA/H,KAAAgI,EAAAG,EAAA9Z,WAGA,IAAAA,EAAA,EAAeA,EAAAC,EAASD,IACxB0Z,EAAA/H,KAAAgI,EAAAG,EAAA9Z,WAGG,GAAA4Y,EAAAO,SAAAW,GAGH,IAFAE,EAAAf,OAAAe,KAAAF,GACA7Z,EAAA+Z,EAAA9Z,OACAF,EAAA,EAAcA,EAAAC,EAASD,IACvB0Z,EAAA/H,KAAAgI,EAAAG,EAAAE,EAAAha,IAAAga,EAAAha,KAYAia,YAAA,SAAAC,EAAAC,GACA,IAAAna,EAAAoa,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAAha,SAAAia,EAAAja,OACA,SAGA,IAAAF,EAAA,EAAAoa,EAAAF,EAAAha,OAA+BF,EAAAoa,IAAUpa,EAIzC,GAHAqa,EAAAH,EAAAla,GACAsa,EAAAH,EAAAna,GAEAqa,aAAA7I,OAAA8I,aAAA9I,OACA,IAAAoH,EAAAqB,YAAAI,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQAxC,MAAA,SAAAE,GACA,GAAAY,EAAAI,QAAAhB,GACA,OAAAA,EAAAnZ,IAAA+Z,EAAAd,OAGA,GAAAc,EAAAO,SAAAnB,GAAA,CAMA,IALA,IAAAC,EAAA,GACA+B,EAAAf,OAAAe,KAAAhC,GACAuC,EAAAP,EAAA9Z,OACA6F,EAAA,EAESA,EAAAwU,IAAUxU,EACnBkS,EAAA+B,EAAAjU,IAAA6S,EAAAd,MAAAE,EAAAgC,EAAAjU,KAGA,OAAAkS,EAGA,OAAAD,GAQAwC,QAAA,SAAArJ,EAAA8G,EAAAD,EAAA9c,GACA,IAAAuf,EAAAxC,EAAA9G,GACAuJ,EAAA1C,EAAA7G,GAEAyH,EAAAO,SAAAsB,IAAA7B,EAAAO,SAAAuB,GACA9B,EAAA+B,MAAAF,EAAAC,EAAAxf,GAEA+c,EAAA9G,GAAAyH,EAAAd,MAAA4C,IAQAE,UAAA,SAAAzJ,EAAA8G,EAAAD,GACA,IAAAyC,EAAAxC,EAAA9G,GACAuJ,EAAA1C,EAAA7G,GAEAyH,EAAAO,SAAAsB,IAAA7B,EAAAO,SAAAuB,GACA9B,EAAAiC,QAAAJ,EAAAC,GACGzC,EAAAhW,eAAAkP,KACH8G,EAAA9G,GAAAyH,EAAAd,MAAA4C,KAaAC,MAAA,SAAA1C,EAAAD,EAAA9c,GACA,IAEAyf,EAAA3a,EAAAga,EAAAO,EAAAxU,EAFA+U,EAAAlC,EAAAI,QAAAhB,KAAA,CAAAA,GACAoC,EAAAU,EAAA5a,OAGA,IAAA0Y,EAAAO,SAAAlB,GACA,OAAAA,EAMA,IAFA0C,GADAzf,KAAA,IACA6f,QAAAnC,EAAA4B,QAEAxa,EAAA,EAAaA,EAAAoa,IAAUpa,EAEvB,GADAgY,EAAA8C,EAAA9a,GACA4Y,EAAAO,SAAAnB,GAKA,IADAgC,EAAAf,OAAAe,KAAAhC,GACAjS,EAAA,EAAAwU,EAAAP,EAAA9Z,OAAkC6F,EAAAwU,IAAUxU,EAC5C4U,EAAAX,EAAAjU,GAAAkS,EAAAD,EAAA9c,GAIA,OAAA+c,GAUA4C,QAAA,SAAA5C,EAAAD,GACA,OAAAY,EAAA+B,MAAA1C,EAAAD,EAAA,CAAwC+C,OAAAnC,EAAAgC,aAUxCI,OAAA,SAAA/C,GAIA,IAHA,IAAAgD,EAAA,SAAAlG,EAAA5D,GACA8G,EAAA9G,GAAA4D,GAEA/U,EAAA,EAAAoa,EAAAxI,UAAA1R,OAA0CF,EAAAoa,IAAUpa,EACpD4Y,EAAAiB,KAAAjI,UAAA5R,GAAAib,GAEA,OAAAhD,GAMAiD,SAAA,SAAAC,GACA,IAAAC,EAAAxhB,KACAyhB,EAAAF,KAAAlZ,eAAA,eAAAkZ,EAAAG,YAAA,WACA,OAAAF,EAAAxB,MAAAhgB,KAAAgY,YAGA2J,EAAA,WACA3hB,KAAA0hB,YAAAD,GAYA,OATAE,EAAA9J,UAAA2J,EAAA3J,UACA4J,EAAA5J,UAAA,IAAA8J,EACAF,EAAAL,OAAApC,EAAAsC,SAEAC,GACAvC,EAAAoC,OAAAK,EAAA5J,UAAA0J,GAGAE,EAAAG,UAAAJ,EAAA3J,UACA4J,IAIAI,EAAA7C,EAWAA,EAAA8C,aAAA9C,EAAAa,SAUAb,EAAA+C,QAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAtK,MAAAC,UAAAkK,QAAAhK,KAAAiK,EAAAC,EAAAC,IAUAlD,EAAAmD,kBAAAnD,EAAAU,eASAV,EAAAoD,yBAAApD,EAAAY,sBAOA,IAAAyC,EAAA,CACAC,OAAA,SAAAjV,GACA,OAAAA,GAGAkV,WAAA,SAAAlV,GACA,OAAAA,KAGAmV,YAAA,SAAAnV,GACA,OAAAA,KAAA,IAGAoV,cAAA,SAAApV,GACA,OAAAA,GAAA,MACA,GAAAA,KAEA,MAAAA,KAAA,OAGAqV,YAAA,SAAArV,GACA,OAAAA,OAGAsV,aAAA,SAAAtV,GACA,OAAAA,GAAA,GAAAA,IAAA,GAGAuV,eAAA,SAAAvV,GACA,OAAAA,GAAA,MACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAGAwV,YAAA,SAAAxV,GACA,OAAAA,SAGAyV,aAAA,SAAAzV,GACA,SAAAA,GAAA,GAAAA,MAAA,IAGA0V,eAAA,SAAA1V,GACA,OAAAA,GAAA,MACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAGA2V,YAAA,SAAA3V,GACA,OAAAA,WAGA4V,aAAA,SAAA5V,GACA,OAAAA,GAAA,GAAAA,QAAA,GAGA6V,eAAA,SAAA7V,GACA,OAAAA,GAAA,MACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAGA8V,WAAA,SAAA9V,GACA,SAAArB,KAAAsC,IAAAjB,GAAArB,KAAAmC,GAAA,KAGAiV,YAAA,SAAA/V,GACA,OAAArB,KAAAuC,IAAAlB,GAAArB,KAAAmC,GAAA,KAGAkV,cAAA,SAAAhW,GACA,WAAArB,KAAAsC,IAAAtC,KAAAmC,GAAAd,GAAA,IAGAiW,WAAA,SAAAjW,GACA,WAAAA,EAAA,EAAArB,KAAAO,IAAA,MAAAc,EAAA,KAGAkW,YAAA,SAAAlW,GACA,WAAAA,EAAA,IAAArB,KAAAO,IAAA,MAAAc,IAGAmW,cAAA,SAAAnW,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,MACA,GAAArB,KAAAO,IAAA,MAAAc,EAAA,IAEA,MAAArB,KAAAO,IAAA,QAAAc,KAGAoW,WAAA,SAAApW,GACA,OAAAA,GAAA,EACAA,IAEArB,KAAAoC,KAAA,EAAAf,KAAA,IAGAqW,YAAA,SAAArW,GACA,OAAArB,KAAAoC,KAAA,GAAAf,GAAA,GAAAA,IAGAsW,cAAA,SAAAtW,GACA,OAAAA,GAAA,OACA,IAAArB,KAAAoC,KAAA,EAAAf,KAAA,GAEA,IAAArB,KAAAoC,KAAA,GAAAf,GAAA,GAAAA,GAAA,IAGAuW,cAAA,SAAAvW,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAa,EAAA,GACAA,EAAA,EACA3E,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAAnB,KAAAmC,IAAAnC,KAAA6X,KAAA,EAAA7V,IAEAA,EAAAhC,KAAAO,IAAA,MAAAc,GAAA,IAAArB,KAAAuC,KAAAlB,EAAAhE,IAAA,EAAA2C,KAAAmC,IAAAhB,KAGA2W,eAAA,SAAAzW,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAa,EAAA,GACAA,EAAA,EACA3E,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAAnB,KAAAmC,IAAAnC,KAAA6X,KAAA,EAAA7V,GAEAA,EAAAhC,KAAAO,IAAA,MAAAc,GAAArB,KAAAuC,KAAAlB,EAAAhE,IAAA,EAAA2C,KAAAmC,IAAAhB,GAAA,IAGA4W,iBAAA,SAAA1W,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,GAAA,IACA,GAEAF,IACAA,EAAA,KAEAa,EAAA,GACAA,EAAA,EACA3E,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAAnB,KAAAmC,IAAAnC,KAAA6X,KAAA,EAAA7V,GAEAX,EAAA,EACAW,EAAAhC,KAAAO,IAAA,MAAAc,GAAA,IAAArB,KAAAuC,KAAAlB,EAAAhE,IAAA,EAAA2C,KAAAmC,IAAAhB,IAAA,GAEAa,EAAAhC,KAAAO,IAAA,OAAAc,GAAA,IAAArB,KAAAuC,KAAAlB,EAAAhE,IAAA,EAAA2C,KAAAmC,IAAAhB,GAAA,OAEA6W,WAAA,SAAA3W,GACA,IAAAhE,EAAA,QACA,OAAAgE,MAAAhE,EAAA,GAAAgE,EAAAhE,IAGA4a,YAAA,SAAA5W,GACA,IAAAhE,EAAA,QACA,OAAAgE,GAAA,GAAAA,IAAAhE,EAAA,GAAAgE,EAAAhE,GAAA,GAGA6a,cAAA,SAAA7W,GACA,IAAAhE,EAAA,QACA,OAAAgE,GAAA,MACAA,MAAA,GAAAhE,GAAA,QAAAgE,EAAAhE,GAAA,GAEA,KAAAgE,GAAA,GAAAA,IAAA,GAAAhE,GAAA,QAAAgE,EAAAhE,GAAA,IAGA8a,aAAA,SAAA9W,GACA,SAAAgV,EAAA+B,cAAA,EAAA/W,IAGA+W,cAAA,SAAA/W,GACA,OAAAA,EAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAGAgX,gBAAA,SAAAhX,GACA,OAAAA,EAAA,GACA,GAAAgV,EAAA8B,aAAA,EAAA9W,GAEA,GAAAgV,EAAA+B,cAAA,EAAA/W,EAAA,QAIAiX,EAAA,CACAjC,WAYAR,EAAA0C,cAAAlC,EAEA,IAAAlU,EAAAnC,KAAAmC,GACAqW,EAAArW,EAAA,IACAsW,GAAA,EAAAtW,EACAuW,GAAAvW,EAAA,EACAwW,GAAAxW,EAAA,EACAyW,GAAA,EAAAzW,EAAA,EAKA0W,GAAA,CAKAC,MAAA,SAAAC,GACAA,EAAAthB,IAAAuhB,UAAA,IAAAD,EAAAphB,MAAAohB,EAAAlhB,SAcAohB,YAAA,SAAAxhB,EAAA+I,EAAAC,EAAA9I,EAAAE,EAAAqhB,GACA,GAAAA,EAAA,CACA,IAAAtZ,EAAAI,KAAAD,IAAAmZ,EAAArhB,EAAA,EAAAF,EAAA,GACAwhB,EAAA3Y,EAAAZ,EACAwZ,EAAA3Y,EAAAb,EACAyZ,EAAA7Y,EAAA7I,EAAAiI,EACA0Z,EAAA7Y,EAAA5I,EAAA+H,EAEAnI,EAAA8hB,OAAA/Y,EAAA4Y,GACAD,EAAAE,GAAAD,EAAAE,GACA7hB,EAAA+hB,IAAAL,EAAAC,EAAAxZ,GAAAuC,GAAAuW,IACAjhB,EAAA+hB,IAAAH,EAAAD,EAAAxZ,GAAA8Y,GAAA,GACAjhB,EAAA+hB,IAAAH,EAAAC,EAAA1Z,EAAA,EAAA8Y,IACAjhB,EAAA+hB,IAAAL,EAAAG,EAAA1Z,EAAA8Y,GAAAvW,IACIgX,EAAAE,GACJ5hB,EAAA8hB,OAAAJ,EAAA1Y,GACAhJ,EAAA+hB,IAAAH,EAAAD,EAAAxZ,GAAA8Y,OACAjhB,EAAA+hB,IAAAL,EAAAC,EAAAxZ,EAAA8Y,GAAAvW,EAAAuW,KACIU,EAAAE,GACJ7hB,EAAA+hB,IAAAL,EAAAC,EAAAxZ,GAAAuC,EAAA,GACA1K,EAAA+hB,IAAAL,EAAAG,EAAA1Z,EAAA,EAAAuC,IAEA1K,EAAA+hB,IAAAL,EAAAC,EAAAxZ,GAAAuC,KAEA1K,EAAAgiB,YACAhiB,EAAA8hB,OAAA/Y,EAAAC,QAEAhJ,EAAAiiB,KAAAlZ,EAAAC,EAAA9I,EAAAE,IAIA8hB,UAAA,SAAAliB,EAAAmiB,EAAAV,EAAA1Y,EAAAC,EAAAoZ,GACA,IAAA1H,EAAA2H,EAAAC,EAAAC,EAAAC,EACAC,GAAAL,GAAA,GAAArB,EAEA,IAAAoB,GAAA,iBAAAA,GAEA,+BADAzH,EAAAyH,EAAAhL,aACA,+BAAAuD,GAMA,KAAA3c,MAAA0jB,OAAA,IAMA,OAFAzhB,EAAA0iB,YAEAP,GAEA,QACAniB,EAAA+hB,IAAAhZ,EAAAC,EAAAyY,EAAA,EAAAT,IACAhhB,EAAAgiB,YACA,MACA,eACAhiB,EAAA8hB,OAAA/Y,EAAAR,KAAAuC,IAAA2X,GAAAhB,EAAAzY,EAAAT,KAAAsC,IAAA4X,GAAAhB,GACAgB,GAAAtB,GACAnhB,EAAA2iB,OAAA5Z,EAAAR,KAAAuC,IAAA2X,GAAAhB,EAAAzY,EAAAT,KAAAsC,IAAA4X,GAAAhB,GACAgB,GAAAtB,GACAnhB,EAAA2iB,OAAA5Z,EAAAR,KAAAuC,IAAA2X,GAAAhB,EAAAzY,EAAAT,KAAAsC,IAAA4X,GAAAhB,GACAzhB,EAAAgiB,YACA,MACA,kBASAO,EAAAd,GADAe,EAAA,KAAAf,GAEAY,EAAA9Z,KAAAsC,IAAA4X,EAAAvB,IAAAqB,EACAD,EAAA/Z,KAAAuC,IAAA2X,EAAAvB,IAAAqB,EACAviB,EAAA+hB,IAAAhZ,EAAAsZ,EAAArZ,EAAAsZ,EAAAE,EAAAC,EAAA/X,EAAA+X,EAAAxB,IACAjhB,EAAA+hB,IAAAhZ,EAAAuZ,EAAAtZ,EAAAqZ,EAAAG,EAAAC,EAAAxB,GAAAwB,GACAziB,EAAA+hB,IAAAhZ,EAAAsZ,EAAArZ,EAAAsZ,EAAAE,EAAAC,IAAAxB,IACAjhB,EAAA+hB,IAAAhZ,EAAAuZ,EAAAtZ,EAAAqZ,EAAAG,EAAAC,EAAAxB,GAAAwB,EAAA/X,GACA1K,EAAAgiB,YACA,MACA,WACA,IAAAI,EAAA,CACAG,EAAAha,KAAAqa,QAAAnB,EACAzhB,EAAAiiB,KAAAlZ,EAAAwZ,EAAAvZ,EAAAuZ,EAAA,EAAAA,EAAA,EAAAA,GACA,MAEAE,GAAAvB,GAEA,cACAmB,EAAA9Z,KAAAsC,IAAA4X,GAAAhB,EACAa,EAAA/Z,KAAAuC,IAAA2X,GAAAhB,EACAzhB,EAAA8hB,OAAA/Y,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA2iB,OAAA5Z,EAAAuZ,EAAAtZ,EAAAqZ,GACAriB,EAAA2iB,OAAA5Z,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA2iB,OAAA5Z,EAAAuZ,EAAAtZ,EAAAqZ,GACAriB,EAAAgiB,YACA,MACA,eACAS,GAAAvB,GAEA,YACAmB,EAAA9Z,KAAAsC,IAAA4X,GAAAhB,EACAa,EAAA/Z,KAAAuC,IAAA2X,GAAAhB,EACAzhB,EAAA8hB,OAAA/Y,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA2iB,OAAA5Z,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA8hB,OAAA/Y,EAAAuZ,EAAAtZ,EAAAqZ,GACAriB,EAAA2iB,OAAA5Z,EAAAuZ,EAAAtZ,EAAAqZ,GACA,MACA,WACAA,EAAA9Z,KAAAsC,IAAA4X,GAAAhB,EACAa,EAAA/Z,KAAAuC,IAAA2X,GAAAhB,EACAzhB,EAAA8hB,OAAA/Y,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA2iB,OAAA5Z,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA8hB,OAAA/Y,EAAAuZ,EAAAtZ,EAAAqZ,GACAriB,EAAA2iB,OAAA5Z,EAAAuZ,EAAAtZ,EAAAqZ,GACAI,GAAAvB,GACAmB,EAAA9Z,KAAAsC,IAAA4X,GAAAhB,EACAa,EAAA/Z,KAAAuC,IAAA2X,GAAAhB,EACAzhB,EAAA8hB,OAAA/Y,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA2iB,OAAA5Z,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA8hB,OAAA/Y,EAAAuZ,EAAAtZ,EAAAqZ,GACAriB,EAAA2iB,OAAA5Z,EAAAuZ,EAAAtZ,EAAAqZ,GACA,MACA,WACAA,EAAA9Z,KAAAsC,IAAA4X,GAAAhB,EACAa,EAAA/Z,KAAAuC,IAAA2X,GAAAhB,EACAzhB,EAAA8hB,OAAA/Y,EAAAsZ,EAAArZ,EAAAsZ,GACAtiB,EAAA2iB,OAAA5Z,EAAAsZ,EAAArZ,EAAAsZ,GACA,MACA,WACAtiB,EAAA8hB,OAAA/Y,EAAAC,GACAhJ,EAAA2iB,OAAA5Z,EAAAR,KAAAsC,IAAA4X,GAAAhB,EAAAzY,EAAAT,KAAAuC,IAAA2X,GAAAhB,GAIAzhB,EAAA6iB,OACA7iB,EAAA8iB,eAnGA9iB,EAAA+iB,UAAAZ,EAAApZ,EAAAoZ,EAAAjiB,MAAA,EAAA8I,EAAAmZ,EAAA/hB,OAAA,EAAA+hB,EAAAjiB,MAAAiiB,EAAA/hB,SA6GA4iB,eAAA,SAAAC,EAAAC,GAGA,OAAAD,EAAAla,EAAAma,EAAAxB,KAFA,MAEAuB,EAAAla,EAAAma,EAAAtB,MAFA,MAGAqB,EAAAja,EAAAka,EAAAvB,IAHA,MAGAsB,EAAAja,EAAAka,EAAArB,OAHA,MAMAsB,SAAA,SAAAnjB,EAAAkjB,GACAljB,EAAAojB,OACApjB,EAAA0iB,YACA1iB,EAAAiiB,KAAAiB,EAAAxB,KAAAwB,EAAAvB,IAAAuB,EAAAtB,MAAAsB,EAAAxB,KAAAwB,EAAArB,OAAAqB,EAAAvB,KACA3hB,EAAAqjB,QAGAC,WAAA,SAAAtjB,GACAA,EAAAujB,WAGAZ,OAAA,SAAA3iB,EAAAwjB,EAAA5I,EAAA6I,GACA,IAAAC,EAAA9I,EAAA+I,YACA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAAza,EAAA6R,EAAA7R,GAAA,EACA/I,EAAA2iB,OAAAiB,EAAAH,EAAA7I,EAAA5R,EAAAwa,EAAAxa,GACAhJ,EAAA2iB,OAAAiB,EAAAH,EAAAD,EAAAxa,EAAA4R,EAAA5R,OACI,UAAA0a,IAAAD,GAAA,UAAAC,GAAAD,EACJzjB,EAAA2iB,OAAAa,EAAAza,EAAA6R,EAAA5R,GAEAhJ,EAAA2iB,OAAA/H,EAAA7R,EAAAya,EAAAxa,GAEAhJ,EAAA2iB,OAAA/H,EAAA7R,EAAA6R,EAAA5R,QAIA4R,EAAAiJ,QAKA7jB,EAAA8jB,cACAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBACAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBACAT,EAAA7I,EAAAoJ,kBAAApJ,EAAAmJ,sBACAN,EAAA7I,EAAAsJ,kBAAAtJ,EAAAqJ,sBACArJ,EAAA7R,EACA6R,EAAA5R,GAVAhJ,EAAA2iB,OAAA/H,EAAA7R,EAAA6R,EAAA5R,KAcAmb,GAAA/C,GAWAhD,EAAAiD,MAAAD,GAAAC,MASAjD,EAAAgG,qBAAA,SAAApkB,GACAA,EAAA0iB,YACAtB,GAAAI,YAAAjF,MAAA6E,GAAA7M,YAGA,IAAApQ,GAAA,CAIAkgB,KAAA,SAAAC,EAAAtP,GACA,OAAAoJ,EAAAd,MAAA/gB,KAAA+nB,KAAA/nB,KAAA+nB,GAAA,IAA4DtP,KAI5D7Q,GAAAkgB,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAA3gB,GAEA8X,GAAAmC,EAAAnC,eAuBA8I,GAAA,CASAC,aAAA,SAAAtN,EAAA6K,GACA,IAAA0C,GAAA,GAAAvN,GAAAd,MAAA,wCACA,IAAAqO,GAAA,WAAAA,EAAA,GACA,WAAA1C,EAKA,OAFA7K,GAAAuN,EAAA,GAEAA,EAAA,IACA,SACA,OAAAvN,EACA,QACAA,GAAA,IAMA,OAAA6K,EAAA7K,GAUAwN,UAAA,SAAAxN,GACA,IAAA9N,EAAAzB,EAAAE,EAAAxC,EAWA,OATAuY,EAAAtC,SAAApE,IACA9N,GAAA8N,EAAAiK,KAAA,EACAxZ,GAAAuP,EAAAkK,OAAA,EACAvZ,GAAAqP,EAAAmK,QAAA,EACAhc,GAAA6R,EAAAgK,MAAA,GAEA9X,EAAAzB,EAAAE,EAAAxC,GAAA6R,GAAA,EAGA,CACAiK,IAAA/X,EACAgY,MAAAzZ,EACA0Z,OAAAxZ,EACAqZ,KAAA7b,EACAzF,OAAAwJ,EAAAvB,EACAnI,MAAA2F,EAAAsC,IAWAgd,WAAA,SAAAtnB,GACA,IAAAunB,EAAAN,GAAA1gB,OACAme,EAAAtG,GAAApe,EAAAwnB,SAAAD,EAAAV,iBACAY,EAAA,CACAC,OAAAtJ,GAAApe,EAAA2nB,WAAAJ,EAAAX,mBACAgB,WAAArH,EAAAvgB,QAAAmnB,aAAA/I,GAAApe,EAAA4nB,WAAAL,EAAAR,mBAAArC,GACAA,OACAJ,MAAAlG,GAAApe,EAAA6nB,UAAAN,EAAAT,kBACAtK,OAAA,KACA1E,OAAA,IAIA,OADA2P,EAAA3P,OA7FA,SAAA2P,GACA,OAAAA,GAAAlH,EAAA1C,cAAA4J,EAAA/C,OAAAnE,EAAA1C,cAAA4J,EAAAC,QACA,MAGAD,EAAAnD,MAAAmD,EAAAnD,MAAA,SACAmD,EAAAjL,OAAAiL,EAAAjL,OAAA,QACAiL,EAAA/C,KAAA,MACA+C,EAAAC,OAqFAI,CAAAL,GACAA,GAYA9lB,QAAA,SAAAomB,EAAAC,EAAAzK,GACA,IAAAzY,EAAAoa,EAAArF,EAEA,IAAA/U,EAAA,EAAAoa,EAAA6I,EAAA/iB,OAAmCF,EAAAoa,IAAUpa,EAE7C,QAAAG,KADA4U,EAAAkO,EAAAjjB,WAIAG,IAAA+iB,GAAA,mBAAAnO,IACAA,IAAAmO,SAEA/iB,IAAAsY,GAAAgD,EAAAzC,QAAAjE,KACAA,IAAA0D,SAEAtY,IAAA4U,GACA,OAAAA,IAMAoO,GAAA1H,EACA2H,GAAAlF,EACA/gB,GAAAqkB,GACAtmB,GAAAknB,GACAe,GAAAC,UACAD,GAAAhmB,UACAgmB,GAAAjoB,WAmDA,IAAAmoB,GAAA,SAAAC,GACAH,GAAAnI,OAAAphB,KAAA0pB,GACA1pB,KAAAD,WAAAigB,MAAAhgB,KAAAgY,YAGAuR,GAAAnI,OAAAqI,GAAA5R,UAAA,CAEA9X,WAAA,WACAC,KAAA2pB,QAAA,GAGAC,MAAA,WACA,IAAApI,EAAAxhB,KAKA,OAJAwhB,EAAAqI,QACArI,EAAAqI,MAAAN,GAAArL,MAAAsD,EAAAsI,SAEAtI,EAAAuI,OAAA,GACAvI,GAGAwI,WAAA,SAAAC,GACA,IAAAzI,EAAAxhB,KACAkqB,EAAA1I,EAAAsI,OACAK,EAAA3I,EAAAuI,OACAK,EAAA5I,EAAAqI,MAGA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAA5I,EAAAqI,MAAA,IAGAM,IACAA,EAAA3I,EAAAuI,OAAA,IAvFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACA7jB,EAAAoa,EAAAjJ,EAAA8S,EAAAC,EAAAjM,EAAAF,EAAAoM,EAAAC,EADApK,EAAAf,OAAAe,KAAA8J,GAGA,IAAA9jB,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAgCF,EAAAoa,IAAUpa,EAa1C,GAZAmR,EAAA6I,EAAAha,GAEAiY,EAAA6L,EAAA3S,GAIA6S,EAAA/hB,eAAAkP,KACA6S,EAAA7S,GAAA8G,IAGAgM,EAAAD,EAAA7S,MAEA8G,GAAA,MAAA9G,EAAA,IAYA,GARA4S,EAAA9hB,eAAAkP,KACA4S,EAAA5S,GAAA8S,GAGAC,EAAAH,EAAA5S,IAEA4G,SAAAE,WAEAiM,EACA,cAAAnM,GAEA,IADAoM,EAAAxL,EAAAuL,IACArP,QACAuP,EAAAzL,EAAAV,IACApD,MAAA,CACAmP,EAAA7S,GAAAiT,EAAA5M,IAAA2M,EAAAN,GAAArQ,YACA,eAGI,GAAA2P,GAAA/J,SAAA8K,IAAAf,GAAA/J,SAAAnB,GAAA,CACJ+L,EAAA7S,GAAA+S,GAAAjM,EAAAiM,GAAAL,EACA,SAIAG,EAAA7S,GAAA8G,GA6CAoM,CAAAN,EAAAC,EAAAF,EAAAD,GAEAzI,IAfAA,EAAAqI,MAAAK,EACA1I,EAAAuI,OAAA,KACAvI,IAgBAkJ,gBAAA,WACA,OACAle,EAAAxM,KAAA8pB,OAAAtd,EACAC,EAAAzM,KAAA8pB,OAAArd,IAIAke,SAAA,WACA,OAAApB,GAAAqB,SAAA5qB,KAAA8pB,OAAAtd,IAAA+c,GAAAqB,SAAA5qB,KAAA8pB,OAAArd,MAIAgd,GAAArI,OAAAmI,GAAAjI,SAEA,IAAAuJ,GAAApB,GAEAqB,GAAAD,GAAAzJ,OAAA,CACA2D,MAAA,KACAgG,YAAA,EACAC,SAAA,GACAxB,OAAA,GACAyB,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAGAC,GAAAN,GAUAzL,OAAAgM,eAAAP,GAAAjT,UAAA,mBACA9W,IAAA,WACA,OAAAf,QAUAqf,OAAAgM,eAAAP,GAAAjT,UAAA,iBACA9W,IAAA,WACA,OAAAf,KAAA+kB,OAEAxgB,IAAA,SAAA4W,GACAnb,KAAA+kB,MAAA5J,KAIAoN,GAAAT,KAAA,UACAwD,UAAA,CACAC,SAAA,IACA/B,OAAA,eACAgC,WAAAjC,GAAAtK,KACAwM,WAAAlC,GAAAtK,QAIA,IAAAyM,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAA9G,EAAAuG,EAAAC,EAAAO,GACA,IACA1lB,EAAAoa,EADAmL,EAAA3rB,KAAA2rB,WAWA,IARAL,EAAAvG,QACAuG,EAAAS,UAAAC,KAAAvpB,MACA6oB,EAAAC,WAEAO,IACA/G,EAAAkH,WAAA,GAGA7lB,EAAA,EAAAoa,EAAAmL,EAAArlB,OAAuCF,EAAAoa,IAAUpa,EACjD,GAAAulB,EAAAvlB,GAAA2e,UAEA,YADA4G,EAAAvlB,GAAAklB,GAKAK,EAAA1kB,KAAAqkB,GAGA,IAAAK,EAAArlB,QACAtG,KAAAksB,yBAIAC,gBAAA,SAAApH,GACA,IAAAlG,EAAA0K,GAAA6C,UAAApsB,KAAA2rB,WAAA,SAAAL,GACA,OAAAA,EAAAvG,aAGA,IAAAlG,IACA7e,KAAA2rB,WAAAU,OAAAxN,EAAA,GACAkG,EAAAkH,WAAA,IAIAC,sBAAA,WACA,IAAA1K,EAAAxhB,KACA,OAAAwhB,EAAAoK,UAIApK,EAAAoK,QAAArC,GAAA+C,iBAAAvU,KAAArZ,OAAA,WACA8iB,EAAAoK,QAAA,KACApK,EAAA+K,kBAQAA,YAAA,WACAvsB,KAEAwsB,UAFAxsB,KAKA2rB,WAAArlB,OAAA,GALAtG,KAMAksB,yBAOAM,QAAA,WAMA,IALA,IACAlB,EAAAvG,EAAAiG,EAAAyB,EADAd,EAAA3rB,KAAA2rB,WAEAvlB,EAAA,EAGAA,EAAAulB,EAAArlB,QACAglB,EAAAK,EAAAvlB,GACA2e,EAAAuG,EAAAvG,MACAiG,EAAAM,EAAAN,SAIAyB,EAAAzgB,KAAAiB,OAAA+e,KAAAvpB,MAAA6oB,EAAAS,WAAAT,EAAAC,SAAAP,GAAA,EACAM,EAAAP,YAAA/e,KAAAD,IAAA0gB,EAAAzB,GAEAzB,GAAA1J,SAAAyL,EAAAL,OAAA,CAAAlG,EAAAuG,GAAAvG,GACAwE,GAAA1J,SAAAyL,EAAAJ,oBAAA,CAAAI,GAAAvG,GAEAuG,EAAAP,aAAAC,GACAzB,GAAA1J,SAAAyL,EAAAH,oBAAA,CAAAG,GAAAvG,GACAA,EAAAkH,WAAA,EACAN,EAAAU,OAAAjmB,EAAA,MAEAA,IAMAnD,GAAAsmB,GAAAjoB,QAAA2B,QAEAypB,GAAA,0CAgDA,SAAAC,GAAA3K,EAAA4K,GACA,IAAAC,EAAA7K,EAAA8K,SACA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAlO,EAAAkO,EAAAhL,QAAA6K,IACA,IAAA/N,GACAkO,EAAAV,OAAAxN,EAAA,GAGAkO,EAAAzmB,OAAA,IAIAomB,GAAA1lB,QAAA,SAAAuQ,UACAyK,EAAAzK,YAGAyK,EAAA8K,WAIA,IAAAE,GAAA,SAAAjI,EAAAkI,GACAjtB,KAAAD,WAAAglB,EAAAkI,IAGA1D,GAAAnI,OAAA4L,GAAAnV,UAAA,CAMAqV,mBAAA,KAMAC,gBAAA,KAEAptB,WAAA,SAAAglB,EAAAkI,GACAjtB,KACA+kB,QADA/kB,KAEA6e,MAAAoO,EAFAjtB,KAGAotB,aAHAptB,KAIAqtB,eAGAC,YAAA,SAAAL,GACAjtB,KAAA6e,MAAAoO,GAGAG,WAAA,WACA,IAAA5L,EAAAxhB,KACAutB,EAAA/L,EAAAgM,UACAC,EAAAjM,EAAAkM,aAEA,OAAAH,EAAAI,SAAAJ,EAAAI,WAAAnM,EAAAuD,MAAA6I,SACAL,EAAAI,QAAAF,EAAAE,SAAAnM,EAAAuD,MAAAzjB,QAAAssB,OAAAC,MAAA,GAAAvqB,IAEA,OAAAiqB,EAAAO,SAAAP,EAAAO,WAAAtM,EAAAuD,MAAA6I,SACAL,EAAAO,QAAAL,EAAAK,SAAAtM,EAAAuD,MAAAzjB,QAAAssB,OAAAG,MAAA,GAAAzqB,KAIAoqB,WAAA,WACA,OAAA1tB,KAAA+kB,MAAAzlB,KAAAgG,SAAAtF,KAAA6e,QAGA2O,QAAA,WACA,OAAAxtB,KAAA+kB,MAAAiJ,eAAAhuB,KAAA6e,QAGAoP,cAAA,SAAAC,GACA,OAAAluB,KAAA+kB,MAAA6I,OAAAM,IAMAC,iBAAA,WACA,OAAAnuB,KAAAwtB,UAAAM,SAMAM,iBAAA,WACA,OAAApuB,KAAAwtB,UAAAG,SAMAU,eAAA,WACA,OAAAruB,KAAAiuB,cAAAjuB,KAAAmuB,qBAMAG,eAAA,WACA,OAAAtuB,KAAAiuB,cAAAjuB,KAAAouB,qBAGAG,MAAA,WACAvuB,KAAAwuB,QAAA,IAMAC,QAAA,WACAzuB,KAAA0uB,OACA/B,GAAA3sB,KAAA0uB,MAAA1uB,OAIA2uB,kBAAA,WACA,IACAxQ,EADAne,KACAktB,mBACA,OAAA/O,GAAA,IAAAA,EAAA,CACAyQ,OAHA5uB,KAGA+kB,MACA8J,cAJA7uB,KAIA6e,SAIAiQ,eAAA,SAAAjQ,GACA,IACAV,EADAne,KACAmtB,gBACA,OAAAhP,GAAA,IAAAA,EAAA,CACAyQ,OAHA5uB,KAGA+kB,MACA8J,cAJA7uB,KAIA6e,MACAkQ,OAAAlQ,KAIAwO,YAAA,WACA,IAIAjnB,EAAAoa,EAHA+M,EADAvtB,KACAwtB,UACAluB,EAFAU,KAEA0tB,aAAApuB,MAAA,GACA0vB,EAAAzB,EAAAjuB,KAGA,IAAA8G,EAAA,EAAAoa,EAAAlhB,EAAAgH,OAAiCF,EAAAoa,IAAUpa,EAC3C4oB,EAAA5oB,GAAA4oB,EAAA5oB,IAPApG,KAOA8uB,eAAA1oB,GAGAmnB,EAAAE,QAAAF,EAAAE,SAVAztB,KAUA2uB,qBAGAM,mBAAA,SAAApQ,GACA,IAAA1a,EAAAnE,KAAA8uB,eAAAjQ,GACA7e,KAAAwtB,UAAAluB,KAAA+sB,OAAAxN,EAAA,EAAA1a,GACAnE,KAAAkvB,cAAA/qB,EAAA0a,GAAA,IAGAsQ,sBAAA,WACA,IAzMAnN,EAAA4K,EAyMApL,EAAAxhB,KACAytB,EAAAjM,EAAAkM,aACApuB,EAAAmuB,EAAAnuB,OAAAmuB,EAAAnuB,KAAA,IAKAkiB,EAAAkN,QAAApvB,IACAkiB,EAAAkN,OAEA/B,GAAAnL,EAAAkN,MAAAlN,GAGAliB,GAAA+f,OAAA+P,aAAA9vB,KAtNAstB,EAuNApL,GAvNAQ,EAuNA1iB,GAtNAwtB,SACA9K,EAAA8K,SAAAC,UAAA9lB,KAAA2lB,IAIAvN,OAAAgM,eAAArJ,EAAA,YACAqN,cAAA,EACAC,YAAA,EACAnU,MAAA,CACA4R,UAAA,CAAAH,MAIAF,GAAA1lB,QAAA,SAAAuQ,GACA,IAAAgY,EAAA,SAAAhY,EAAAkH,OAAA,GAAA5D,cAAAtD,EAAAO,MAAA,GACA0X,EAAAxN,EAAAzK,GAEA8H,OAAAgM,eAAArJ,EAAAzK,EAAA,CACA8X,cAAA,EACAC,YAAA,EACAnU,MAAA,WACA,IAAApS,EAAA6O,MAAAC,UAAAC,MAAAC,KAAAC,WACAyX,EAAAD,EAAAxP,MAAAhgB,KAAA+I,GAQA,OANAwgB,GAAAtJ,KAAA+B,EAAA8K,SAAAC,UAAA,SAAA2C,GACA,mBAAAA,EAAAH,IACAG,EAAAH,GAAAvP,MAAA0P,EAAA3mB,KAIA0mB,SA0LAjO,EAAAkN,MAAApvB,GAKAkiB,EAAAmO,kBAGAnB,OAAAjF,GAAAtK,KAEA+K,WAAA,SAAA4F,GAMA,IALA,IAAArC,EAAAvtB,KAAAwtB,UACAqC,EAAAtC,EAAAjuB,MAAA,GACAkhB,EAAAqP,EAAAvpB,OACAF,EAAA,EAEQA,EAAAoa,IAAUpa,EAClBypB,EAAAzpB,GAAA4jB,WAAA4F,GAGArC,EAAAE,SACAF,EAAAE,QAAAzD,WAAA4F,IAIAE,KAAA,WACA,IAAAvC,EAAAvtB,KAAAwtB,UACAqC,EAAAtC,EAAAjuB,MAAA,GACAkhB,EAAAqP,EAAAvpB,OACAF,EAAA,EAMA,IAJAmnB,EAAAE,SACAF,EAAAE,QAAAqC,OAGQ1pB,EAAAoa,IAAUpa,EAClBypB,EAAAzpB,GAAA0pB,QAIAC,iBAAA,SAAA5rB,GACAolB,GAAAxI,MAAA5c,EAAA2lB,OAAA3lB,EAAA6rB,gBAAA,WACA7rB,EAAA6rB,gBAGAC,cAAA,SAAA9rB,GACA,IAAAspB,EAAAztB,KAAA+kB,MAAAzlB,KAAAgG,SAAAnB,EAAA0qB,eACAhQ,EAAA1a,EAAA4qB,OACAmB,EAAA/rB,EAAA+rB,QAAA,GACAhG,EAAA/lB,EAAA2lB,OACAqG,EAAA5G,GAAA4G,cAEAhsB,EAAA6rB,eAAA,CACArqB,gBAAAukB,EAAAvkB,gBACAC,YAAAskB,EAAAtkB,YACAC,YAAAqkB,EAAArkB,aAGAqkB,EAAAvkB,gBAAA1C,GAAA,CAAAitB,EAAAE,qBAAA3C,EAAA2C,qBAAAD,EAAAjG,EAAAvkB,uBAAAY,EAAAsY,GACAqL,EAAAtkB,YAAA3C,GAAA,CAAAitB,EAAAG,iBAAA5C,EAAA4C,iBAAAF,EAAAjG,EAAAtkB,mBAAAW,EAAAsY,GACAqL,EAAArkB,YAAA5C,GAAA,CAAAitB,EAAAI,iBAAA7C,EAAA6C,iBAAApG,EAAArkB,kBAAAU,EAAAsY,IAMA8Q,eAAA,WACA,IACApC,EADAvtB,KACAwtB,UACAluB,EAFAU,KAEA0tB,aAAApuB,KACAixB,EAAAhD,EAAAjuB,KAAAgH,OACAkqB,EAAAlxB,EAAAgH,OAEAkqB,EAAAD,EACAhD,EAAAjuB,KAAA+sB,OAAAmE,EAAAD,EAAAC,GACGA,EAAAD,GARHvwB,KASAywB,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAtG,EAAAuG,GACA,QAAAtqB,EAAA,EAAiBA,EAAAsqB,IAAWtqB,EAC5BpG,KAAAivB,mBAAA9E,EAAA/jB,IAOAuqB,WAAA,WACA,IAAAD,EAAA1Y,UAAA1R,OACAtG,KAAAywB,eAAAzwB,KAAA0tB,aAAApuB,KAAAgH,OAAAoqB,MAMAE,UAAA,WACA5wB,KAAAwtB,UAAAluB,KAAAuxB,OAMAC,YAAA,WACA9wB,KAAAwtB,UAAAluB,KAAAyxB,SAMAC,aAAA,SAAA7G,EAAAuG,GACA1wB,KAAAwtB,UAAAluB,KAAA+sB,OAAAlC,EAAAuG,GACA1wB,KAAAywB,eAAAtG,EAAAnS,UAAA1R,OAAA,IAMA2qB,cAAA,WACAjxB,KAAAywB,eAAA,EAAAzY,UAAA1R,WAIA0mB,GAAA5L,OAAAmI,GAAAjI,SAEA,IAAA4P,GAAAlE,GAEAzE,GAAAT,KAAA,UACA+H,SAAA,CACArK,IAAA,CACA7f,gBAAA4iB,GAAA1gB,OAAAmgB,aACApiB,YAAA,OACAC,YAAA,EACAsrB,YAAA,aAKA,IAAAC,GAAAvG,GAAAzJ,OAAA,CACAiQ,aAAA,SAAAC,GACA,IAAAC,EAAAvxB,KAAA6pB,MAEA,QAAA0H,GACAvlB,KAAAO,IAAA+kB,EAAAC,EAAA/kB,EAAA,GAAAR,KAAAO,IAAAglB,EAAArM,OAAAqM,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAAvxB,KAAA6pB,MAEA,GAAA0H,EAAA,CAQA,IAPA,IAAAK,EAAArI,GAAAsI,kBAAAN,EAAA,CAAgE/kB,EAAAklB,EAAAjlB,EAAAklB,IAChEG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAGAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SACAA,EAAAD,GACAC,GAAA,EAAAjmB,KAAAmC,GAEA,KAAA2jB,EAAAG,GACAH,GAAA,EAAA9lB,KAAAmC,GAEA,KAAA2jB,EAAAE,GACAF,GAAA,EAAA9lB,KAAAmC,GAIA,IAAA+jB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YAEA,OAAAH,GAAAC,EAEA,UAGAG,eAAA,WACA,IAAAf,EAAAvxB,KAAA6pB,MACA0I,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACA7lB,EAAA+kB,EAAA/kB,EAAAR,KAAAsC,IAAAikB,GAAAC,EACA/lB,EAAA8kB,EAAA9kB,EAAAT,KAAAuC,IAAAgkB,GAAAC,IAIAC,QAAA,WACA,IAAAlB,EAAAvxB,KAAA6pB,MACA,OAAA7d,KAAAmC,KAAAojB,EAAAU,SAAAV,EAAAS,aAAA,EAAAhmB,KAAAmC,MAAAnC,KAAAO,IAAAglB,EAAAc,YAAA,GAAArmB,KAAAO,IAAAglB,EAAAa,YAAA,KAGA1H,gBAAA,WACA,IAAA6G,EAAAvxB,KAAA6pB,MACA6I,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YAEA,OACA5lB,EAAA+kB,EAAA/kB,EAAAR,KAAAsC,IAAAokB,GAAAC,EACAlmB,EAAA8kB,EAAA9kB,EAAAT,KAAAuC,IAAAmkB,GAAAC,IAIA7C,KAAA,WACA,IAKA8C,EALAnvB,EAAAzD,KAAA4uB,OAAAnrB,IACA8tB,EAAAvxB,KAAA6pB,MACAgJ,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAGA1tB,EAAAojB,OAEApjB,EAAA0iB,YACA1iB,EAAA+hB,IAAA+L,EAAA/kB,EAAA+kB,EAAA9kB,EAAAT,KAAAC,IAAAslB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACArvB,EAAA+hB,IAAA+L,EAAA/kB,EAAA+kB,EAAA9kB,EAAA8kB,EAAAa,YAAAU,EAAAD,GAAA,GACApvB,EAAAgiB,YAEAhiB,EAAAuvB,UAAAzB,EAAA5rB,gBACAlC,EAAA6iB,OAEAiL,EAAA1rB,cACA,UAAA0rB,EAAAJ,aAGA1tB,EAAA0iB,YACAyM,EAAAG,EAAAxB,EAAAc,YACA5uB,EAAA+hB,IAAA+L,EAAA/kB,EAAA+kB,EAAA9kB,EAAA8kB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GACArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACA3uB,EAAA+hB,IAAA+L,EAAA/kB,EAAA+kB,EAAA9kB,EAAA8kB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEAnvB,EAAA+hB,IAAA+L,EAAA/kB,EAAA+kB,EAAA9kB,EAAAsmB,EAAAD,EAAA9mB,KAAAmC,GAAA,EAAA0kB,EAAA7mB,KAAAmC,GAAA,GAEA1K,EAAAgiB,YACAhiB,EAAAqjB,OAEArjB,EAAA0iB,YACA1iB,EAAA+hB,IAAA+L,EAAA/kB,EAAA+kB,EAAA9kB,EAAA8kB,EAAAc,YAAAQ,EAAAC,GACArvB,EAAA+hB,IAAA+L,EAAA/kB,EAAA+kB,EAAA9kB,EAAA8kB,EAAAa,YAAAU,EAAAD,GAAA,GACApvB,EAAAgiB,YAEAhiB,EAAAwvB,UAAA,EAAA1B,EAAA1rB,YACApC,EAAAyvB,SAAA,UAEAzvB,EAAAwvB,UAAA1B,EAAA1rB,YACApC,EAAAyvB,SAAA,SAGAzvB,EAAA0vB,YAAA5B,EAAA3rB,YACAnC,EAAA8iB,UAGA9iB,EAAAujB,aAIAoM,GAAA7J,GAAA7J,eAEAsI,GAAAO,GAAA1gB,OAAAmgB,aAEAO,GAAAT,KAAA,UACA+H,SAAA,CACAwD,KAAA,CACA/L,QAAA,GACA3hB,gBAAAqiB,GACAniB,YAAA,EACAD,YAAAoiB,GACAsL,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACApN,MAAA,MAKA,IAAAqN,GAAA9I,GAAAzJ,OAAA,CACA0O,KAAA,WACA,IAQAjR,EAAA+U,EAAA3M,EAAA4M,EAPAtC,EADAvxB,KACA6pB,MACApmB,EAFAzD,KAEA4uB,OAAAnrB,IACAqwB,EAAAvC,EAAAuC,SACAC,EAJA/zB,KAIAg0B,UAAAlc,QACA+Q,EAAAN,GAAA1gB,OACAosB,EAAApL,EAAAgH,SAAAwD,KACAa,GAAA,EA2BA,IAlCAl0B,KAWAm0B,OAAAJ,EAAAztB,QACAytB,EAAA9sB,KAAA8sB,EAAA,IAGAtwB,EAAAojB,OAGApjB,EAAA2wB,QAAA7C,EAAA+B,gBAAAW,EAAAX,eAGA7vB,EAAA4wB,aACA5wB,EAAA4wB,YAAA9C,EAAAgC,YAAAU,EAAAV,YAGA9vB,EAAA6wB,eAAAlB,GAAA7B,EAAAiC,iBAAAS,EAAAT,kBACA/vB,EAAAyvB,SAAA3B,EAAAkC,iBAAAQ,EAAAR,gBACAhwB,EAAAwvB,UAAAG,GAAA7B,EAAA1rB,YAAAouB,EAAApuB,aACApC,EAAA0vB,YAAA5B,EAAA3rB,aAAAijB,EAAAb,aAGAvkB,EAAA0iB,YACA+N,GAAA,EAEArV,EAAA,EAAiBA,EAAAkV,EAAAztB,SAAuBuY,EACxC+U,EAAAG,EAAAlV,GACAoI,EAAAsC,GAAAgL,aAAAR,EAAAlV,GACAgV,EAAAD,EAAA/J,MAGA,IAAAhL,EACAgV,EAAAW,OACA/wB,EAAA8hB,OAAAsO,EAAArnB,EAAAqnB,EAAApnB,GACAynB,EAAArV,IAGAoI,GAAA,IAAAiN,EAAAjN,EAAA8M,EAAAG,GAEAL,EAAAW,OACAN,IAAArV,EAAA,IAAAiV,IAAA,IAAAI,EAEAzwB,EAAA8hB,OAAAsO,EAAArnB,EAAAqnB,EAAApnB,GAGA8c,GAAAhmB,OAAA6iB,OAAA3iB,EAAAwjB,EAAA4C,MAAA+J,EAAA/J,OAEAqK,EAAArV,IAKApb,EAAA8iB,SACA9iB,EAAAujB,aAIAyN,GAAAlL,GAAA7J,eAEAgV,GAAAnM,GAAA1gB,OAAAmgB,aAkBA,SAAA2M,GAAArD,GACA,IAAAC,EAAAvxB,KAAA6pB,MACA,QAAA0H,GAAAvlB,KAAA4oB,IAAAtD,EAAAC,EAAA/kB,GAAA+kB,EAAArM,OAAAqM,EAAAsD,UAlBAtM,GAAAT,KAAA,UACA+H,SAAA,CACAnJ,MAAA,CACAxB,OAAA,EACA4P,WAAA,SACAnvB,gBAAA+uB,GACA9uB,YAAA8uB,GACA7uB,YAAA,EAEAgvB,UAAA,EACArD,YAAA,EACAlB,iBAAA,MAeA,IAAAyE,GAAAlK,GAAAzJ,OAAA,CACAqQ,QAAA,SAAAH,EAAA0D,GACA,IAAAzD,EAAAvxB,KAAA6pB,MACA,QAAA0H,GAAAvlB,KAAAO,IAAA+kB,EAAAC,EAAA/kB,EAAA,GAAAR,KAAAO,IAAAyoB,EAAAzD,EAAA9kB,EAAA,GAAAT,KAAAO,IAAAglB,EAAAsD,UAAAtD,EAAArM,OAAA,IAGAmM,aAAAsD,GACAM,SAAAN,GACAO,SAbA,SAAAF,GACA,IAAAzD,EAAAvxB,KAAA6pB,MACA,QAAA0H,GAAAvlB,KAAA4oB,IAAAI,EAAAzD,EAAA9kB,GAAA8kB,EAAArM,OAAAqM,EAAAsD,WAaAvC,eAAA,WACA,IAAAf,EAAAvxB,KAAA6pB,MACA,OACArd,EAAA+kB,EAAA/kB,EACAC,EAAA8kB,EAAA9kB,IAIAgmB,QAAA,WACA,OAAAzmB,KAAAmC,GAAAnC,KAAAO,IAAAvM,KAAA6pB,MAAA3E,OAAA,IAGAwF,gBAAA,WACA,IAAA6G,EAAAvxB,KAAA6pB,MACA,OACArd,EAAA+kB,EAAA/kB,EACAC,EAAA8kB,EAAA9kB,EACA0oB,QAAA5D,EAAArM,OAAAqM,EAAA1rB,cAIAiqB,KAAA,SAAAsF,GACA,IAAA7D,EAAAvxB,KAAA6pB,MACApmB,EAAAzD,KAAA4uB,OAAAnrB,IACAqxB,EAAAvD,EAAAuD,WACAjP,EAAA0L,EAAA1L,SACAX,EAAAqM,EAAArM,OACA1Y,EAAA+kB,EAAA/kB,EACAC,EAAA8kB,EAAA9kB,EACAoc,EAAAN,GAAA1gB,OACAmgB,EAAAa,EAAAb,aAEAuJ,EAAAiD,YAKAjuB,IAAA6uB,GAAA7L,GAAAhmB,OAAAkjB,eAAA8K,EAAA6D,MACA3xB,EAAA0vB,YAAA5B,EAAA3rB,aAAAoiB,EACAvkB,EAAAwvB,UAAAwB,GAAAlD,EAAA1rB,YAAAgjB,EAAAgH,SAAAnJ,MAAA7gB,aACApC,EAAAuvB,UAAAzB,EAAA5rB,iBAAAqiB,EACAuB,GAAAhmB,OAAAoiB,UAAAliB,EAAAqxB,EAAA5P,EAAA1Y,EAAAC,EAAAoZ,OAKAwP,GAAA9M,GAAA1gB,OAAAmgB,aAaA,SAAAsN,GAAA/D,GACA,OAAAA,QAAAhrB,IAAAgrB,EAAA5tB,MASA,SAAA4xB,GAAAhE,GACA,IAAAiE,EAAAC,EAAAC,EAAA3nB,EAAA4nB,EAgBA,OAdAL,GAAA/D,IACAoE,EAAApE,EAAA5tB,MAAA,EACA6xB,EAAAjE,EAAA/kB,EAAAmpB,EACAF,EAAAlE,EAAA/kB,EAAAmpB,EACAD,EAAA1pB,KAAAD,IAAAwlB,EAAA9kB,EAAA8kB,EAAA/B,MACAzhB,EAAA/B,KAAAC,IAAAslB,EAAA9kB,EAAA8kB,EAAA/B,QAEAmG,EAAApE,EAAA1tB,OAAA,EACA2xB,EAAAxpB,KAAAD,IAAAwlB,EAAA/kB,EAAA+kB,EAAA/B,MACAiG,EAAAzpB,KAAAC,IAAAslB,EAAA/kB,EAAA+kB,EAAA/B,MACAkG,EAAAnE,EAAA9kB,EAAAkpB,EACA5nB,EAAAwjB,EAAA9kB,EAAAkpB,GAGA,CACAxQ,KAAAqQ,EACApQ,IAAAsQ,EACArQ,MAAAoQ,EACAnQ,OAAAvX,GAIA,SAAA6nB,GAAAC,EAAAnV,EAAAoV,GACA,OAAAD,IAAAnV,EAAAoV,EAAAD,IAAAC,EAAApV,EAAAmV,EAuBA,SAAAE,GAAAxE,EAAAyE,EAAAC,GACA,IAEA5oB,EAAAzB,EAAAE,EAAAxC,EAFA6R,EAAAoW,EAAA1rB,YACA2uB,EAtBA,SAAAjD,GACA,IAAA2E,EAAA3E,EAAA4E,cACA1G,EAAA,GAEA,OAAAyG,GAIA3E,EAAA6E,WACA7E,EAAA/B,KAAA+B,EAAA/kB,IACA0pB,EAAAN,GAAAM,EAAA,iBAEE3E,EAAA/B,KAAA+B,EAAA9kB,IACFypB,EAAAN,GAAAM,EAAA,iBAGAzG,EAAAyG,IAAA,EACAzG,GAZAA,EAiBA4G,CAAA9E,GAYA,OATAhI,GAAAhK,SAAApE,IACA9N,GAAA8N,EAAAiK,KAAA,EACAxZ,GAAAuP,EAAAkK,OAAA,EACAvZ,GAAAqP,EAAAmK,QAAA,EACAhc,GAAA6R,EAAAgK,MAAA,GAEA9X,EAAAzB,EAAAE,EAAAxC,GAAA6R,GAAA,EAGA,CACA9N,EAAAmnB,EAAApP,KAAA/X,EAAA,IAAAA,EAAA4oB,IAAA5oB,EACAzB,EAAA4oB,EAAAnP,OAAAzZ,EAAA,IAAAA,EAAAoqB,IAAApqB,EACAE,EAAA0oB,EAAAlP,QAAAxZ,EAAA,IAAAA,EAAAmqB,IAAAnqB,EACAxC,EAAAkrB,EAAArP,MAAA7b,EAAA,IAAAA,EAAA0sB,IAAA1sB,GA0BA,SAAAmoB,GAAAF,EAAA/kB,EAAAC,GACA,IAAA6pB,EAAA,OAAA9pB,EACA+pB,EAAA,OAAA9pB,EACA+pB,KAAAjF,GAAA+E,GAAAC,IAAAhB,GAAAhE,GAEA,OAAAiF,IACAF,GAAA9pB,GAAAgqB,EAAArR,MAAA3Y,GAAAgqB,EAAAnR,SACAkR,GAAA9pB,GAAA+pB,EAAApR,KAAA3Y,GAAA+pB,EAAAlR,QAzHAiD,GAAAT,KAAA,UACA+H,SAAA,CACA4G,UAAA,CACA9wB,gBAAA0vB,GACAzvB,YAAAyvB,GACAc,cAAA,SACAtwB,YAAA,MAsHA,IAAA6wB,GAAA7L,GAAAzJ,OAAA,CACA0O,KAAA,WACA,IAAArsB,EAAAzD,KAAA4uB,OAAAnrB,IACA8tB,EAAAvxB,KAAA6pB,MACA8M,EApCA,SAAApF,GACA,IAAAiF,EAAAjB,GAAAhE,GACA5tB,EAAA6yB,EAAAnR,MAAAmR,EAAArR,KACAthB,EAAA2yB,EAAAlR,OAAAkR,EAAApR,IACAwR,EAAAb,GAAAxE,EAAA5tB,EAAA,EAAAE,EAAA,GAEA,OACAgzB,MAAA,CACArqB,EAAAgqB,EAAArR,KACA1Y,EAAA+pB,EAAApR,IACAlZ,EAAAvI,EACAyF,EAAAvF,GAEAizB,MAAA,CACAtqB,EAAAgqB,EAAArR,KAAAyR,EAAAttB,EACAmD,EAAA+pB,EAAApR,IAAAwR,EAAAvpB,EACAnB,EAAAvI,EAAAizB,EAAAttB,EAAAstB,EAAAhrB,EACAxC,EAAAvF,EAAA+yB,EAAAvpB,EAAAupB,EAAA9qB,IAmBAirB,CAAAxF,GACAsF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MAEArzB,EAAAuvB,UAAAzB,EAAA5rB,gBACAlC,EAAAuzB,SAAAH,EAAArqB,EAAAqqB,EAAApqB,EAAAoqB,EAAA3qB,EAAA2qB,EAAAztB,GAEAytB,EAAA3qB,IAAA4qB,EAAA5qB,GAAA2qB,EAAAztB,IAAA0tB,EAAA1tB,IAIA3F,EAAAojB,OACApjB,EAAA0iB,YACA1iB,EAAAiiB,KAAAmR,EAAArqB,EAAAqqB,EAAApqB,EAAAoqB,EAAA3qB,EAAA2qB,EAAAztB,GACA3F,EAAAqjB,OACArjB,EAAAuvB,UAAAzB,EAAA3rB,YACAnC,EAAAiiB,KAAAoR,EAAAtqB,EAAAsqB,EAAArqB,EAAAqqB,EAAA5qB,EAAA4qB,EAAA1tB,GACA3F,EAAA6iB,KAAA,WACA7iB,EAAAujB,YAGAnjB,OAAA,WACA,IAAA0tB,EAAAvxB,KAAA6pB,MACA,OAAA0H,EAAA/B,KAAA+B,EAAA9kB,GAGAglB,QAAA,SAAAH,EAAA0D,GACA,OAAAvD,GAAAzxB,KAAA6pB,MAAAyH,EAAA0D,IAGA3D,aAAA,SAAAC,EAAA0D,GACA,IAAAzD,EAAAvxB,KAAA6pB,MACA,OAAAyL,GAAA/D,GACAE,GAAAF,EAAAD,EAAA,MACAG,GAAAF,EAAA,KAAAyD,IAGAC,SAAA,SAAA3D,GACA,OAAAG,GAAAzxB,KAAA6pB,MAAAyH,EAAA,OAGA4D,SAAA,SAAAF,GACA,OAAAvD,GAAAzxB,KAAA6pB,MAAA,KAAAmL,IAGA1C,eAAA,WACA,IACA9lB,EAAAC,EADA8kB,EAAAvxB,KAAA6pB,MAUA,OARAyL,GAAA/D,IACA/kB,EAAA+kB,EAAA/kB,EACAC,GAAA8kB,EAAA9kB,EAAA8kB,EAAA/B,MAAA,IAEAhjB,GAAA+kB,EAAA/kB,EAAA+kB,EAAA/B,MAAA,EACA/iB,EAAA8kB,EAAA9kB,GAGA,CAAUD,IAAAC,MAGVgmB,QAAA,WACA,IAAAlB,EAAAvxB,KAAA6pB,MAEA,OAAAyL,GAAA/D,GACAA,EAAA5tB,MAAAqI,KAAA4oB,IAAArD,EAAA9kB,EAAA8kB,EAAA/B,MACA+B,EAAA1tB,OAAAmI,KAAA4oB,IAAArD,EAAA/kB,EAAA+kB,EAAA/B,OAGA9E,gBAAA,WACA,IAAA6G,EAAAvxB,KAAA6pB,MACA,OACArd,EAAA+kB,EAAA/kB,EACAC,EAAA8kB,EAAA9kB,MAKAojB,GAAA,GACAoH,GAAA7F,GACArrB,GAAA4tB,GACAuD,GAAAnC,GACAoC,GAAAT,GACA7G,GAAAoH,OACApH,GAAA9pB,QACA8pB,GAAAqH,SACArH,GAAAsH,aAEA,IAAAC,GAAA7N,GAAAjoB,QAAA2B,QAEAslB,GAAAT,KAAA,OACAuP,MAAA,CACAC,KAAA,SAGA1J,OAAA,CACAC,MAAA,EACA1P,KAAA,WACAoZ,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,KAIA5J,MAAA,EACA5P,KAAA,cA4FA,IAAAyZ,GAAA1G,GAAA9P,OAAA,CAEA+L,gBAAA0C,GAAAsH,UAEAp3B,WAAA,WACA,IACAwtB,EADA/L,EAAAxhB,KAGAkxB,GAAArZ,UAAA9X,WAAAigB,MAAAwB,EAAAxJ,YAEAuV,EAAA/L,EAAAgM,WACA5mB,MAAA4a,EAAAkM,aAAA9mB,MACA2mB,EAAAsK,KAAA,GAGArJ,OAAA,SAAAD,GACA,IAEAnoB,EAAAoa,EADAmW,EADA32B,KACAwtB,UAAAluB,KAKA,IANAU,KAIA83B,OAJA93B,KAIA+3B,WAEA3xB,EAAA,EAAAoa,EAAAmW,EAAArwB,OAAkCF,EAAAoa,IAAUpa,EAN5CpG,KAOAkvB,cAAAyH,EAAAvwB,KAAAmoB,IAIAW,cAAA,SAAAuH,EAAA5X,EAAA0P,GACA,IAAA/M,EAAAxhB,KACAutB,EAAA/L,EAAAgM,UACAC,EAAAjM,EAAAkM,aACApsB,EAAAkgB,EAAAwW,uBAAAvB,EAAA5X,GAEA4X,EAAAwB,QAAAzW,EAAAyM,cAAAV,EAAAI,SACA8I,EAAAyB,QAAA1W,EAAAyM,cAAAV,EAAAO,SACA2I,EAAA5H,cAAArN,EAAA3C,MACA4X,EAAA1H,OAAAlQ,EACA4X,EAAA3M,OAAA,CACAnkB,gBAAArE,EAAAqE,gBACAC,YAAAtE,EAAAsE,YACAuwB,cAAA70B,EAAA60B,cACAtwB,YAAAvE,EAAAuE,YACAsyB,aAAA1K,EAAApoB,MACAA,MAAAmc,EAAAuD,MAAAzlB,KAAA8F,OAAAyZ,IAGA2C,EAAA4W,uBAAA3B,EAAA5X,EAAA0P,GAEAkI,EAAA7M,SAMAwO,uBAAA,SAAA3B,EAAA5X,EAAA0P,GACA,IAAA/M,EAAAxhB,KACAkqB,EAAAuM,EAAA3M,OACAuO,EAAA7W,EAAA6M,iBACAmB,EAAA6I,EAAAC,eACAlC,EAAAiC,EAAAE,eACAC,EAAAhX,EAAAsW,QAAAtW,EAAAuW,WACAU,EAAAjX,EAAAkX,wBAAAlX,EAAA3C,SACA8Z,EAAAnX,EAAAoX,wBAAApX,EAAA3C,QAAA2Z,GAEAtO,EAAAkM,aACAlM,EAAAsF,KAAAjB,EAAAiB,EAAAiJ,EAAAjJ,KACAtF,EAAA1d,EAAA4pB,EAAA7H,EAAAiB,EAAAiJ,EAAAI,KAAAF,EAAAG,OACA5O,EAAAzd,EAAA2pB,EAAAuC,EAAAG,OAAAvK,EAAAiB,EAAAiJ,EAAAI,KACA3O,EAAArmB,OAAAuyB,EAAAuC,EAAA3S,UAAAzf,EACA2jB,EAAAvmB,MAAAyyB,OAAA7vB,EAAAoyB,EAAA3S,MASA+S,WAAA,SAAAC,GACA,IAMA5yB,EAAAmnB,EALAxI,EADA/kB,KACA+kB,MACAtK,EAFAza,KAEAsuB,iBACA2K,EAAAxe,EAAAnZ,QAAA23B,QACAzY,OAAAja,IAAAyyB,EAAAjU,EAAAzlB,KAAAgG,SAAAgB,OAAA0yB,EAAA,EACAE,EAAA,GAGA,IAAA9yB,EAAA,EAAaA,EAAAoa,IAAUpa,GACvBmnB,EAAAxI,EAAAiJ,eAAA5nB,IACAyxB,KAAA9S,EAAAoU,iBAAA/yB,MACA,IAAA6yB,IACA,IAAAA,IAAA,IAAAC,EAAAnX,QAAAwL,EAAA3mB,aACAL,IAAA0yB,SAAA1yB,IAAAgnB,EAAA3mB,QAAA,IAAAsyB,EAAAnX,QAAAwL,EAAA3mB,UACAsyB,EAAAjyB,KAAAsmB,EAAA3mB,OAIA,OAAAsyB,GAOAE,cAAA,WACA,OAAAp5B,KAAA+4B,aAAAzyB,QAUA+yB,cAAA,SAAApM,EAAAnS,GACA,IAAAoe,EAAAl5B,KAAA+4B,WAAA9L,GACApO,OAAAtY,IAAAuU,EACAoe,EAAAnX,QAAAjH,IACA,EAEA,WAAA+D,EACAqa,EAAA5yB,OAAA,EACAuY,GAMAkZ,SAAA,WACA,IAQA3xB,EAAAoa,EAPA/F,EADAza,KACAsuB,iBACAgL,EAFAt5B,KAEAo5B,gBACAnM,EAHAjtB,KAGA6e,MACA0Z,EAAA9d,EAAA8d,eACApO,EAAAoO,EAAA9d,EAAA0K,KAAA1K,EAAA2K,IACAmU,EAAApP,GAAAoO,EAAA9d,EAAA9W,MAAA8W,EAAA5W,QACA21B,EAAA,GAGA,IAAApzB,EAAA,EAAAoa,EAVAxgB,KAUAwtB,UAAAluB,KAAAgH,OAA8CF,EAAAoa,IAAUpa,EACxDozB,EAAAvyB,KAAAwT,EAAAgf,iBAAA,KAAArzB,EAAA6mB,IAOA,OACAlhB,IALAwd,GAAApK,cAAA1E,EAAAnZ,QAAAo4B,cAnOA,SAAAjf,EAAA+e,GACA,IAEAG,EAAAC,EAAAxzB,EAAAoa,EAFAzU,EAAA0O,EAAA8d,eAAA9d,EAAA9W,MAAA8W,EAAA5W,OACAg2B,EAAApf,EAAAqf,WAGA,IAAA1zB,EAAA,EAAAoa,EAAAgZ,EAAAlzB,OAAkCF,EAAAoa,IAAUpa,EAC5C2F,EAAAC,KAAAD,MAAAC,KAAA4oB,IAAA4E,EAAApzB,GAAAozB,EAAApzB,EAAA,KAGA,IAAAA,EAAA,EAAAoa,EAAAqZ,EAAAvzB,OAAiCF,EAAAoa,IAAUpa,EAC3CwzB,EAAAnf,EAAAsf,gBAAA3zB,GACA2F,EAAA3F,EAAA,EAAA4F,KAAAD,MAAA6tB,EAAAD,GAAA5tB,EACA4tB,EAAAC,EAGA,OAAA7tB,EAqNAiuB,CAAAvf,EAAA+e,IACA,EAIAA,SACArP,QACAoP,MACAD,aACA7e,UAQAie,wBAAA,SAAAzL,EAAApO,GACA,IAWAzY,EAAA6zB,EAAAC,EAAA1K,EAAAqJ,EAAA7S,EAVAjB,EADA/kB,KACA+kB,MACAwI,EAFAvtB,KAEAwtB,UACA/S,EAHAza,KAGAquB,iBACAkK,EAAA9d,EAAA8d,eACAjzB,EAAAyf,EAAAzlB,KAAAgG,SACA6V,GAAAV,EAAA0f,cAAA70B,EAAA2nB,GAAA3tB,KAAAuf,IACAub,EAAA3f,EAAAnZ,QAAA84B,aACAnB,EAAAxe,EAAAnZ,QAAA23B,QACAryB,EAAA2mB,EAAA3mB,MACAujB,EAAA,EAGA,GAAA8O,QAAA1yB,IAAA0yB,QAAA1yB,IAAAK,EACA,IAAAR,EAAA,EAAcA,EAAA6mB,IAAkB7mB,GAChC6zB,EAAAlV,EAAAiJ,eAAA5nB,IAEAyxB,KACAoC,EAAArzB,WACAqzB,EAAAI,WAAAlM,qBAAA1T,EAAAnX,IACAyhB,EAAAoU,iBAAA/yB,KAEA8zB,GAAAzf,EAAA0f,cAAA70B,EAAAc,GAAA9G,KAAAuf,KACA1D,EAAA,GAAA+e,EAAA,GAAA/e,GAAA,GAAA+e,EAAA,KACA/P,GAAA+P,IAmBA,OAbA1K,EAAA/U,EAAAgf,iBAAAtP,GACA0O,EAAApe,EAAAgf,iBAAAtP,EAAAhP,GACA6K,EAAA6S,EAAArJ,OAEAjpB,IAAA6zB,GAAApuB,KAAA4oB,IAAA5O,GAAAoU,IACApU,EAAAoU,EAEAvB,EADA1d,GAAA,IAAAod,GAAApd,EAAA,GAAAod,EACA/I,EAAA4K,EAEA5K,EAAA4K,GAIA,CACApU,OACAwJ,OACAqJ,OACAC,OAAAD,EAAA7S,EAAA,IAOA4S,wBAAA,SAAA3L,EAAApO,EAAA2Z,GACA,IACAl3B,EAAAk3B,EAAA/d,MAAAnZ,QACAg5B,EAAA,SAAAh5B,EAAAo4B,aAzPA,SAAA7a,EAAA2Z,EAAAl3B,GACA,IAKA6oB,EALAqP,EAAAhB,EAAAgB,OACAI,EAAAJ,EAAA3a,GACA8a,EAAA9a,EAAA,EAAA2a,EAAA3a,EAAA,QACA0b,EAAA1b,EAAA2a,EAAAlzB,OAAA,EAAAkzB,EAAA3a,EAAA,QACA2b,EAAAl5B,EAAAi2B,mBAiBA,OAdA,OAAAoC,IAGAA,EAAAC,GAAA,OAAAW,EAAA/B,EAAAe,IAAAf,EAAArO,MAAAoQ,EAAAX,IAGA,OAAAW,IAEAA,EAAAX,IAAAD,GAGAxP,EAAAyP,KAAA5tB,KAAAD,IAAA4tB,EAAAY,IAAA,EAAAC,EAGA,CACAC,MAHAzuB,KAAA4oB,IAAA2F,EAAAZ,GAAA,EAAAa,EAGAhC,EAAAc,WACA5rB,MAAApM,EAAAk2B,cACArN,SAiOAuQ,CAAA7b,EAAA2Z,EAAAl3B,GAxRA,SAAAud,EAAA2Z,EAAAl3B,GACA,IAGA0kB,EAAAtY,EAHAitB,EAAAr5B,EAAAo4B,aACAhJ,EAAA8H,EAAAc,WACAM,EAAApB,EAAAgB,OAAA3a,GAcA,OAXA0K,GAAApK,cAAAwb,IACA3U,EAAAwS,EAAAzsB,IAAAzK,EAAAi2B,mBACA7pB,EAAApM,EAAAk2B,gBAKAxR,EAAA2U,EAAAjK,EACAhjB,EAAA,GAGA,CACA+sB,MAAAzU,EAAA0K,EACAhjB,QACAyc,MAAAyP,EAAA5T,EAAA,GAqQA4U,CAAA/b,EAAA2Z,EAAAl3B,GAEAu5B,EANA76B,KAMAq5B,cAAApM,EANAjtB,KAMAwtB,UAAA5mB,OACAkyB,EAAAwB,EAAAnQ,MAAAmQ,EAAAG,MAAAI,EAAAP,EAAAG,MAAA,EACAzU,EAAAha,KAAAD,IACAwd,GAAA7J,eAAApe,EAAAw5B,gBAAAC,KACAT,EAAAG,MAAAH,EAAA5sB,OAEA,OACA8hB,KAAAsJ,EAAA9S,EAAA,EACA6S,KAAAC,EAAA9S,EAAA,EACA8S,SACA9S,SAIA8J,KAAA,WACA,IACA/K,EADA/kB,KACA+kB,MACAtK,EAFAza,KAEAquB,iBACAsI,EAHA32B,KAGAwtB,UAAAluB,KACAmuB,EAJAztB,KAIA0tB,aACAlN,EAAAmW,EAAArwB,OACAF,EAAA,EAIA,IAFAmjB,GAAAhmB,OAAAqjB,SAAA7B,EAAAthB,IAAAshB,EAAAqQ,WAEQhvB,EAAAoa,IAAUpa,EAClB5E,MAAAiZ,EAAA0f,cAAA1M,EAAAnuB,KAAA8G,MACAuwB,EAAAvwB,GAAA0pB,OAIAvG,GAAAhmB,OAAAwjB,WAAAhC,EAAAthB,MAMAu0B,uBAAA,SAAAvB,EAAA5X,GACA,IAOAzY,EAAAoa,EAAAjJ,EANAwN,EADA/kB,KACA+kB,MACAzf,EAAAyf,EAAAzlB,KAAAgG,SACAmoB,EAAAnoB,EAHAtF,KAGA6e,OACAqR,EAAAuG,EAAAvG,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QAAAuuB,SAAA4G,UACAhe,EAAA,GAIA6Q,EAAA,CACAvE,QACAiW,UAAAnc,EACA4O,UACAR,aAdAjtB,KAcA6e,OAGAuB,EAAA,CACA,kBACA,cACA,gBACA,eAGA,IAAAha,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAE3CqS,EADAlB,EAAA6I,EAAAha,IACAgxB,GAAA,CACAlH,EAAA3Y,GACAkW,EAAAlW,GACAjW,EAAAiW,IACA+R,EAAAzK,GAGA,OAAApG,KAIAwiB,GAAA1R,GAAA7J,eACAwb,GAAA3R,GAAAjoB,QAAA2B,QAEAslB,GAAAT,KAAA,UACAuP,MAAA,CACAC,KAAA,UAGA1J,OAAA,CACAC,MAAA,EACA1P,KAAA,SACAgd,SAAA,SACA73B,GAAA,aAEAyqB,MAAA,EACA5P,KAAA,SACAgd,SAAA,OACA73B,GAAA,cAIA83B,SAAA,CACAC,UAAA,CACAC,MAAA,WAEA,UAEAj2B,MAAA,SAAA4c,EAAA3iB,GACA,IAAA64B,EAAA74B,EAAAgG,SAAA2c,EAAAgL,cAAA5nB,OAAA,GACAk2B,EAAAj8B,EAAAgG,SAAA2c,EAAAgL,cAAA3tB,KAAA2iB,EAAApD,OACA,OAAAsZ,EAAA,MAAAlW,EAAAuZ,OAAA,KAAAvZ,EAAAwZ,OAAA,KAAAF,EAAA3vB,EAAA,SAMA,IAAA8vB,GAAAxK,GAAA9P,OAAA,CAIA+L,gBAAA0C,GAAAqH,MAKA1I,OAAA,SAAAD,GACA,IAAA/M,EAAAxhB,KACAutB,EAAA/L,EAAAgM,UACAuG,EAAAxG,EAAAjuB,KAGAiqB,GAAAtJ,KAAA8T,EAAA,SAAArN,EAAA7H,GACA2C,EAAA0N,cAAAxI,EAAA7H,EAAA0P,MAOAW,cAAA,SAAAxI,EAAA7H,EAAA0P,GACA,IAAA/M,EAAAxhB,KACAutB,EAAA/L,EAAAgM,UACA0C,EAAAxJ,EAAAwJ,QAAA,GACAyL,EAAAna,EAAAyM,cAAAV,EAAAI,SACAiO,EAAApa,EAAAyM,cAAAV,EAAAO,SACAxsB,EAAAkgB,EAAAwW,uBAAAtR,EAAA7H,GACAvf,EAAAkiB,EAAAkM,aAAApuB,KAAAuf,GACAgd,EAAAra,EAAA3C,MAEArS,EAAA+hB,EAAAoN,EAAAG,mBAAA,IAAAH,EAAAlC,iBAAA,iBAAAn6B,IAAAy8B,IAAAld,EAAAgd,GACApvB,EAAA8hB,EAAAqN,EAAAtD,eAAAsD,EAAAnC,iBAAAn6B,EAAAuf,EAAAgd,GAEAnV,EAAAuR,QAAA0D,EACAjV,EAAAwR,QAAA0D,EACAlV,EAAAsV,SAAA16B,EACAolB,EAAAmI,cAAAgN,EACAnV,EAAAqI,OAAAlQ,EACA6H,EAAAoD,OAAA,CACAnkB,gBAAArE,EAAAqE,gBACAC,YAAAtE,EAAAsE,YACAC,YAAAvE,EAAAuE,YACAgvB,UAAAvzB,EAAAuzB,UACAC,WAAAxzB,EAAAwzB,WACAjP,SAAAvkB,EAAAukB,SACAX,OAAAqJ,EAAA,EAAAjtB,EAAA4jB,OACAsP,KAAAtE,EAAAsE,MAAAhzB,MAAAgL,IAAAhL,MAAAiL,GACAD,IACAC,KAGAia,EAAAkD,SAMAqG,cAAA,SAAAvJ,GACA,IAAAwD,EAAAxD,EAAAoD,OACAxoB,EAAAolB,EAAAsV,SACA7L,EAAA5G,GAAA4G,cAEAzJ,EAAAsJ,eAAA,CACArqB,gBAAAukB,EAAAvkB,gBACAC,YAAAskB,EAAAtkB,YACAC,YAAAqkB,EAAArkB,YACAqf,OAAAgF,EAAAhF,QAGAgF,EAAAvkB,gBAAAs1B,GAAA35B,EAAA8uB,qBAAAD,EAAA7uB,EAAAqE,kBACAukB,EAAAtkB,YAAAq1B,GAAA35B,EAAA+uB,iBAAAF,EAAA7uB,EAAAsE,cACAskB,EAAArkB,YAAAo1B,GAAA35B,EAAAgvB,iBAAAhvB,EAAAuE,aACAqkB,EAAAhF,OAAA5jB,EAAA4jB,OAAA5jB,EAAAkwB,aAMAwG,uBAAA,SAAAtR,EAAA7H,GACA,IAQAzY,EAAAoa,EAAAjJ,EAPAwN,EADA/kB,KACA+kB,MACAzf,EAAAyf,EAAAzlB,KAAAgG,SACAmoB,EAAAnoB,EAHAtF,KAGA6e,OACAqR,EAAAxJ,EAAAwJ,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QAAAuuB,SAAAnJ,MACApnB,EAAAmuB,EAAAnuB,KAAAuf,GACApG,EAAA,GAIA6Q,EAAA,CACAvE,QACAiW,UAAAnc,EACA4O,UACAR,aAfAjtB,KAeA6e,OAGAuB,EAAA,CACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,aACA,YAGA,IAAAha,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAE3CqS,EADAlB,EAAA6I,EAAAha,IACA80B,GAAA,CACAhL,EAAA3Y,GACAkW,EAAAlW,GACAjW,EAAAiW,IACA+R,EAAAzK,GAWA,OAPApG,EAAAyM,OAAAgW,GAAA,CACAhL,EAAAhL,OACA5lB,IAAAsM,OAAArF,EACAknB,EAAAvI,OACA5jB,EAAA4jB,QACAoE,EAAAzK,GAEApG,KAIAwjB,GAAA1S,GAAAjoB,QAAA2B,QACAi5B,GAAA3S,GAAA7J,eAEA6I,GAAAT,KAAA,YACAwD,UAAA,CAEA6Q,eAAA,EAEAC,cAAA,GAEA/E,MAAA,CACAC,KAAA,UAEA+E,eAAA,SAAAtX,GACA,IAAAxd,EAAA,GACAA,EAAAN,KAAA,cAAA8d,EAAAzhB,GAAA,aAEA,IAAAhE,EAAAylB,EAAAzlB,KACAgG,EAAAhG,EAAAgG,SACAF,EAAA9F,EAAA8F,OAEA,GAAAE,EAAAgB,OACA,QAAAF,EAAA,EAAkBA,EAAAd,EAAA,GAAAhG,KAAAgH,SAA6BF,EAC/CmB,EAAAN,KAAA,qCAAA3B,EAAA,GAAAK,gBAAAS,GAAA,aACAhB,EAAAgB,IACAmB,EAAAN,KAAA7B,EAAAgB,IAEAmB,EAAAN,KAAA,SAKA,OADAM,EAAAN,KAAA,SACAM,EAAA+0B,KAAA,KAEAC,OAAA,CACAn3B,OAAA,CACAo3B,eAAA,SAAAzX,GACA,IAAAzlB,EAAAylB,EAAAzlB,KACA,OAAAA,EAAA8F,OAAAkB,QAAAhH,EAAAgG,SAAAgB,OACAhH,EAAA8F,OAAAH,IAAA,SAAAI,EAAAe,GACA,IAAAmnB,EAAAxI,EAAAiJ,eAAA,GACAyO,EAAAn9B,EAAAgG,SAAA,GACAkgB,EAAA+H,EAAAjuB,KAAA8G,GACA8pB,EAAA1K,KAAA0K,QAAA,GACAwM,EAAA3X,EAAAzjB,QAAAuuB,SAAArK,IACAc,EAAA2V,GAAA,CAAA/L,EAAAvqB,gBAAA82B,EAAA92B,gBAAA+2B,EAAA/2B,sBAAAY,EAAAH,GACAmgB,EAAA0V,GAAA,CAAA/L,EAAAtqB,YAAA62B,EAAA72B,YAAA82B,EAAA92B,kBAAAW,EAAAH,GACAu2B,EAAAV,GAAA,CAAA/L,EAAArqB,YAAA42B,EAAA52B,YAAA62B,EAAA72B,kBAAAU,EAAAH,GAEA,OACAmB,KAAAlC,EACA2tB,UAAA1M,EACA6M,YAAA5M,EACA0M,UAAA0J,EACAhT,OAAAnoB,MAAAi7B,EAAAn9B,KAAA8G,KAAAmnB,EAAAjuB,KAAA8G,GAAAujB,OAGA9K,MAAAzY,KAIA,KAIAw2B,QAAA,SAAAC,EAAAC,GACA,IAEA12B,EAAAoa,EAAA+M,EAFA1O,EAAAie,EAAAje,MACAkG,EAAA/kB,KAAA+kB,MAGA,IAAA3e,EAAA,EAAAoa,GAAAuE,EAAAzlB,KAAAgG,UAAA,IAAAgB,OAAyDF,EAAAoa,IAAUpa,GACnEmnB,EAAAxI,EAAAiJ,eAAA5nB,IAEA9G,KAAAuf,KACA0O,EAAAjuB,KAAAuf,GAAA8K,QAAA4D,EAAAjuB,KAAAuf,GAAA8K,QAIA5E,EAAAyJ,WAKAuO,iBAAA,GAGAlX,UAAA,GAAA7Z,KAAAmC,GAGA6uB,cAAA,EAAAhxB,KAAAmC,GAGAitB,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEAj2B,MAAA,SAAA43B,EAAA39B,GACA,IAAA49B,EAAA59B,EAAA8F,OAAA63B,EAAApe,OACA1D,EAAA,KAAA7b,EAAAgG,SAAA23B,EAAAhQ,cAAA3tB,KAAA29B,EAAApe,OAWA,OATA0K,GAAAnK,QAAA8d,IAGAA,IAAAplB,SACA,IAAAqD,EAEA+hB,GAAA/hB,EAGA+hB,OAMA,IAAAC,GAAAjM,GAAA9P,OAAA,CAEA+L,gBAAA0C,GAAAoH,IAEA7J,WAAA7D,GAAAtK,KAGAme,aAAA,SAAAnQ,GAGA,IAFA,IAAAoQ,EAAA,EAEAC,EAAA,EAAiBA,EAAArQ,IAAkBqQ,EACnCt9B,KAAA+kB,MAAAoU,iBAAAmE,MACAD,EAIA,OAAAA,GAGA7O,OAAA,SAAAD,GACA,IAaAnoB,EAAAoa,EAbAgB,EAAAxhB,KACA+kB,EAAAvD,EAAAuD,MACAqQ,EAAArQ,EAAAqQ,UACAt0B,EAAAikB,EAAAzjB,QACAi8B,EAAAnI,EAAA/P,MAAA+P,EAAAjQ,KACAqY,EAAApI,EAAA9P,OAAA8P,EAAAhQ,IACAqY,EAAAzxB,KAAAD,IAAAwxB,EAAAC,GACA/F,EAAA,CAAgBjrB,EAAA,EAAAC,EAAA,GAChB8gB,EAAA/L,EAAAgM,UACAkQ,EAAAnQ,EAAAjuB,KACAy9B,EAAAj8B,EAAAi8B,iBACAC,EAAAl8B,EAAAk8B,cACAW,EAAAnc,EAAAoc,eAAApc,EAAA3C,OAIA,GAAAme,EAAA,EAAAhxB,KAAAmC,GAAA,CACA,IAAA6jB,EAAAlxB,EAAA+kB,UAAA,EAAA7Z,KAAAmC,IAEA8jB,GADAD,GAAA,EAAAhmB,KAAAmC,IAAA6jB,GAAAhmB,KAAAmC,IAAA,EAAA6jB,GAAAhmB,KAAAmC,GAAA,MACA6uB,EACA7S,EAAA,CAAgB3d,EAAAR,KAAAsC,IAAA0jB,GAAAvlB,EAAAT,KAAAuC,IAAAyjB,IAChBuH,EAAA,CAAc/sB,EAAAR,KAAAsC,IAAA2jB,GAAAxlB,EAAAT,KAAAuC,IAAA0jB,IACd4L,EAAA7L,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAhmB,KAAAmC,IAAA,EAAAnC,KAAAmC,IAAA8jB,EACA6L,EAAA9L,GAAA,GAAAhmB,KAAAmC,IAAA,GAAAnC,KAAAmC,IAAA8jB,GAAAD,GAAA,IAAAhmB,KAAAmC,IAAA,IAAAnC,KAAAmC,IAAA8jB,EACA8L,EAAA/L,IAAAhmB,KAAAmC,KAAAnC,KAAAmC,IAAA8jB,GAAAD,GAAAhmB,KAAAmC,IAAAnC,KAAAmC,IAAA8jB,EACA+L,EAAAhM,GAAA,IAAAhmB,KAAAmC,IAAA,IAAAnC,KAAAmC,IAAA8jB,GAAAD,GAAA,IAAAhmB,KAAAmC,IAAA,IAAAnC,KAAAmC,IAAA8jB,EACAgM,EAAAlB,EAAA,IACAhxB,EAAA,CAAcS,EAAAuxB,GAAA,EAAA/xB,KAAAD,IAAAoe,EAAA3d,GAAA2d,EAAA3d,EAAA,IAAAyxB,GAAA1E,EAAA/sB,GAAA+sB,EAAA/sB,EAAA,IAAAyxB,IAAAxxB,EAAAuxB,GAAA,EAAAhyB,KAAAD,IAAAoe,EAAA1d,GAAA0d,EAAA1d,EAAA,IAAAwxB,GAAA1E,EAAA9sB,GAAA8sB,EAAA9sB,EAAA,IAAAwxB,KACdhyB,EAAA,CAAcO,EAAAqxB,EAAA,EAAA7xB,KAAAC,IAAAke,EAAA3d,GAAA2d,EAAA3d,EAAA,IAAAyxB,GAAA1E,EAAA/sB,GAAA+sB,EAAA/sB,EAAA,IAAAyxB,IAAAxxB,EAAAqxB,EAAA,EAAA9xB,KAAAC,IAAAke,EAAA1d,GAAA0d,EAAA1d,EAAA,IAAAwxB,GAAA1E,EAAA9sB,GAAA8sB,EAAA9sB,EAAA,IAAAwxB,KACdjY,EAAA,CAAeriB,MAAA,IAAAsI,EAAAO,EAAAT,EAAAS,GAAA3I,OAAA,IAAAoI,EAAAQ,EAAAV,EAAAU,IACfgxB,EAAAzxB,KAAAD,IAAAwxB,EAAAvX,EAAAriB,MAAA65B,EAAAxX,EAAAniB,QACA4zB,EAAA,CAAajrB,GAAA,IAAAP,EAAAO,EAAAT,EAAAS,GAAAC,GAAA,IAAAR,EAAAQ,EAAAV,EAAAU,IAGb,IAAArG,EAAA,EAAAoa,EAAAkd,EAAAp3B,OAAiCF,EAAAoa,IAAUpa,EAC3Cs3B,EAAAt3B,GAAA41B,SAAAxa,EAAAwW,uBAAA0F,EAAAt3B,MAeA,IAZA2e,EAAAlf,YAAA2b,EAAA0c,oBACAnZ,EAAAsN,YAAArmB,KAAAC,KAAAwxB,EAAA1Y,EAAAlf,aAAA,KACAkf,EAAAqN,YAAApmB,KAAAC,IAAA8wB,EAAAhY,EAAAsN,YAAA,WACAtN,EAAAoZ,cAAApZ,EAAAsN,YAAAtN,EAAAqN,cAAA5Q,EAAA4c,iCAAA,GACArZ,EAAAsZ,QAAA5G,EAAAjrB,EAAAuY,EAAAsN,YACAtN,EAAAuZ,QAAA7G,EAAAhrB,EAAAsY,EAAAsN,YAEA9E,EAAAgR,MAAA/c,EAAAgd,iBAEAhd,EAAA6Q,YAAAtN,EAAAsN,YAAAtN,EAAAoZ,aAAA3c,EAAAid,qBAAAjd,EAAA3C,OACA2C,EAAA4Q,YAAApmB,KAAAC,IAAAuV,EAAA6Q,YAAAtN,EAAAoZ,aAAAR,EAAA,GAEAv3B,EAAA,EAAAoa,EAAAkd,EAAAp3B,OAAiCF,EAAAoa,IAAUpa,EAC3Cob,EAAA0N,cAAAwO,EAAAt3B,KAAAmoB,IAIAW,cAAA,SAAA1J,EAAA3G,EAAA0P,GACA,IAAA/M,EAAAxhB,KACA+kB,EAAAvD,EAAAuD,MACAqQ,EAAArQ,EAAAqQ,UACAt0B,EAAAikB,EAAAzjB,QACAo9B,EAAA59B,EAAAwqB,UACAqT,GAAAvJ,EAAAjQ,KAAAiQ,EAAA/P,OAAA,EACAuZ,GAAAxJ,EAAAhQ,IAAAgQ,EAAA9P,QAAA,EACA0M,EAAAlxB,EAAA+kB,SACAoM,EAAAnxB,EAAA+kB,SACA4H,EAAAjM,EAAAkM,aACAsP,EAAAzO,GAAAmQ,EAAAvC,cAAA,EAAA3W,EAAAmE,OAAA,EAAAnI,EAAAqd,uBAAApR,EAAAnuB,KAAAuf,KAAA/d,EAAAk8B,eAAA,EAAAhxB,KAAAmC,KACAikB,EAAA7D,GAAAmQ,EAAAtC,aAAA,EAAA5a,EAAA4Q,YACAC,EAAA9D,GAAAmQ,EAAAtC,aAAA,EAAA5a,EAAA6Q,YACA/wB,EAAAkkB,EAAAwW,UAAA,GAEAzS,GAAAnI,OAAAoE,EAAA,CAEAqJ,cAAArN,EAAA3C,MACAkQ,OAAAlQ,EAGAiL,OAAA,CACAnkB,gBAAArE,EAAAqE,gBACAC,YAAAtE,EAAAsE,YACAC,YAAAvE,EAAAuE,YACAsrB,YAAA7vB,EAAA6vB,YACA3kB,EAAAmyB,EAAA5Z,EAAAsZ,QACA5xB,EAAAmyB,EAAA7Z,EAAAuZ,QACAtM,aACAC,WACA+K,gBACA3K,cACAD,cACA/sB,MAAAkkB,GAAA3J,sBAAA6N,EAAApoB,MAAAwZ,EAAAkG,EAAAzlB,KAAA8F,OAAAyZ,OAIA,IAAAqL,EAAA1E,EAAAsE,OAGAyE,GAAAmQ,EAAAvC,gBAEAjS,EAAA8H,WADA,IAAAnT,EACA/d,EAAA+kB,SAEArE,EAAAgM,UAAAluB,KAAAuf,EAAA,GAAAiL,OAAAmI,SAGA/H,EAAA+H,SAAA/H,EAAA8H,WAAA9H,EAAA8S,eAGAxX,EAAAoE,SAGA4U,eAAA,WACA,IAGArjB,EAHAsS,EAAAztB,KAAA0tB,aACAH,EAAAvtB,KAAAwtB,UACA+Q,EAAA,EAcA,OAXAhV,GAAAtJ,KAAAsN,EAAAjuB,KAAA,SAAA6E,EAAA0a,GACA1D,EAAAsS,EAAAnuB,KAAAuf,GACArd,MAAA2Z,IAAAhX,EAAAwlB,SACA4U,GAAAvyB,KAAA4oB,IAAAzZ,MAQAojB,GAGAM,uBAAA,SAAA1jB,GACA,IAAAojB,EAAAv+B,KAAAwtB,UAAA+Q,MACA,OAAAA,EAAA,IAAA/8B,MAAA2Z,GACA,EAAAnP,KAAAmC,IAAAnC,KAAA4oB,IAAAzZ,GAAAojB,GAEA,GAIAL,kBAAA,SAAAR,GACA,IAGAt3B,EAAAoa,EAAA+M,EAAA/H,EAAA6U,EAAA/4B,EAAAuE,EAAAi5B,EAFA7yB,EAAA,EACA8Y,EAFA/kB,KAEA+kB,MAGA,IAAA2Y,EAEA,IAAAt3B,EAAA,EAAAoa,EAAAuE,EAAAzlB,KAAAgG,SAAAgB,OAAiDF,EAAAoa,IAAUpa,EAC3D,GAAA2e,EAAAoU,iBAAA/yB,GAAA,CACAmnB,EAAAxI,EAAAiJ,eAAA5nB,GACAs3B,EAAAnQ,EAAAjuB,KACA8G,IAXApG,KAWA6e,QACAwb,EAAA9M,EAAA8M,YAEA,MAKA,IAAAqD,EACA,SAGA,IAAAt3B,EAAA,EAAAoa,EAAAkd,EAAAp3B,OAAiCF,EAAAoa,IAAUpa,EAC3Cof,EAAAkY,EAAAt3B,GAEA,WADA9E,EAAA+4B,IAAArC,uBAAAxS,EAAApf,GAAAof,EAAAwW,UACA7K,cACAtrB,EAAAvE,EAAAuE,YACAi5B,EAAAx9B,EAAAgvB,iBAGArkB,EAAA6yB,GADA7yB,EAAApG,EAAAoG,EAAApG,EAAAoG,GACA6yB,EAAA7yB,GAGA,OAAAA,GAMAgkB,cAAA,SAAAzK,GACA,IAAA0E,EAAA1E,EAAAsE,OACAxoB,EAAAkkB,EAAAwW,SACA7L,EAAA5G,GAAA4G,cAEA3K,EAAAwK,eAAA,CACArqB,gBAAAukB,EAAAvkB,gBACAC,YAAAskB,EAAAtkB,YACAC,YAAAqkB,EAAArkB,aAGAqkB,EAAAvkB,gBAAAu2B,GAAA56B,EAAA8uB,qBAAAD,EAAA7uB,EAAAqE,kBACAukB,EAAAtkB,YAAAs2B,GAAA56B,EAAA+uB,iBAAAF,EAAA7uB,EAAAsE,cACAskB,EAAArkB,YAAAq2B,GAAA56B,EAAAgvB,iBAAAhvB,EAAAuE,cAMAmyB,uBAAA,SAAAxS,EAAA3G,GACA,IAMAzY,EAAAoa,EAAAjJ,EALAwN,EADA/kB,KACA+kB,MACA0I,EAFAztB,KAEA0tB,aACAwC,EAAA1K,EAAA0K,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QAAAuuB,SAAArK,IACA/M,EAAA,GAIA6Q,EAAA,CACAvE,QACAiW,UAAAnc,EACA4O,UACAR,aAbAjtB,KAaA6e,OAGAuB,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAha,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAE3CqS,EADAlB,EAAA6I,EAAAha,IACA61B,GAAA,CACA/L,EAAA3Y,GACAkW,EAAAlW,GACAjW,EAAAiW,IACA+R,EAAAzK,GAGA,OAAApG,GAOAgmB,qBAAA,SAAAxR,GAGA,IAFA,IAAA8R,EAAA,EAEA34B,EAAA,EAAiBA,EAAA6mB,IAAkB7mB,EACnCpG,KAAA+kB,MAAAoU,iBAAA/yB,KACA24B,GAAA/+B,KAAA49B,eAAAx3B,IAIA,OAAA24B,GAMAnB,eAAA,SAAAoB,GACA,OAAAhzB,KAAAC,IAAAiwB,GAAAl8B,KAAA+kB,MAAAzlB,KAAAgG,SAAA05B,GAAAlhB,OAAA,OAOAsgB,8BAAA,WACA,OAAAp+B,KAAAy+B,qBAAAz+B,KAAA+kB,MAAAzlB,KAAAgG,SAAAgB,WAIAiiB,GAAAT,KAAA,iBACAuP,MAAA,CACAC,KAAA,QACA2H,KAAA,KAGArR,OAAA,CACAC,MAAA,EACA1P,KAAA,SACAgd,SAAA,WAGApN,MAAA,EACA5P,KAAA,WACAgd,SAAA,OACA5D,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,MAKA9H,SAAA,CACA4G,UAAA,CACAN,cAAA,SAIAiF,SAAA,CACA9D,KAAA,QACA2H,KAAA,OAIA,IAAAC,GAAAtH,GAAAxW,OAAA,CAIA+M,iBAAA,WACA,OAAAnuB,KAAAwtB,UAAAG,SAMAS,iBAAA,WACA,OAAApuB,KAAAwtB,UAAAM,WAIAqR,GAAA5V,GAAA7J,eACA0f,GAAA7V,GAAAjoB,QAAA2B,QACAo8B,GAAA9V,GAAAhmB,OAAAkjB,eAsBA,SAAA6Y,GAAA7R,EAAAnsB,GACA,OAAA69B,GAAA1R,EAAA8R,SAAAj+B,EAAAgnB,WArBAC,GAAAT,KAAA,QACAQ,WAAA,EACAwL,UAAA,EAEAuD,MAAA,CACAC,KAAA,SAGA1J,OAAA,CACAC,MAAA,EACA1P,KAAA,WACA7a,GAAA,aAEAyqB,MAAA,EACA5P,KAAA,SACA7a,GAAA,gBASA,IAAAk8B,GAAAtO,GAAA9P,OAAA,CAEA8L,mBAAA2C,GAAA9pB,KAEAonB,gBAAA0C,GAAAqH,MAEA1I,OAAA,SAAAD,GACA,IAOAnoB,EAAAoa,EAPAgB,EAAAxhB,KACAutB,EAAA/L,EAAAgM,UACA6F,EAAA9F,EAAAE,QACAsG,EAAAxG,EAAAjuB,MAAA,GACAmb,EAAA+G,EAAAyM,cAAAV,EAAAO,SACAL,EAAAjM,EAAAkM,aACA6R,EAAAD,GAAA7R,EAAAjM,EAAAuD,MAAAzjB,SAsBA,IAlBAi+B,SAEAh5B,IAAAknB,EAAAnG,cAAA/gB,IAAAknB,EAAAgS,cACAhS,EAAAgS,YAAAhS,EAAAnG,SAIA+L,EAAAqM,OAAAjlB,EACA4Y,EAAAxE,cAAArN,EAAA3C,MAEAwU,EAAAW,UAAAD,EAEAV,EAAAvJ,OAAAtI,EAAAme,oBAAAtM,GAEAA,EAAAzJ,SAIAxjB,EAAA,EAAAoa,EAAAuT,EAAAztB,OAAmCF,EAAAoa,IAAUpa,EAC7Cob,EAAA0N,cAAA6E,EAAA3tB,KAAAmoB,GAQA,IALAgR,GAAA,IAAAlM,EAAAvJ,OAAAxC,SACA9F,EAAAoe,4BAIAx5B,EAAA,EAAAoa,EAAAuT,EAAAztB,OAAmCF,EAAAoa,IAAUpa,EAC7C2tB,EAAA3tB,GAAAwjB,SAIAsF,cAAA,SAAAxI,EAAA7H,EAAA0P,GACA,IASA/hB,EAAAC,EATA+U,EAAAxhB,KACAutB,EAAA/L,EAAAgM,UACA0C,EAAAxJ,EAAAwJ,QAAA,GACAzC,EAAAjM,EAAAkM,aACAT,EAAAzL,EAAA3C,MACA1D,EAAAsS,EAAAnuB,KAAAuf,GACA+c,EAAApa,EAAAyM,cAAAV,EAAAO,SACA6N,EAAAna,EAAAyM,cAAAV,EAAAI,SACAkS,EAAAtS,EAAAE,QAAA3D,OAGAxoB,EAAAkgB,EAAAse,qBAAApZ,EAAA7H,GAEArS,EAAAmvB,EAAAlC,iBAAA,iBAAAte,IAAA4gB,IAAAld,EAAAoO,GACAxgB,EAAA8hB,EAAAqN,EAAAtD,eAAA9W,EAAAue,gBAAA5kB,EAAA0D,EAAAoO,GAGAvG,EAAAuR,QAAA0D,EACAjV,EAAAwR,QAAA0D,EACAlV,EAAAsV,SAAA16B,EACAolB,EAAAmI,cAAA5B,EACAvG,EAAAqI,OAAAlQ,EAGA6H,EAAAoD,OAAA,CACAtd,IACAC,IACA+nB,KAAAtE,EAAAsE,MAAAhzB,MAAAgL,IAAAhL,MAAAiL,GAEAyY,OAAA5jB,EAAA4jB,OACA4P,WAAAxzB,EAAAwzB,WACAjP,SAAAvkB,EAAAukB,SACAlgB,gBAAArE,EAAAqE,gBACAC,YAAAtE,EAAAsE,YACAC,YAAAvE,EAAAuE,YACAyhB,QAAA6X,GAAAjP,EAAA5I,QAAAuY,IAAAvY,QAAA,GACAF,cAAAyY,KAAAzY,YAEAyN,UAAAvzB,EAAAuzB,YAOAiL,qBAAA,SAAA37B,EAAA0a,GACA,IAMAzY,EAAAoa,EAAAjJ,EALAwN,EADA/kB,KACA+kB,MACA0I,EAAA1I,EAAAzlB,KAAAgG,SAFAtF,KAEA6e,OACAqR,EAAA/rB,EAAA+rB,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QAAAuuB,SAAAnJ,MACAjO,EAAA,GAIA6Q,EAAA,CACAvE,QACAiW,UAAAnc,EACA4O,UACAR,aAbAjtB,KAaA6e,OAGAmhB,EAAA,CACAr6B,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAgvB,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACA5P,OAAA,cACAW,SAAA,iBAEAzF,EAAAf,OAAAe,KAAA4f,GAEA,IAAA55B,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAC3CmR,EAAA6I,EAAAha,GACAqS,EAAAlB,GAAA6nB,GAAA,CACAlP,EAAA3Y,GACAkW,EAAAuS,EAAAzoB,IACAkW,EAAAlW,GACAjW,EAAAiW,IACA+R,EAAAzK,GAGA,OAAApG,GAMAknB,oBAAA,SAAAx7B,GACA,IAOAiC,EAAAoa,EAAAjJ,EANAwN,EADA/kB,KACA+kB,MACA0I,EAAA1I,EAAAzlB,KAAAgG,SAFAtF,KAEA6e,OACAqR,EAAA/rB,EAAA+rB,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QACA2+B,EAAA3+B,EAAAuuB,SAAAwD,KACA5a,EAAA,GAGA2H,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,OACA,0BAGA,IAAAha,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAE3CqS,EADAlB,EAAA6I,EAAAha,IACAg5B,GAAA,CACAlP,EAAA3Y,GACAkW,EAAAlW,GACA0oB,EAAA1oB,KAWA,OAJAkB,EAAAqb,SAAAqL,GAAA1R,EAAAqG,SAAAxyB,EAAAwyB,UACArb,EAAA6O,QAAA6X,GAAA1R,EAAAgS,YAAAQ,EAAA3Y,SACA7O,EAAA2O,YAAAgY,GAAA,CAAAlP,EAAA9I,YAAAqG,EAAArG,YAAA6Y,EAAA9Y,UAEA1O,GAGAsnB,gBAAA,SAAA5kB,EAAA0D,EAAAoO,GACA,IAMA7mB,EAAAq2B,EAAAyD,EALAnb,EADA/kB,KACA+kB,MACAwI,EAFAvtB,KAEAwtB,UACAoO,EAHA57B,KAGAiuB,cAAAV,EAAAO,SACAqS,EAAA,EACAC,EAAA,EAGA,GAAAxE,EAAAt6B,QAAA23B,QAAA,CACA,IAAA7yB,EAAA,EAAcA,EAAA6mB,EAAkB7mB,IAGhC,GAFAq2B,EAAA1X,EAAAzlB,KAAAgG,SAAAc,GAEA,UADA85B,EAAAnb,EAAAiJ,eAAA5nB,IACA+X,MAAA+hB,EAAApS,UAAA8N,EAAAt4B,IAAAyhB,EAAAoU,iBAAA/yB,GAAA,CACA,IAAAi6B,EAAA5gB,OAAAmc,EAAAzB,cAAAsC,EAAAn9B,KAAAuf,KACAwhB,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAA7gB,OAAAmc,EAAAzB,cAAAhf,IACA,OAAAmlB,EAAA,EACA1E,EAAAnC,iBAAA2G,EAAAE,GAEA1E,EAAAnC,iBAAA0G,EAAAG,GAGA,OAAA1E,EAAAnC,iBAAAte,IAGAykB,0BAAA,WACA,IAMAx5B,EAAAoa,EAAA0J,EAAAqW,EALAxb,EADA/kB,KACA+kB,MACAwI,EAFAvtB,KAEAwtB,UACAqS,EAAAtS,EAAAE,QAAA3D,OACAnD,EAAA5B,EAAAqQ,UACArB,EAAAxG,EAAAjuB,MAAA,GAUA,SAAAkhC,EAAAC,EAAA10B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA00B,EAAAx0B,GAAAF,GAGA,GAVA8zB,EAAA/L,WACAC,IAAA2M,OAAA,SAAAD,GACA,OAAAA,EAAA3W,OAAA0K,QAQA,aAAAqL,EAAAc,uBACApX,GAAAqX,oBAAA7M,QAEA,IAAA3tB,EAAA,EAAAoa,EAAAuT,EAAAztB,OAAoCF,EAAAoa,IAAUpa,EAC9C8jB,EAAA6J,EAAA3tB,GAAA0jB,OACAyW,EAAAhX,GAAAsX,YACAtX,GAAAgL,aAAAR,EAAA3tB,GAAA0jB,OACAI,EACAX,GAAAuX,SAAA/M,EAAA3tB,GAAA0jB,OACA+V,EAAAvY,SAEA4C,EAAA1C,sBAAA+Y,EAAAtZ,SAAAza,EACA0d,EAAAxC,sBAAA6Y,EAAAtZ,SAAAxa,EACAyd,EAAAzC,kBAAA8Y,EAAAhG,KAAA/tB,EACA0d,EAAAvC,kBAAA4Y,EAAAhG,KAAA9tB,EAIA,GAAAsY,EAAAzjB,QAAAuuB,SAAAwD,KAAAK,gBACA,IAAAttB,EAAA,EAAAoa,EAAAuT,EAAAztB,OAAoCF,EAAAoa,IAAUpa,EAC9C8jB,EAAA6J,EAAA3tB,GAAA0jB,OACAuV,GAAAnV,EAAAvD,KACAvgB,EAAA,GAAAi5B,GAAAtL,EAAA3tB,EAAA,GAAA0jB,OAAAnD,KACAuD,EAAA1C,sBAAAgZ,EAAAtW,EAAA1C,sBAAAb,EAAAxB,KAAAwB,EAAAtB,OACA6E,EAAAxC,sBAAA8Y,EAAAtW,EAAAxC,sBAAAf,EAAAvB,IAAAuB,EAAArB,SAEAlf,EAAA2tB,EAAAztB,OAAA,GAAA+4B,GAAAtL,EAAA3tB,EAAA,GAAA0jB,OAAAnD,KACAuD,EAAAzC,kBAAA+Y,EAAAtW,EAAAzC,kBAAAd,EAAAxB,KAAAwB,EAAAtB,OACA6E,EAAAvC,kBAAA6Y,EAAAtW,EAAAvC,kBAAAhB,EAAAvB,IAAAuB,EAAArB,WAOAwK,KAAA,WACA,IAMAiR,EALAhc,EADA/kB,KACA+kB,MACAwI,EAFAvtB,KAEAwtB,UACAuG,EAAAxG,EAAAjuB,MAAA,GACAqnB,EAAA5B,EAAAqQ,UACA5U,EAAAuT,EAAAztB,OAEAF,EAAA,EAkBA,IAhBAk5B,GATAt/B,KASA0tB,aAAA3I,EAAAzjB,WACAy/B,GAAAxT,EAAAE,QAAA3D,OAAAjkB,aAAA,KAEA0jB,GAAAhmB,OAAAqjB,SAAA7B,EAAAthB,IAAA,CACA0hB,KAAAwB,EAAAxB,KACAE,MAAAsB,EAAAtB,MACAD,IAAAuB,EAAAvB,IAAA2b,EACAzb,OAAAqB,EAAArB,OAAAyb,IAGAxT,EAAAE,QAAAqC,OAEAvG,GAAAhmB,OAAAwjB,WAAAhC,EAAAthB,MAIQ2C,EAAAoa,IAAUpa,EAClB2tB,EAAA3tB,GAAA0pB,KAAAnJ,IAOAsJ,cAAA,SAAAvJ,GACA,IAAAwD,EAAAxD,EAAAoD,OACAxoB,EAAAolB,EAAAsV,SACA7L,EAAA5G,GAAA4G,cAEAzJ,EAAAsJ,eAAA,CACArqB,gBAAAukB,EAAAvkB,gBACAC,YAAAskB,EAAAtkB,YACAC,YAAAqkB,EAAArkB,YACAqf,OAAAgF,EAAAhF,QAGAgF,EAAAvkB,gBAAAw5B,GAAA79B,EAAA8uB,qBAAAD,EAAA7uB,EAAAqE,kBACAukB,EAAAtkB,YAAAu5B,GAAA79B,EAAA+uB,iBAAAF,EAAA7uB,EAAAsE,cACAskB,EAAArkB,YAAAs5B,GAAA79B,EAAAgvB,iBAAAhvB,EAAAuE,aACAqkB,EAAAhF,OAAAia,GAAA79B,EAAAkwB,YAAAlwB,EAAA4jB,WAIA8b,GAAAzX,GAAAjoB,QAAA2B,QAEAslB,GAAAT,KAAA,aACArN,MAAA,CACA0D,KAAA,eACA8iB,WAAA,CACAC,SAAA,GAEAxJ,UAAA,CACAyJ,UAAA,GAEAC,YAAA,CACAF,SAAA,GAEArH,MAAA,CACAwH,aAAA,IAKA/V,UAAA,CACA6Q,eAAA,EACAC,cAAA,GAGApK,YAAA,GAAAhmB,KAAAmC,GACAkuB,eAAA,SAAAtX,GACA,IAAAxd,EAAA,GACAA,EAAAN,KAAA,cAAA8d,EAAAzhB,GAAA,aAEA,IAAAhE,EAAAylB,EAAAzlB,KACAgG,EAAAhG,EAAAgG,SACAF,EAAA9F,EAAA8F,OAEA,GAAAE,EAAAgB,OACA,QAAAF,EAAA,EAAkBA,EAAAd,EAAA,GAAAhG,KAAAgH,SAA6BF,EAC/CmB,EAAAN,KAAA,qCAAA3B,EAAA,GAAAK,gBAAAS,GAAA,aACAhB,EAAAgB,IACAmB,EAAAN,KAAA7B,EAAAgB,IAEAmB,EAAAN,KAAA,SAKA,OADAM,EAAAN,KAAA,SACAM,EAAA+0B,KAAA,KAEAC,OAAA,CACAn3B,OAAA,CACAo3B,eAAA,SAAAzX,GACA,IAAAzlB,EAAAylB,EAAAzlB,KACA,OAAAA,EAAA8F,OAAAkB,QAAAhH,EAAAgG,SAAAgB,OACAhH,EAAA8F,OAAAH,IAAA,SAAAI,EAAAe,GACA,IAAAmnB,EAAAxI,EAAAiJ,eAAA,GACAyO,EAAAn9B,EAAAgG,SAAA,GACAkgB,EAAA+H,EAAAjuB,KAAA8G,GACA8pB,EAAA1K,EAAA0K,QAAA,GACAwM,EAAA3X,EAAAzjB,QAAAuuB,SAAArK,IACAc,EAAA0a,GAAA,CAAA9Q,EAAAvqB,gBAAA82B,EAAA92B,gBAAA+2B,EAAA/2B,sBAAAY,EAAAH,GACAmgB,EAAAya,GAAA,CAAA9Q,EAAAtqB,YAAA62B,EAAA72B,YAAA82B,EAAA92B,kBAAAW,EAAAH,GACAu2B,EAAAqE,GAAA,CAAA9Q,EAAArqB,YAAA42B,EAAA52B,YAAA62B,EAAA72B,kBAAAU,EAAAH,GAEA,OACAmB,KAAAlC,EACA2tB,UAAA1M,EACA6M,YAAA5M,EACA0M,UAAA0J,EACAhT,OAAAnoB,MAAAi7B,EAAAn9B,KAAA8G,KAAAmnB,EAAAjuB,KAAA8G,GAAAujB,OAGA9K,MAAAzY,KAIA,KAIAw2B,QAAA,SAAAC,EAAAC,GACA,IAEA12B,EAAAoa,EAAA+M,EAFA1O,EAAAie,EAAAje,MACAkG,EAAA/kB,KAAA+kB,MAGA,IAAA3e,EAAA,EAAAoa,GAAAuE,EAAAzlB,KAAAgG,UAAA,IAAAgB,OAAyDF,EAAAoa,IAAUpa,GACnEmnB,EAAAxI,EAAAiJ,eAAA5nB,IACA9G,KAAAuf,GAAA8K,QAAA4D,EAAAjuB,KAAAuf,GAAA8K,OAGA5E,EAAAyJ,WAKA4M,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEAj2B,MAAA,SAAA4c,EAAA3iB,GACA,OAAAA,EAAA8F,OAAA6c,EAAApD,OAAA,KAAAoD,EAAAwZ,YAMA,IAAA6F,GAAApQ,GAAA9P,OAAA,CAEA+L,gBAAA0C,GAAAoH,IAEA7J,WAAA7D,GAAAtK,KAEAuP,OAAA,SAAAD,GACA,IAOAnoB,EAAAoa,EAAAsR,EAPAtQ,EAAAxhB,KACAytB,EAAAjM,EAAAkM,aACAH,EAAA/L,EAAAgM,UACArD,EAAA3I,EAAAuD,MAAAzjB,QAAA0wB,YAAA,EACAuP,EAAA/f,EAAAggB,QAAA,GACAC,EAAAjgB,EAAAkgB,QAAA,GACAhE,EAAAnQ,EAAAjuB,KAOA,IAJAkiB,EAAAmgB,gBAEApU,EAAAmD,MAAAlP,EAAAogB,uBAEAx7B,EAAA,EAAAoa,EAAAiN,EAAAnuB,KAAAgH,OAAyCF,EAAAoa,EAAUpa,IACnDm7B,EAAAn7B,GAAA+jB,EACA2H,EAAAtQ,EAAAqgB,cAAAz7B,GACAq7B,EAAAr7B,GAAA0rB,EACA3H,GAAA2H,EAGA,IAAA1rB,EAAA,EAAAoa,EAAAkd,EAAAp3B,OAAiCF,EAAAoa,IAAUpa,EAC3Cs3B,EAAAt3B,GAAA41B,SAAAxa,EAAAwW,uBAAA0F,EAAAt3B,MACAob,EAAA0N,cAAAwO,EAAAt3B,KAAAmoB,IAOAoT,cAAA,WACA,IAAAngB,EAAAxhB,KACA+kB,EAAAvD,EAAAuD,MACAqQ,EAAArQ,EAAAqQ,UACAt0B,EAAAikB,EAAAzjB,QACAm8B,EAAAzxB,KAAAD,IAAAqpB,EAAA/P,MAAA+P,EAAAjQ,KAAAiQ,EAAA9P,OAAA8P,EAAAhQ,KAEAL,EAAAsN,YAAArmB,KAAAC,IAAAwxB,EAAA,KACA1Y,EAAAqN,YAAApmB,KAAAC,IAAAnL,EAAAi8B,iBAAAhY,EAAAsN,YAAA,IAAAvxB,EAAA,sBACAikB,EAAAoZ,cAAApZ,EAAAsN,YAAAtN,EAAAqN,aAAArN,EAAA+c,yBAEAtgB,EAAA6Q,YAAAtN,EAAAsN,YAAAtN,EAAAoZ,aAAA3c,EAAA3C,MACA2C,EAAA4Q,YAAA5Q,EAAA6Q,YAAAtN,EAAAoZ,cAGAjP,cAAA,SAAA1J,EAAA3G,EAAA0P,GACA,IAAA/M,EAAAxhB,KACA+kB,EAAAvD,EAAAuD,MACA0I,EAAAjM,EAAAkM,aACA5sB,EAAAikB,EAAAzjB,QACAo9B,EAAA59B,EAAAwqB,UACA7Q,EAAAsK,EAAAtK,MACArV,EAAA2f,EAAAzlB,KAAA8F,OAEAu5B,EAAAlkB,EAAAsnB,QACAnD,EAAAnkB,EAAAunB,QAGAC,EAAAnhC,EAAAkxB,WACAD,EAAAvM,EAAAmE,OAAA,EAAAlP,EAAAynB,8BAAAzU,EAAAnuB,KAAAuf,IACAmT,EAAAxQ,EAAAggB,QAAA3iB,GACAoT,EAAAD,GAAAxM,EAAAmE,OAAA,EAAAnI,EAAAkgB,QAAA7iB,IAEAsjB,EAAAzD,EAAAtC,aAAA,EAAA3hB,EAAAynB,8BAAAzU,EAAAnuB,KAAAuf,IACAvd,EAAAkkB,EAAAwW,UAAA,GAEAzS,GAAAnI,OAAAoE,EAAA,CAEAqJ,cAAArN,EAAA3C,MACAkQ,OAAAlQ,EACA6gB,OAAAjlB,EAGAqP,OAAA,CACAnkB,gBAAArE,EAAAqE,gBACAC,YAAAtE,EAAAsE,YACAC,YAAAvE,EAAAuE,YACAsrB,YAAA7vB,EAAA6vB,YACA3kB,EAAAmyB,EACAlyB,EAAAmyB,EACAxM,YAAA,EACAC,YAAA9D,EAAA4T,EAAApQ,EACAC,WAAAzD,GAAAmQ,EAAAvC,cAAA8F,EAAAjQ,EACAC,SAAA1D,GAAAmQ,EAAAvC,cAAA8F,EAAAhQ,EACA5sB,MAAAkkB,GAAA3J,sBAAAxa,EAAAyZ,EAAAzZ,EAAAyZ,OAIA2G,EAAAoE,SAGAgY,qBAAA,WACA,IAAAnU,EAAAztB,KAAA0tB,aACAH,EAAAvtB,KAAAwtB,UACAkD,EAAA,EAQA,OANAnH,GAAAtJ,KAAAsN,EAAAjuB,KAAA,SAAA6E,EAAA0a,GACArd,MAAAisB,EAAAnuB,KAAAuf,KAAA1a,EAAAwlB,QACA+G,MAIAA,GAMAT,cAAA,SAAAzK,GACA,IAAA0E,EAAA1E,EAAAsE,OACAxoB,EAAAkkB,EAAAwW,SACA7L,EAAA5G,GAAA4G,cACAzQ,EAAA6J,GAAA7J,eAEA8F,EAAAwK,eAAA,CACArqB,gBAAAukB,EAAAvkB,gBACAC,YAAAskB,EAAAtkB,YACAC,YAAAqkB,EAAArkB,aAGAqkB,EAAAvkB,gBAAA+Z,EAAApe,EAAA8uB,qBAAAD,EAAA7uB,EAAAqE,kBACAukB,EAAAtkB,YAAA8Z,EAAApe,EAAA+uB,iBAAAF,EAAA7uB,EAAAsE,cACAskB,EAAArkB,YAAA6Z,EAAApe,EAAAgvB,iBAAAhvB,EAAAuE,cAMAmyB,uBAAA,SAAAxS,EAAA3G,GACA,IAMAzY,EAAAoa,EAAAjJ,EALAwN,EADA/kB,KACA+kB,MACA0I,EAFAztB,KAEA0tB,aACAwC,EAAA1K,EAAA0K,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QAAAuuB,SAAArK,IACA/M,EAAA,GAIA6Q,EAAA,CACAvE,QACAiW,UAAAnc,EACA4O,UACAR,aAbAjtB,KAaA6e,OAGAuB,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAha,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAE3CqS,EADAlB,EAAA6I,EAAAha,IACA46B,GAAA,CACA9Q,EAAA3Y,GACAkW,EAAAlW,GACAjW,EAAAiW,IACA+R,EAAAzK,GAGA,OAAApG,GAMAopB,cAAA,SAAAhjB,GACA,IAAA2C,EAAAxhB,KACA0wB,EAAA1wB,KAAAwtB,UAAAkD,MACAjD,EAAAjM,EAAAkM,aACAH,EAAA/L,EAAAgM,UAEA,GAAAhsB,MAAAisB,EAAAnuB,KAAAuf,KAAA0O,EAAAjuB,KAAAuf,GAAA8K,OACA,SAIA,IAAAL,EAAA,CACAvE,MAAAvD,EAAAuD,MACAiW,UAAAnc,EACA4O,UACAR,aAAAzL,EAAA3C,OAGA,OAAAmiB,GAAA,CACAxf,EAAAuD,MAAAzjB,QAAAuuB,SAAArK,IAAAsM,MACA,EAAA9lB,KAAAmC,GAAAuiB,GACApH,EAAAzK,MAIA0J,GAAAT,KAAA,MAAAyB,GAAArL,MAAAqK,GAAA6Z,WACA7Z,GAAAT,KAAA,OACAiV,iBAAA,IAIA,IAAAsF,GAAAlF,GAEAmF,GAAA/Y,GAAA7J,eACA6iB,GAAAhZ,GAAAjoB,QAAA2B,QAEAslB,GAAAT,KAAA,SACArN,MAAA,CACA0D,KAAA,gBAEA0R,SAAA,CACAwD,KAAA,CACA/L,QAAA,MAKA,IAAAkb,GAAAtR,GAAA9P,OAAA,CAEA8L,mBAAA2C,GAAA9pB,KAEAonB,gBAAA0C,GAAAqH,MAEA9J,WAAA7D,GAAAtK,KAEAuP,OAAA,SAAAD,GACA,IAMAnoB,EAAAoa,EANAgB,EAAAxhB,KACAutB,EAAA/L,EAAAgM,UACA6F,EAAA9F,EAAAE,QACAsG,EAAAxG,EAAAjuB,MAAA,GACAmb,EAAA+G,EAAAuD,MAAAtK,MACAgT,EAAAjM,EAAAkM,aAoBA,SAhBAnnB,IAAAknB,EAAAnG,cAAA/gB,IAAAknB,EAAAgS,cACAhS,EAAAgS,YAAAhS,EAAAnG,SAIA+L,EAAAqM,OAAAjlB,EACA4Y,EAAAxE,cAAArN,EAAA3C,MAEAwU,EAAAW,UAAAD,EACAV,EAAAc,OAAA,EAEAd,EAAAvJ,OAAAtI,EAAAme,oBAAAtM,GAEAA,EAAAzJ,QAGAxjB,EAAA,EAAAoa,EAAAuT,EAAAztB,OAAmCF,EAAAoa,IAAUpa,EAC7Cob,EAAA0N,cAAA6E,EAAA3tB,KAAAmoB,GAOA,IAHA/M,EAAAoe,4BAGAx5B,EAAA,EAAAoa,EAAAuT,EAAAztB,OAAmCF,EAAAoa,IAAUpa,EAC7C2tB,EAAA3tB,GAAAwjB,SAIAsF,cAAA,SAAAxI,EAAA7H,EAAA0P,GACA,IAAA/M,EAAAxhB,KACAkwB,EAAAxJ,EAAAwJ,QAAA,GACAzC,EAAAjM,EAAAkM,aACAjT,EAAA+G,EAAAuD,MAAAtK,MACAgoB,EAAAhoB,EAAAioB,yBAAA7jB,EAAA4O,EAAAnuB,KAAAuf,IACAvd,EAAAkgB,EAAAse,qBAAApZ,EAAA7H,GACAghB,EAAAre,EAAAgM,UAAAC,QAAA3D,OACAtd,EAAA+hB,EAAA9T,EAAAsnB,QAAAU,EAAAj2B,EACAC,EAAA8hB,EAAA9T,EAAAunB,QAAAS,EAAAh2B,EAGAia,EAAAgZ,OAAAjlB,EACAiM,EAAAsV,SAAA16B,EACAolB,EAAAmI,cAAArN,EAAA3C,MACA6H,EAAAqI,OAAAlQ,EAGA6H,EAAAoD,OAAA,CACAtd,IACAC,IACA+nB,KAAAtE,EAAAsE,MAAAhzB,MAAAgL,IAAAhL,MAAAiL,GAEAyY,OAAA5jB,EAAA4jB,OACA4P,WAAAxzB,EAAAwzB,WACAjP,SAAAvkB,EAAAukB,SACAlgB,gBAAArE,EAAAqE,gBACAC,YAAAtE,EAAAsE,YACAC,YAAAvE,EAAAuE,YACAyhB,QAAAgb,GAAApS,EAAA5I,QAAAuY,IAAAvY,QAAA,GAGAuN,UAAAvzB,EAAAuzB,YAOAiL,qBAAA,SAAA37B,EAAA0a,GACA,IAMAzY,EAAAoa,EAAAjJ,EALAwN,EADA/kB,KACA+kB,MACA0I,EAAA1I,EAAAzlB,KAAAgG,SAFAtF,KAEA6e,OACAqR,EAAA/rB,EAAA+rB,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QAAAuuB,SAAAnJ,MACAjO,EAAA,GAIA6Q,EAAA,CACAvE,QACAiW,UAAAnc,EACA4O,UACAR,aAbAjtB,KAaA6e,OAGAmhB,EAAA,CACAr6B,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAgvB,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACA5P,OAAA,cACAW,SAAA,iBAEAzF,EAAAf,OAAAe,KAAA4f,GAEA,IAAA55B,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAC3CmR,EAAA6I,EAAAha,GACAqS,EAAAlB,GAAAgrB,GAAA,CACArS,EAAA3Y,GACAkW,EAAAuS,EAAAzoB,IACAkW,EAAAlW,GACAjW,EAAAiW,IACA+R,EAAAzK,GAGA,OAAApG,GAMAknB,oBAAA,SAAAx7B,GACA,IAMAiC,EAAAoa,EAAAjJ,EALAwN,EADA/kB,KACA+kB,MACA0I,EAAA1I,EAAAzlB,KAAAgG,SAFAtF,KAEA6e,OACAqR,EAAA/rB,EAAA+rB,QAAA,GACA5uB,EAAAyjB,EAAAzjB,QAAAuuB,SAAAwD,KACA5a,EAAA,GAGA2H,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,QAGA,IAAAha,EAAA,EAAAoa,EAAAJ,EAAA9Z,OAAiCF,EAAAoa,IAAUpa,EAE3CqS,EADAlB,EAAA6I,EAAAha,IACAm8B,GAAA,CACArS,EAAA3Y,GACAkW,EAAAlW,GACAjW,EAAAiW,KAMA,OAFAkB,EAAA6O,QAAAgb,GAAA7U,EAAAgS,YAAAn+B,EAAAgmB,SAEA7O,GAGAmnB,0BAAA,WACA,IAIAx5B,EAAAoa,EAAA0J,EAAAqW,EAHAhT,EADAvtB,KACAwtB,UACA7G,EAFA3mB,KAEA+kB,MAAAqQ,UACArB,EAAAxG,EAAAjuB,MAAA,GAGA,SAAAkhC,EAAAC,EAAA10B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA00B,EAAAx0B,GAAAF,GAGA,IAAA3F,EAAA,EAAAoa,EAAAuT,EAAAztB,OAAmCF,EAAAoa,IAAUpa,EAC7C8jB,EAAA6J,EAAA3tB,GAAA0jB,OACAyW,EAAAhX,GAAAsX,YACAtX,GAAAgL,aAAAR,EAAA3tB,GAAA,GAAA0jB,OACAI,EACAX,GAAAuX,SAAA/M,EAAA3tB,GAAA,GAAA0jB,OACAI,EAAA5C,SAIA4C,EAAA1C,sBAAAgZ,EAAAD,EAAAtZ,SAAAza,EAAAma,EAAAxB,KAAAwB,EAAAtB,OACA6E,EAAAxC,sBAAA8Y,EAAAD,EAAAtZ,SAAAxa,EAAAka,EAAAvB,IAAAuB,EAAArB,QACA4E,EAAAzC,kBAAA+Y,EAAAD,EAAAhG,KAAA/tB,EAAAma,EAAAxB,KAAAwB,EAAAtB,OACA6E,EAAAvC,kBAAA6Y,EAAAD,EAAAhG,KAAA9tB,EAAAka,EAAAvB,IAAAuB,EAAArB,SAIA2K,cAAA,SAAAvJ,GACA,IAAAwD,EAAAxD,EAAAoD,OACAxoB,EAAAolB,EAAAsV,SACA7L,EAAA5G,GAAA4G,cAEAzJ,EAAAsJ,eAAA,CACArqB,gBAAAukB,EAAAvkB,gBACAC,YAAAskB,EAAAtkB,YACAC,YAAAqkB,EAAArkB,YACAqf,OAAAgF,EAAAhF,QAGAgF,EAAAvkB,gBAAA28B,GAAAhhC,EAAA8uB,qBAAAD,EAAA7uB,EAAAqE,kBACAukB,EAAAtkB,YAAA08B,GAAAhhC,EAAA+uB,iBAAAF,EAAA7uB,EAAAsE,cACAskB,EAAArkB,YAAAy8B,GAAAhhC,EAAAgvB,iBAAAhvB,EAAAuE,aACAqkB,EAAAhF,OAAAod,GAAAhhC,EAAAkwB,YAAAlwB,EAAA4jB,WAIAqD,GAAAT,KAAA,WACAuP,MAAA,CACAC,KAAA,UAGA1J,OAAA,CACAC,MAAA,EACAvqB,GAAA,WACA6a,KAAA,SACAgd,SAAA,WAEApN,MAAA,EACAzqB,GAAA,WACA6a,KAAA,SACAgd,SAAA,UAIA7S,WAAA,EAEA8S,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEAj2B,MAAA,SAAA4c,GACA,UAAAA,EAAAuZ,OAAA,KAAAvZ,EAAAwZ,OAAA,SAOA,IAMAkH,GAAA,CACA9K,IAAAD,GACAgL,OAAAlH,GACA0G,SAAAjF,GACA0F,cAAA3D,GACA7L,KAAAmM,GACAsD,UAAAxB,GACAyB,IAAAV,GACAW,MAAAR,GACAS,QAfAzD,IAwBA,SAAA0D,GAAArG,EAAA9X,GACA,OAAA8X,EAAAsG,OACA,CACA32B,EAAAqwB,EAAArwB,EACAC,EAAAowB,EAAApwB,GAIA8c,GAAA2Z,oBAAArG,EAAA9X,GAQA,SAAAqe,GAAAre,EAAAse,GACA,IACA9V,EAAAnnB,EAAAk3B,EAAA9c,EAAA8iB,EADAh+B,EAAAyf,EAAAzlB,KAAAgG,SAGA,IAAAc,EAAA,EAAAoa,EAAAlb,EAAAgB,OAAoCF,EAAAoa,IAAUpa,EAC9C,GAAA2e,EAAAoU,iBAAA/yB,GAKA,IADAmnB,EAAAxI,EAAAiJ,eAAA5nB,GACAk3B,EAAA,EAAAgG,EAAA/V,EAAAjuB,KAAAgH,OAAsCg3B,EAAAgG,IAAUhG,EAAA,CAChD,IAAAn5B,EAAAopB,EAAAjuB,KAAAg+B,GACAn5B,EAAA0lB,MAAA2K,MACA6O,EAAAl/B,IAYA,SAAAo/B,GAAAxe,EAAAoW,GACA,IAAAtL,EAAA,GAQA,OANAuT,GAAAre,EAAA,SAAA5gB,GACAA,EAAAstB,QAAA0J,EAAA3uB,EAAA2uB,EAAA1uB,IACAojB,EAAA5oB,KAAA9C,KAIA0rB,EAWA,SAAA2T,GAAAze,EAAAoW,EAAAsI,EAAAC,GACA,IAAAC,EAAAlkB,OAAAmkB,kBACAC,EAAA,GAkBA,OAhBAT,GAAAre,EAAA,SAAA5gB,GACA,IAAAs/B,GAAAt/B,EAAAstB,QAAA0J,EAAA3uB,EAAA2uB,EAAA1uB,GAAA,CAIA,IAAAqsB,EAAA30B,EAAAmuB,iBACAP,EAAA2R,EAAAvI,EAAArC,GACA/G,EAAA4R,GACAE,EAAA,CAAA1/B,GACAw/B,EAAA5R,GACGA,IAAA4R,GAEHE,EAAA58B,KAAA9C,MAIA0/B,EAQA,SAAAC,GAAA7E,GACA,IAAA8E,GAAA,IAAA9E,EAAAld,QAAA,KACAiiB,GAAA,IAAA/E,EAAAld,QAAA,KAEA,gBAAAkiB,EAAAC,GACA,IAAAC,EAAAJ,EAAA/3B,KAAA4oB,IAAAqP,EAAAz3B,EAAA03B,EAAA13B,GAAA,EACA43B,EAAAJ,EAAAh4B,KAAA4oB,IAAAqP,EAAAx3B,EAAAy3B,EAAAz3B,GAAA,EACA,OAAAT,KAAAoC,KAAApC,KAAAO,IAAA43B,EAAA,GAAAn4B,KAAAO,IAAA63B,EAAA,KAIA,SAAAC,GAAAtf,EAAA8X,EAAAv7B,GACA,IAAA65B,EAAA+H,GAAArG,EAAA9X,GAEAzjB,EAAA29B,KAAA39B,EAAA29B,MAAA,IACA,IAAAyE,EAAAI,GAAAxiC,EAAA29B,MACAqF,EAAAhjC,EAAAmiC,UAAAF,GAAAxe,EAAAoW,GAAAqI,GAAAze,EAAAoW,GAAA,EAAAuI,GACA7T,EAAA,GAEA,OAAAyU,EAAAh+B,QAIAye,EAAAzlB,KAAAgG,SAAA0B,QAAA,SAAAymB,EAAAR,GACA,GAAAlI,EAAAoU,iBAAAlM,GAAA,CACA,IAAAM,EAAAxI,EAAAiJ,eAAAf,GACA9oB,EAAAopB,EAAAjuB,KAAAglC,EAAA,GAAAvV,QAGA5qB,MAAA0lB,MAAA2K,MACA3E,EAAA5oB,KAAA9C,MAKA0rB,GAfA,GA+BA,IAAA0U,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAA1f,EAAA8X,GACA,IAAA1B,EAAA+H,GAAArG,EAAA9X,GACA8K,EAAA,GASA,OAPAuT,GAAAre,EAAA,SAAA5gB,GACA,GAAAA,EAAAstB,QAAA0J,EAAA3uB,EAAA2uB,EAAA1uB,GAEA,OADAojB,EAAA5oB,KAAA9C,GACA0rB,IAIAA,EAAA/X,MAAA,MASAzS,MAAAg/B,GAYAxlB,MAAAwlB,GAWA5W,QAAA,SAAA1I,EAAA8X,EAAAv7B,GACA,IAAA65B,EAAA+H,GAAArG,EAAA9X,GACAzjB,EAAA29B,KAAA39B,EAAA29B,MAAA,KACA,IAAAyE,EAAAI,GAAAxiC,EAAA29B,MACAqF,EAAAhjC,EAAAmiC,UAAAF,GAAAxe,EAAAoW,GAAAqI,GAAAze,EAAAoW,GAAA,EAAAuI,GAMA,OAJAY,EAAAh+B,OAAA,IACAg+B,EAAAvf,EAAAiJ,eAAAsW,EAAA,GAAAzV,eAAAvvB,MAGAglC,GASAI,SAAA,SAAA3f,EAAA8X,GACA,OAAAwH,GAAAtf,EAAA8X,EAAA,CAA+B4G,WAAA,KAW/B/c,MAAA,SAAA3B,EAAA8X,GACA,IAAA1B,EAAA+H,GAAArG,EAAA9X,GACA,OAAAwe,GAAAxe,EAAAoW,IAWAwJ,QAAA,SAAA5f,EAAA8X,EAAAv7B,GACA,IAAA65B,EAAA+H,GAAArG,EAAA9X,GACAzjB,EAAA29B,KAAA39B,EAAA29B,MAAA,KACA,IAAAyE,EAAAI,GAAAxiC,EAAA29B,MACA,OAAAuE,GAAAze,EAAAoW,EAAA75B,EAAAmiC,UAAAC,IAWAl3B,EAAA,SAAAuY,EAAA8X,EAAAv7B,GACA,IAAA65B,EAAA+H,GAAArG,EAAA9X,GACAuf,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAre,EAAA,SAAA5gB,GACAA,EAAA8wB,SAAAkG,EAAA3uB,IACA83B,EAAAr9B,KAAA9C,GAGAA,EAAAstB,QAAA0J,EAAA3uB,EAAA2uB,EAAA1uB,KACAm4B,GAAA,KAMAtjC,EAAAmiC,YAAAmB,IACAN,EAAA,IAEAA,GAWA73B,EAAA,SAAAsY,EAAA8X,EAAAv7B,GACA,IAAA65B,EAAA+H,GAAArG,EAAA9X,GACAuf,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAre,EAAA,SAAA5gB,GACAA,EAAA+wB,SAAAiG,EAAA1uB,IACA63B,EAAAr9B,KAAA9C,GAGAA,EAAAstB,QAAA0J,EAAA3uB,EAAA2uB,EAAA1uB,KACAm4B,GAAA,KAMAtjC,EAAAmiC,YAAAmB,IACAN,EAAA,IAEAA,KAKA,SAAAO,GAAA7iB,EAAAmZ,GACA,OAAA5R,GAAAub,MAAA9iB,EAAA,SAAAlY,GACA,OAAAA,EAAAqxB,eAIA,SAAA4J,GAAA/iB,EAAA7B,GACA6B,EAAAhb,QAAA,SAAA8C,EAAA1D,GAEA,OADA0D,EAAAk7B,WAAA5+B,EACA0D,IAEAkY,EAAAlb,KAAA,SAAAkH,EAAAlC,GACA,IAAA2U,EAAAN,EAAArU,EAAAkC,EACA0S,EAAAP,EAAAnS,EAAAlC,EACA,OAAA2U,EAAA3C,SAAA4C,EAAA5C,OACA2C,EAAAukB,WAAAtkB,EAAAskB,WACAvkB,EAAA3C,OAAA4C,EAAA5C,SAEAkE,EAAAhb,QAAA,SAAA8C,UACAA,EAAAk7B,aA0BA,SAAAC,GAAAC,EAAAlf,GACAuD,GAAAtJ,KAAAilB,EAAA,SAAAC,GACAnf,EAAAmf,EAAAhK,WAAAgK,EAAA5M,eAAA4M,EAAAthC,OAAAshC,EAAAxhC,QAIA4kB,GAAAT,KAAA,UACAsd,OAAA,CACAjQ,QAAA,CACA/P,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IAgVA5X,GAhVA83B,GAAA,CACAz9B,SAAA,GAQA09B,OAAA,SAAAvgB,EAAA9C,GACA8C,EAAAmgB,QACAngB,EAAAmgB,MAAA,IAIAjjB,EAAAsjB,UAAAtjB,EAAAsjB,YAAA,EACAtjB,EAAAkZ,SAAAlZ,EAAAkZ,UAAA,MACAlZ,EAAAnE,OAAAmE,EAAAnE,QAAA,EAEAiH,EAAAmgB,MAAAj+B,KAAAgb,IAQAujB,UAAA,SAAAzgB,EAAA0gB,GACA,IAAA5mB,EAAAkG,EAAAmgB,MAAAngB,EAAAmgB,MAAAnjB,QAAA0jB,IAAA,GACA,IAAA5mB,GACAkG,EAAAmgB,MAAA7Y,OAAAxN,EAAA,IAUA6mB,UAAA,SAAA3gB,EAAA9C,EAAA3gB,GAMA,IALA,IAGAgd,EAHAqnB,EAAA,kCACAnlB,EAAAmlB,EAAAr/B,OACAF,EAAA,EAGQA,EAAAoa,IAAUpa,EAClBkY,EAAAqnB,EAAAv/B,GACA9E,EAAA+G,eAAAiW,KACA2D,EAAA3D,GAAAhd,EAAAgd,KAYAkQ,OAAA,SAAAzJ,EAAAphB,EAAAE,GACA,GAAAkhB,EAAA,CAIA,IAAA6gB,EAAA7gB,EAAAzjB,QAAA8jC,QAAA,GACAjQ,EAAA5L,GAAAjoB,QAAAqnB,UAAAid,EAAAzQ,SACA0Q,EAAA1Q,EAAAhQ,KACA2gB,EAAA3Q,EAAA9P,MACA0gB,EAAA5Q,EAAA/P,IACA4gB,EAAA7Q,EAAA7P,OAEA2gB,EAAApB,GAAA9f,EAAAmgB,MAAA,QACAgB,EAAArB,GAAA9f,EAAAmgB,MAAA,SACAiB,EAAAtB,GAAA9f,EAAAmgB,MAAA,OACAkB,EAAAvB,GAAA9f,EAAAmgB,MAAA,UACAmB,EAAAxB,GAAA9f,EAAAmgB,MAAA,aAGAH,GAAAkB,GAAA,GACAlB,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GAEA,IA0DAE,EA1DAC,EAAAN,EAAAtqB,OAAAuqB,GACAM,EAAAL,EAAAxqB,OAAAyqB,GACAK,EAAAF,EAAA5qB,OAAA6qB,GAwCAE,EAAA/iC,EAAAkiC,EAAAC,EACAa,EAAA9iC,EAAAkiC,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAAljC,EAAAijC,GAAAL,EAAAjgC,OAOAwgC,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CAAuB5hB,IAAA2gB,EAAA5gB,KAAA0gB,EAAAvgB,OAAA0gB,EAAA3gB,MAAAygB,GACvBmB,EAAA,GAsBA1d,GAAAtJ,KAAAwmB,EAnBA,SAAAtB,GACA,IAAA1H,EACAlF,EAAA4M,EAAA5M,eAEAA,GACAkF,EAAA0H,EAAA3W,OAAA2W,EAAAI,UAAAmB,EAAAI,EAAAH,EAAA,GACAI,GAAAtJ,EAAA55B,SAEA45B,EAAA0H,EAAA3W,OAAAqY,EAAAE,GACAD,GAAArJ,EAAA95B,OAGAsjC,EAAAhgC,KAAA,CACAmvB,WAAAmC,EACA50B,MAAA85B,EAAA95B,MACAwhC,UAOAmB,EAlOA,SAAApB,GACA,IAAA9f,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAkE,GAAAtJ,KAAAilB,EAAA,SAAAC,GACA,GAAAA,EAAA+B,WAAA,CACA,IAAAC,EAAAhC,EAAA+B,aACA9hB,EAAApZ,KAAAC,IAAAmZ,EAAA+hB,EAAA/hB,KACAD,EAAAnZ,KAAAC,IAAAkZ,EAAAgiB,EAAAhiB,MACAG,EAAAtZ,KAAAC,IAAAqZ,EAAA6hB,EAAA7hB,QACAD,EAAArZ,KAAAC,IAAAoZ,EAAA8hB,EAAA9hB,UAGA,CACAD,MACAD,OACAG,SACAD,SAgNA+hB,CAAAX,GA+BAld,GAAAtJ,KAAAsmB,EAAAc,GACApC,GAAAsB,EAAAS,GAGAzd,GAAAtJ,KAAAumB,EAAAa,GACApC,GAAAuB,EAAAQ,GAoBAzd,GAAAtJ,KAAAsmB,EAlBA,SAAApB,GACA,IAAAmC,EAAA/d,GAAAge,cAAAN,EAAA,SAAAxJ,GACA,OAAAA,EAAA0H,UAGAqC,EAAA,CACAriB,KAAA,EACAE,MAAA,EACAD,IAAA4hB,EAAA5hB,IACAE,OAAA0hB,EAAA1hB,QAGAgiB,GACAnC,EAAA3W,OAAA8Y,EAAA3jC,MAAAojC,EAAAS,KASAvC,GAAAwB,EADAO,EAAA,CAAmB5hB,IAAA2gB,EAAA5gB,KAAA0gB,EAAAvgB,OAAA0gB,EAAA3gB,MAAAygB,IAInB,IAAA2B,EAAAz7B,KAAAC,IAAAq6B,EAAAnhB,KAAA6hB,EAAA7hB,KAAA,GACA6hB,EAAA7hB,MAAAsiB,EACAT,EAAA3hB,OAAArZ,KAAAC,IAAAq6B,EAAAjhB,MAAA2hB,EAAA3hB,MAAA,GAEA,IAAAqiB,EAAA17B,KAAAC,IAAAq6B,EAAAlhB,IAAA4hB,EAAA5hB,IAAA,GACA4hB,EAAA5hB,KAAAsiB,EACAV,EAAA1hB,QAAAtZ,KAAAC,IAAAq6B,EAAAhhB,OAAA0hB,EAAA1hB,OAAA,GAKA,IAAAqiB,EAAA9jC,EAAAmjC,EAAA5hB,IAAA4hB,EAAA1hB,OACAsiB,EAAAjkC,EAAAqjC,EAAA7hB,KAAA6hB,EAAA3hB,MAEAuiB,IAAAd,GAAAa,IAAAZ,IACAxd,GAAAtJ,KAAAsmB,EAAA,SAAApB,GACAA,EAAAthC,OAAA8jC,IAGApe,GAAAtJ,KAAAumB,EAAA,SAAArB,GACAA,EAAAI,YACAJ,EAAAxhC,MAAAikC,KAIAb,EAAAY,EACAb,EAAAc,GAIA,IAAAziB,EAAA0gB,EAAA4B,EACAriB,EAAA2gB,EAAA2B,EAwBAne,GAAAtJ,KAAAgmB,EAAAtqB,OAAAwqB,GAAA0B,GAGA1iB,GAAA2hB,EACA1hB,GAAA2hB,EAEAxd,GAAAtJ,KAAAimB,EAAA2B,GACAte,GAAAtJ,KAAAmmB,EAAAyB,GAGA9iB,EAAAqQ,UAAA,CACAjQ,KAAA6hB,EAAA7hB,KACAC,IAAA4hB,EAAA5hB,IACAC,MAAA2hB,EAAA7hB,KAAA2hB,EACAxhB,OAAA0hB,EAAA5hB,IAAA2hB,GAIAxd,GAAAtJ,KAAAomB,EAAA,SAAAlB,GACAA,EAAAhgB,KAAAJ,EAAAqQ,UAAAjQ,KACAggB,EAAA/f,IAAAL,EAAAqQ,UAAAhQ,IACA+f,EAAA9f,MAAAN,EAAAqQ,UAAA/P,MACA8f,EAAA7f,OAAAP,EAAAqQ,UAAA9P,OAEA6f,EAAA3W,OAAAsY,EAAAC,KAvIA,SAAAM,EAAAlC,GACA,IAAAmC,EAAA/d,GAAAge,cAAAN,EAAA,SAAAa,GACA,OAAAA,EAAA3C,UAGA,GAAAmC,EACA,GAAAA,EAAAlR,WAAA,CACA,IAAAoR,EAAA,CACAriB,KAAAnZ,KAAAC,IAAA+6B,EAAA7hB,KAAAmhB,EAAAnhB,MACAE,MAAArZ,KAAAC,IAAA+6B,EAAA3hB,MAAAihB,EAAAjhB,OACAD,IAAA,EACAE,OAAA,GAKA6f,EAAA3W,OAAA2W,EAAAI,UAAAmB,EAAAI,EAAAH,EAAA,EAAAa,QAEArC,EAAA3W,OAAA8Y,EAAA3jC,MAAAojC,GAuEA,SAAAc,EAAA1C,GACAA,EAAA5M,gBACA4M,EAAAhgB,KAAAggB,EAAAI,UAAAM,EAAAmB,EAAA7hB,KACAggB,EAAA9f,MAAA8f,EAAAI,UAAA5hC,EAAAmiC,EAAAkB,EAAA7hB,KAAA2hB,EACA3B,EAAA/f,MACA+f,EAAA7f,OAAAF,EAAA+f,EAAAthC,OAGAuhB,EAAA+f,EAAA7f,SAIA6f,EAAAhgB,OACAggB,EAAA9f,MAAAF,EAAAggB,EAAAxhC,MACAwhC,EAAA/f,IAAA4hB,EAAA5hB,IACA+f,EAAA7f,OAAA0hB,EAAA5hB,IAAA2hB,EAGA5hB,EAAAggB,EAAA9f,UA2DA0iB,IAJAx6B,GAJA8R,OAAA2oB,OAAA,CACAC,QAHA,w3BAOA16B,GAAA06B,SAAA16B,GAKA26B,GAAA,WAEAC,GAAAC,uBACAC,GAAAD,yBACAE,GAAAF,2BACAG,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAA/kC,EAAAglC,GACA,IAAAhuB,EAAAoO,GAAA6f,SAAAjlC,EAAAglC,GACAzgB,EAAAvN,KAAAd,MAAA,qBACA,OAAAqO,EAAAjJ,OAAAiJ,EAAA,SAAAniB,EA+DA,IAkBA8iC,KAlBA,WACA,IAAAC,GAAA,EACA,IACA,IAAAhoC,EAAA+d,OAAAgM,eAAA,GAAwC,WAExCtqB,IAAA,WACAuoC,GAAA,KAGA5qC,OAAA6qC,iBAAA,SAAAjoC,GACE,MAAAu7B,IAGF,OAAAyM,EAbA,IAkBA,CAA2DE,SAAA,GAE3D,SAAAC,GAAAC,EAAAvrB,EAAAyO,GACA8c,EAAAH,iBAAAprB,EAAAyO,EAAAyc,IAGA,SAAAM,GAAAD,EAAAvrB,EAAAyO,GACA8c,EAAAE,oBAAAzrB,EAAAyO,EAAAyc,IAGA,SAAAQ,GAAA1rB,EAAA4G,EAAAvY,EAAAC,EAAAq9B,GACA,OACA3rB,OACA4G,QACAoe,OAAA2G,GAAA,KACAt9B,OAAAjG,IAAAiG,IAAA,KACAC,OAAAlG,IAAAkG,IAAA,MA4BA,SAAAs9B,GAAAC,GACA,IAAAC,EAAAhpC,SAAAuC,cAAA,OAEA,OADAymC,EAAA5lC,UAAA2lC,GAAA,GACAC,EA0EA,SAAAC,GAAAR,EAAA9c,EAAA7H,GACA,IAhGAjF,EAAAC,EACAoqB,EACAphC,EA8FAqhC,EAAAV,EAAAxB,MAAAwB,EAAAxB,IAAA,IAGAmC,EAAAD,EAAAC,QA1EA,SAAAhH,GACA,IAIAgH,EAAAN,GAAA5B,IACAmC,EAAAP,GAAA5B,GAAA,WACAoC,EAAAR,GAAA5B,GAAA,WAEAmC,EAAAvmC,YAAAgmC,MACAQ,EAAAxmC,YAAAgmC,MAEAM,EAAAtmC,YAAAumC,GACAD,EAAAtmC,YAAAwmC,GACAF,EAAAG,OAAA,WACAF,EAAAG,WAdA,IAeAH,EAAAI,UAfA,IAgBAH,EAAAE,WAhBA,IAiBAF,EAAAG,UAjBA,KAoBA,IAAAC,EAAA,WACAN,EAAAG,SACAnH,KAMA,OAHAoG,GAAAa,EAAA,SAAAK,EAAAvqC,KAAAkqC,EAAA,WACAb,GAAAc,EAAA,SAAAI,EAAAvqC,KAAAmqC,EAAA,WAEAF,EA6CAO,EAnGA9qB,EAmGA,WACA,GAAAsqB,EAAAC,QAAA,CACA,IAAArpC,EAAA+jB,EAAAzjB,QAAA2G,qBAAAyhC,EAAAmB,WACA3+B,EAAAlL,IAAA8pC,YAAA,EACAle,EAAAid,GAAA,SAAA9kB,IACA/jB,KAAA8pC,YAAA5+B,GAAA6Y,EAAAxhB,QAQAqpB,EAAAid,GAAA,SAAA9kB,MA/GAolB,GAAA,EACAphC,EAAA,GAEA,WACAA,EAAA6O,MAAAC,UAAAC,MAAAC,KAAAC,WACA+H,KAAA/f,KAEAmqC,IACAA,GAAA,EACA5gB,GAAA+C,iBAAAvU,KAAArZ,OAAA,WACAyrC,GAAA,EACArqB,EAAAE,MAAAD,EAAAhX,UA8CA,SAAA2gC,EAAArG,GACA,IAAA+G,EAAAV,EAAAxB,MAAAwB,EAAAxB,IAAA,IACA6C,EAAAX,EAAAY,YAAA,SAAAnO,GACAA,EAAAoO,gBAAA3C,IACAjF,KAIA9Z,GAAAtJ,KAAAsoB,GAAA,SAAApqB,GACAsrB,GAAAC,EAAAvrB,EAAA4sB,KAQAX,EAAAc,SAAAxB,EAAAyB,aAEAzB,EAAA0B,UAAAC,IAAAhD,IA0CAiD,CAAA5B,EAAA,WACA,GAAAU,EAAAC,QAAA,CACA,IAAArpC,EAAA0oC,EAAAmB,WACA7pC,OAAAqpC,EAAAQ,YACA7pC,EAAAuqC,aAAAlB,EAAArpC,EAAAiD,YAIAomC,EAAAG,YAKA,SAAAgB,GAAA9B,GACA,IAAAU,EAAAV,EAAAxB,KAAA,GACAmC,EAAAD,EAAAC,eAEAD,EAAAC,QAxDA,SAAAX,GACA,IAAAU,EAAAV,EAAAxB,KAAA,GACA6C,EAAAX,EAAAY,YAEAD,IACAxhB,GAAAtJ,KAAAsoB,GAAA,SAAApqB,GACAwrB,GAAAD,EAAAvrB,EAAA4sB,YAGAX,EAAAY,aAGAtB,EAAA0B,UAAAK,OAAApD,IA6CAqD,CAAAhC,GAEAW,KAAAQ,YACAR,EAAAQ,WAAAc,YAAAtB,GAiBA,IAAAuB,GAAA,CAQAC,qBAAA,EAOAC,SAAA,oBAAAptC,QAAA,oBAAAuC,SAKA8qC,cAAA,WACA/rC,KAAAgsC,UAIAhsC,KAAAgsC,SAAA,EAGAhsC,KAAA6rC,qBAzCA,SAAAI,EAAAC,GAEA,IAAAtmB,EAAAqmB,EAAAE,QAAAlrC,SAAAuC,cAAA,SACAyoC,EAAAE,SACAF,EAAAE,OAAAvmB,EACAsmB,EAAA,mBAAAA,EACAtmB,EAAAwmB,aAAA,mBACAnrC,SAAAorC,qBAAA,WAAAtoC,YAAA6hB,IAGAA,EAAA7hB,YAAA9C,SAAAqrC,eAAAJ,IAgCAK,CAAAvsC,KAAA+nC,MAIAyE,eAAA,SAAAvqB,EAAAwqB,GACA,iBAAAxqB,EACAA,EAAAhhB,SAAAC,eAAA+gB,GACGA,EAAA3b,SAEH2b,IAAA,IAGAA,KAAA1e,SAEA0e,IAAA1e,QAMA,IAAA+lB,EAAArH,KAAAve,YAAAue,EAAAve,WAAA,MAaA,OATA1D,KAAA+rC,gBASAziB,KAAA/lB,SAAA0e,GA9TA,SAAA1e,EAAAkpC,GACA,IAAA7mB,EAAAriB,EAAAqiB,MAIA8mB,EAAAnpC,EAAAopC,aAAA,UACAC,EAAArpC,EAAAopC,aAAA,SAoBA,GAjBAppC,EAAA2kC,IAAA,CACA2E,QAAA,CACAhpC,OAAA6oC,EACA/oC,MAAAipC,EACAhnB,MAAA,CACAsb,QAAAtb,EAAAsb,QACAr9B,OAAA+hB,EAAA/hB,OACAF,MAAAiiB,EAAAjiB,SAQAiiB,EAAAsb,QAAAtb,EAAAsb,SAAA,QAEA,OAAA0L,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAA5D,GAAA3lC,EAAA,cACAgD,IAAAumC,IACAvpC,EAAAI,MAAAmpC,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAAnpC,EAAAqiB,MAAA/hB,OAIAN,EAAAM,OAAAN,EAAAI,OAAA8oC,EAAAnrC,QAAAyrC,aAAA,OACG,CACH,IAAAC,EAAA9D,GAAA3lC,EAAA,eACAgD,IAAAumC,IACAvpC,EAAAM,OAAAmpC,IAqRAC,CAAAhrB,EAAAwqB,GACAnjB,GAGA,MAGA4jB,eAAA,SAAA5jB,GACA,IAAA/lB,EAAA+lB,EAAA/lB,OACA,GAAAA,EAAA2kC,IAAA,CAIA,IAAA2E,EAAAtpC,EAAA2kC,IAAA2E,QACA,mBAAA7lC,QAAA,SAAAsX,GACA,IAAAnD,EAAA0xB,EAAAvuB,GACAiL,GAAApK,cAAAhE,GACA5X,EAAA4pC,gBAAA7uB,GAEA/a,EAAA6oC,aAAA9tB,EAAAnD,KAIAoO,GAAAtJ,KAAA4sB,EAAAjnB,OAAA,GAAoC,SAAAzK,EAAA5D,GACpChU,EAAAqiB,MAAArO,GAAA4D,IAQA5X,EAAAI,MAAAJ,EAAAI,aAEAJ,EAAA2kC,MAGAqB,iBAAA,SAAAxkB,EAAA5G,EAAAyO,GACA,IAAArpB,EAAAwhB,EAAAxhB,OACA,cAAA4a,EAAA,CAMA,IAAAisB,EAAAxd,EAAAsb,MAAAtb,EAAAsb,IAAA,IACAkF,EAAAhD,EAAAgD,UAAAhD,EAAAgD,QAAA,IACArC,EAAAqC,EAAAroB,EAAAzhB,GAAA,IAAA6a,GAAA,SAAAkvB,GACAzgB,EAlRA,SAAAygB,EAAAtoB,GACA,IAAA5G,EAAAqqB,GAAA6E,EAAAlvB,OAAAkvB,EAAAlvB,KACAmvB,EAAA/jB,GAAA2Z,oBAAAmK,EAAAtoB,GACA,OAAA8kB,GAAA1rB,EAAA4G,EAAAuoB,EAAA9gC,EAAA8gC,EAAA7gC,EAAA4gC,GA+QAE,CAAAF,EAAAtoB,KAGA0kB,GAAAlmC,EAAA4a,EAAA4sB,QAVAb,GAAA3mC,EAAAqpB,EAAA7H,IAaA6kB,oBAAA,SAAA7kB,EAAA5G,EAAAyO,GACA,IAAArpB,EAAAwhB,EAAAxhB,OACA,cAAA4a,EAAA,CAMA,IAAAisB,EAAAxd,EAAAsb,KAAA,GACAkF,EAAAhD,EAAAgD,SAAA,GACArC,EAAAqC,EAAAroB,EAAAzhB,GAAA,IAAA6a,GACA4sB,GAIApB,GAAApmC,EAAA4a,EAAA4sB,QAXAS,GAAAjoC,KA0BAgmB,GAAAikB,SAAA/D,GAWAlgB,GAAAkkB,YAAA9D,GAGA,IAAA+D,GAAA9B,GAAAE,SAAAF,GApeA,CACAY,eAAA,SAAAvqB,GAMA,OALAA,KAAA1e,SAEA0e,IAAA1e,QAGA0e,KAAAve,WAAA,cAoeAuoC,GAAA1iB,GAAAnI,OAAA,CAIArhB,WAAA,aASAysC,eAAA,aAQAU,eAAA,aASA3D,iBAAA,aAQAK,oBAAA,cAEC8D,IAEDnlB,GAAAT,KAAA,UACA6lB,QAAA,KAQA,IAAAC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAJ,GACA,IAAAxgC,EAAAnN,KAAA6tC,SACA,GAAAlyB,OAAAgyB,GAAA3mC,QAAA,SAAAgnC,IACA,IAAA7gC,EAAA4U,QAAAisB,IACA7gC,EAAAlG,KAAA+mC,KAIAhuC,KAAA8tC,YAOAG,WAAA,SAAAN,GACA,IAAAxgC,EAAAnN,KAAA6tC,SACA,GAAAlyB,OAAAgyB,GAAA3mC,QAAA,SAAAgnC,GACA,IAAAE,EAAA/gC,EAAA4U,QAAAisB,IACA,IAAAE,GACA/gC,EAAAkf,OAAA6hB,EAAA,KAIAluC,KAAA8tC,YAOAhpB,MAAA,WACA9kB,KAAA6tC,SAAA,GACA7tC,KAAA8tC,YAQApd,MAAA,WACA,OAAA1wB,KAAA6tC,SAAAvnC,QAQA6nC,OAAA,WACA,OAAAnuC,KAAA6tC,UAYAO,OAAA,SAAArpB,EAAAspB,EAAAtlC,GACA,IAEA3C,EAAAkoC,EAAAN,EAAAjrC,EAAAwsB,EAFAgf,EAAAvuC,KAAAuuC,YAAAxpB,GACAvE,EAAA+tB,EAAAjoC,OAGA,IAAAF,EAAA,EAAaA,EAAAoa,IAAUpa,EAIvB,GAHAkoC,EAAAC,EAAAnoC,GACA4nC,EAAAM,EAAAN,OAEA,mBADAze,EAAAye,EAAAK,OAEAtrC,EAAA,CAAAgiB,GAAApJ,OAAA5S,GAAA,KACA9B,KAAAqnC,EAAAhtC,UACA,IAAAiuB,EAAAvP,MAAAguB,EAAAjrC,IACA,SAKA,UAQAwrC,YAAA,SAAAxpB,GACA,IAAAypB,EAAAzpB,EAAA0pB,WAAA1pB,EAAA0pB,SAAA,IACA,GAAAD,EAAAlrC,KAAAtD,KAAA8tC,SACA,OAAAU,EAAAD,YAGA,IAAAZ,EAAA,GACAY,EAAA,GACA9B,EAAA1nB,KAAA0nB,QAAA,GACAnrC,EAAAmrC,EAAAnrC,SAAAmrC,EAAAnrC,QAAAqsC,SAAA,GA2BA,OAzBA3tC,KAAA6tC,SAAAlyB,OAAA8wB,EAAAkB,SAAA,IAAA3mC,QAAA,SAAAgnC,GACA,IAAAE,EAAAP,EAAA5rB,QAAAisB,GACA,QAAAE,EAAA,CAIA,IAAA5qC,EAAA0qC,EAAA1qC,GACAxC,EAAAQ,EAAAgC,IACA,IAAAxC,KAIA,IAAAA,IACAA,EAAAyoB,GAAArL,MAAAqK,GAAA1gB,OAAA8lC,QAAArqC,KAGAqqC,EAAA1mC,KAAA+mC,GACAO,EAAAtnC,KAAA,CACA+mC,SACA1sC,QAAAR,GAAA,SAIA0tC,EAAAD,cACAC,EAAAlrC,GAAAtD,KAAA8tC,SACAS,GASAG,YAAA,SAAA3pB,UACAA,EAAA0pB,WAIAE,GAAA,CAGAC,aAAA,GAKAhnC,SAAA,GACAinC,kBAAA,SAAA1wB,EAAA2wB,EAAAC,GACA/uC,KAAA4uC,aAAAzwB,GAAA2wB,EACA9uC,KAAA4H,SAAAuW,GAAAoL,GAAArL,MAAA6wB,IAEAC,oBAAA,SAAA7wB,GACA,OAAAne,KAAA4uC,aAAAvmC,eAAA8V,GAAAne,KAAA4uC,aAAAzwB,QAAA5X,GAEA0oC,iBAAA,SAAA9wB,GAEA,OAAAne,KAAA4H,SAAAS,eAAA8V,GAAAoL,GAAAxI,MAAA,GAAgE,CAAAwH,GAAA9N,MAAAza,KAAA4H,SAAAuW,KAAA,IAEhE+wB,oBAAA,SAAA/wB,EAAAgxB,GACAnvC,KACA4H,SAAAS,eAAA8V,KADAne,KAEA4H,SAAAuW,GAAAoL,GAAAnI,OAFAphB,KAEA4H,SAAAuW,GAAAgxB,KAGAC,kBAAA,SAAArqB,GAEAwE,GAAAtJ,KAAA8E,EAAA6I,OAAA,SAAAnT,GAEAA,EAAA8qB,UAAA9qB,EAAAnZ,QAAAikC,UACA9qB,EAAA0gB,SAAA1gB,EAAAnZ,QAAA65B,SACA1gB,EAAAqD,OAAArD,EAAAnZ,QAAAwc,OACAunB,GAAAC,OAAAvgB,EAAAtK,OAKA40B,GAAA9lB,GAAA7J,eAEA6I,GAAAT,KAAA,UACAsT,SAAA,CACAkU,SAAA,EACApf,OAAA,KACAoH,KAAA,UACA6D,SAAA,UACAsI,WAAA,EACA99B,gBAAA,kBACA4pC,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACAtqB,aAAA,EACAuqB,mBAAA,OACAC,eAAA,EACA7qC,YAAA,gBACAC,YAAA,EACAw1B,UAAA,CAEAqV,YAAAnnB,GAAAtK,KACAqc,MAAA,SAAAqV,EAAArxC,GACA,IAAAg8B,EAAA,GACAl2B,EAAA9F,EAAA8F,OACAwrC,EAAAxrC,IAAAkB,OAAA,EAEA,GAAAqqC,EAAArqC,OAAA,GACA,IAAA2b,EAAA0uB,EAAA,GACA1uB,EAAA5c,MACAi2B,EAAArZ,EAAA5c,MACM4c,EAAAuZ,OACNF,EAAArZ,EAAAuZ,OACMoV,EAAA,GAAA3uB,EAAApD,MAAA+xB,IACNtV,EAAAl2B,EAAA6c,EAAApD,QAIA,OAAAyc,GAEAuV,WAAAtnB,GAAAtK,KAGA6xB,WAAAvnB,GAAAtK,KAGA8xB,YAAAxnB,GAAAtK,KACA5Z,MAAA,SAAA43B,EAAA39B,GACA,IAAA+F,EAAA/F,EAAAgG,SAAA23B,EAAAhQ,cAAA5nB,OAAA,GAUA,OARAA,IACAA,GAAA,MAEAkkB,GAAApK,cAAA8d,EAAA9hB,OAGA9V,GAAA43B,EAAAxB,OAFAp2B,GAAA43B,EAAA9hB,MAIA9V,GAEA2rC,WAAA,SAAA/T,EAAAlY,GACA,IAAAwI,EAAAxI,EAAAiJ,eAAAiP,EAAAhQ,cACAgkB,EAAA1jB,EAAAjuB,KAAA29B,EAAApe,OACAuL,EAAA6mB,EAAApnB,MACA,OACAjkB,YAAAwkB,EAAAxkB,YACAD,gBAAAykB,EAAAzkB,kBAGAurC,eAAA,WACA,OAAAlxC,KAAAg8B,SAAA6T,eAEAsB,WAAA5nB,GAAAtK,KAGAmyB,UAAA7nB,GAAAtK,KAGAoyB,aAAA9nB,GAAAtK,KACAqyB,OAAA/nB,GAAAtK,KACAsyB,YAAAhoB,GAAAtK,SAKA,IAAAuyB,GAAA,CAOAC,QAAA,SAAA5hB,GACA,IAAAA,EAAAvpB,OACA,SAGA,IAAAF,EAAAC,EACAmG,EAAA,EACAC,EAAA,EACAikB,EAAA,EAEA,IAAAtqB,EAAA,EAAAC,EAAAwpB,EAAAvpB,OAAoCF,EAAAC,IAASD,EAAA,CAC7C,IAAA6jC,EAAApa,EAAAzpB,GACA,GAAA6jC,KAAAtf,WAAA,CACA,IAAA2iB,EAAArD,EAAAvf,kBACAle,GAAA8gC,EAAA9gC,EACAC,GAAA6gC,EAAA7gC,IACAikB,GAIA,OACAlkB,IAAAkkB,EACAjkB,IAAAikB,IAWAiU,QAAA,SAAA9U,EAAA6hB,GACA,IAGAtrC,EAAAC,EAAAsrC,EAHAnlC,EAAAklC,EAAAllC,EACAC,EAAAilC,EAAAjlC,EACAk3B,EAAAlkB,OAAAmkB,kBAGA,IAAAx9B,EAAA,EAAAC,EAAAwpB,EAAAvpB,OAAoCF,EAAAC,IAASD,EAAA,CAC7C,IAAA6jC,EAAApa,EAAAzpB,GACA,GAAA6jC,KAAAtf,WAAA,CACA,IAAAmO,EAAAmR,EAAA3X,iBACAsf,EAAAroB,GAAAsoB,sBAAAH,EAAA5Y,GAEA8Y,EAAAjO,IACAA,EAAAiO,EACAD,EAAA1H,IAKA,GAAA0H,EAAA,CACA,IAAAG,EAAAH,EAAAjnB,kBACAle,EAAAslC,EAAAtlC,EACAC,EAAAqlC,EAAArlC,EAGA,OACAD,IACAC,OAMA,SAAAslC,GAAAviB,EAAAwiB,GAUA,OATAA,IACAzoB,GAAAnK,QAAA4yB,GAEAp6B,MAAAC,UAAA5Q,KAAA+Y,MAAAwP,EAAAwiB,GAEAxiB,EAAAvoB,KAAA+qC,IAIAxiB,EASA,SAAAyiB,GAAAt3B,GACA,wBAAAA,gBAAAu3B,SAAAv3B,EAAAoH,QAAA,SACApH,EAAAw3B,MAAA,MAEAx3B,EAkCA,SAAAy3B,GAAAC,GACA,IAAAxpB,EAAAN,GAAA1gB,OAEA,OAEAwoC,SAAAgC,EAAAhC,SACAD,SAAAiC,EAAAjC,SACAkC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAGA1C,cAAAwC,EAAAxC,cACA2C,gBAAAnD,GAAAgD,EAAAI,eAAA5pB,EAAAX,mBACAwqB,eAAArD,GAAAgD,EAAAM,cAAA9pB,EAAAT,kBACAwqB,WAAAP,EAAAvC,UACA+C,aAAAxD,GAAAgD,EAAAQ,aAAAhqB,EAAAV,iBACAynB,YAAAyC,EAAAzC,YAGAF,eAAA2C,EAAA3C,eACAoD,iBAAAzD,GAAAgD,EAAAU,gBAAAlqB,EAAAX,mBACA8qB,gBAAA3D,GAAAgD,EAAA9C,eAAA1mB,EAAAT,kBACA6qB,cAAA5D,GAAAgD,EAAAY,cAAApqB,EAAAV,iBACA+qB,YAAAb,EAAA1C,WACAH,aAAA6C,EAAA7C,aACAC,kBAAA4C,EAAA5C,kBAGAS,gBAAAmC,EAAAnC,gBACAiD,kBAAA9D,GAAAgD,EAAAe,iBAAAvqB,EAAAX,mBACAmrB,iBAAAhE,GAAAgD,EAAAtC,gBAAAlnB,EAAAT,kBACAkrB,eAAAjE,GAAAgD,EAAAiB,eAAAzqB,EAAAV,iBACAorB,aAAAlB,EAAAlC,YACAH,cAAAqC,EAAArC,cACAC,gBAAAoC,EAAApC,gBAGAM,UAAA8B,EAAA9B,UACAtqB,aAAAosB,EAAApsB,aACAtgB,gBAAA0sC,EAAA1sC,gBACA6tC,QAAA,EACAC,sBAAApB,EAAA7B,mBACAC,cAAA4B,EAAA5B,cACA7qC,YAAAysC,EAAAzsC,YACAC,YAAAwsC,EAAAxsC,aAuMA,SAAA6tC,GAAAniB,EAAAoiB,GACA,iBAAAA,EACApiB,EAAA/kB,EAAA+kB,EAAA5tB,MAAA,EACA,UAAAgwC,EACApiB,EAAA/kB,EAAA+kB,EAAA5tB,MAAA4tB,EAAA8e,SACA9e,EAAA/kB,EAAA+kB,EAAA8e,SAMA,SAAAuD,GAAA/zB,GACA,OAAAkyB,GAAA,GAAAE,GAAApyB,IAGA,IAAAg0B,GAAAhpB,GAAAzJ,OAAA,CACArhB,WAAA,WACAC,KAAA8pB,OAAAsoB,GAAApyC,KAAAg8B,UACAh8B,KAAA8zC,YAAA,IAKAC,SAAA,WACA,IAAAvyB,EAAAxhB,KACAc,EAAA0gB,EAAAwa,SACAX,EAAAv6B,EAAAu6B,UAEAqV,EAAArV,EAAAqV,YAAA1wB,MAAAwB,EAAAxJ,WACAsjB,EAAAD,EAAAC,MAAAtb,MAAAwB,EAAAxJ,WACA64B,EAAAxV,EAAAwV,WAAA7wB,MAAAwB,EAAAxJ,WAEAg8B,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAvB,IACAsD,EAAAjC,GAAAiC,EAAA/B,GAAA3W,IACA0Y,EAAAjC,GAAAiC,EAAA/B,GAAApB,KAMAoD,cAAA,WACA,OAAAL,GAAA5zC,KAAAg8B,SAAAX,UAAAyV,WAAA9wB,MAAAhgB,KAAAgY,aAIAk8B,QAAA,SAAAvD,EAAArxC,GACA,IAAAkiB,EAAAxhB,KACAq7B,EAAA7Z,EAAAwa,SAAAX,UACA8Y,EAAA,GAeA,OAbA5qB,GAAAtJ,KAAA0wB,EAAA,SAAA1T,GACA,IAAAmX,EAAA,CACAC,OAAA,GACAL,MAAA,GACAM,MAAA,IAEAvC,GAAAqC,EAAAC,OAAApC,GAAA5W,EAAA0V,YAAAh5B,KAAAyJ,EAAAyb,EAAA39B,KACAyyC,GAAAqC,EAAAJ,MAAA3Y,EAAAh2B,MAAA0S,KAAAyJ,EAAAyb,EAAA39B,IACAyyC,GAAAqC,EAAAE,MAAArC,GAAA5W,EAAA8V,WAAAp5B,KAAAyJ,EAAAyb,EAAA39B,KAEA60C,EAAAltC,KAAAmtC,KAGAD,GAIAI,aAAA,WACA,OAAAX,GAAA5zC,KAAAg8B,SAAAX,UAAA+V,UAAApxB,MAAAhgB,KAAAgY,aAKAw8B,UAAA,WACA,IAAAhzB,EAAAxhB,KACAq7B,EAAA7Z,EAAAwa,SAAAX,UAEAgW,EAAAhW,EAAAgW,aAAArxB,MAAAwB,EAAAxJ,WACAs5B,EAAAjW,EAAAiW,OAAAtxB,MAAAwB,EAAAxJ,WACAu5B,EAAAlW,EAAAkW,YAAAvxB,MAAAwB,EAAAxJ,WAEAg8B,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAZ,IACA2C,EAAAjC,GAAAiC,EAAA/B,GAAAX,IACA0C,EAAAjC,GAAAiC,EAAA/B,GAAAV,KAKA/iB,OAAA,SAAAimB,GACA,IA8BAruC,EAAAC,EArYAlC,EACAw3B,EACAC,EACA/c,EACAoO,EACAoN,EACAqa,EACAC,EAgWAnzB,EAAAxhB,KACAc,EAAA0gB,EAAAwa,SAKA4Y,EAAApzB,EAAAsI,OACAI,EAAA1I,EAAAsI,OAAAsoB,GAAAtxC,GACA+zC,EAAArzB,EAAAszB,QAEAx1C,EAAAkiB,EAAAkN,MAGAqmB,EAAA,CACAzC,OAAAsC,EAAAtC,OACAC,OAAAqC,EAAArC,QAEAyC,EAAA,CACAxoC,EAAAooC,EAAApoC,EACAC,EAAAmoC,EAAAnoC,GAEAwoC,EAAA,CACAtxC,MAAAixC,EAAAjxC,MACAE,OAAA+wC,EAAA/wC,QAEA6mB,EAAA,CACAle,EAAAooC,EAAAM,OACAzoC,EAAAmoC,EAAAO,QAKA,GAAAN,EAAAvuC,OAAA,CACA4jB,EAAAspB,QAAA,EAEA,IAAA4B,EAAA,GACAC,EAAA,GACA3qB,EAAA8mB,GAAA1wC,EAAAq6B,UAAApjB,KAAAyJ,EAAAqzB,EAAArzB,EAAA8zB,gBAEA,IAAA3E,EAAA,GACA,IAAAvqC,EAAA,EAAAC,EAAAwuC,EAAAvuC,OAAmCF,EAAAC,IAASD,EAC5CuqC,EAAA1pC,MAhZA9C,EAgZA0wC,EAAAzuC,GA/YAu1B,SACAC,SACA/c,SACAoO,SACAoN,SACAqa,SACAC,SANAhZ,EAAAx3B,EAAA8zB,QACA2D,EAAAz3B,EAAA+zB,SAAA/zB,EAAAu7B,OACA7gB,EAAA1a,EAAA4qB,OACA9B,EAAA9oB,EAAA0qB,cACAwL,EAAAl2B,EAAAyqB,OAAAZ,eAAAf,GAAAoN,WACAqa,EAAAra,EAAA/L,iBACAqmB,EAAAta,EAAAhM,iBAEA,CACAmN,OAAAG,IAAA4Z,iBAAA12B,EAAAoO,GAAA,GACAwO,OAAAG,IAAA2Z,iBAAA12B,EAAAoO,GAAA,GACA5nB,MAAAqvC,EAAA,GAAAA,EAAAa,iBAAA12B,EAAAoO,GAAA,GACA9R,MAAAw5B,EAAA,GAAAA,EAAAY,iBAAA12B,EAAAoO,GAAA,GACApO,QACAoO,eACAzgB,EAAArI,EAAA2lB,OAAAtd,EACAC,EAAAtI,EAAA2lB,OAAArd,KAmYA3L,EAAA4/B,SACAiQ,IAAAjQ,OAAA,SAAA1yB,GACA,OAAAlN,EAAA4/B,OAAA1yB,EAAA1O,MAKAwB,EAAA00C,WACA7E,IAAA7pC,KAAA,SAAAkH,EAAAlC,GACA,OAAAhL,EAAA00C,SAAAxnC,EAAAlC,EAAAxM,MAKAiqB,GAAAtJ,KAAA0wB,EAAA,SAAA1T,GACAmY,EAAAnuC,KAAAnG,EAAAu6B,UAAA2V,WAAAj5B,KAAAyJ,EAAAyb,EAAAzb,EAAAoN,SACAymB,EAAApuC,KAAAnG,EAAAu6B,UAAA6V,eAAAn5B,KAAAyJ,EAAAyb,EAAAzb,EAAAoN,WAKA1E,EAAAoR,MAAA9Z,EAAAuyB,SAAApD,EAAArxC,GACA4qB,EAAA4mB,WAAAtvB,EAAAyyB,cAAAtD,EAAArxC,GACA4qB,EAAAurB,KAAAj0B,EAAA0yB,QAAAvD,EAAArxC,GACA4qB,EAAAknB,UAAA5vB,EAAA+yB,aAAA5D,EAAArxC,GACA4qB,EAAAonB,OAAA9vB,EAAAgzB,UAAA7D,EAAArxC,GAGA4qB,EAAA1d,EAAAke,EAAAle,EACA0d,EAAAzd,EAAAie,EAAAje,EACAyd,EAAAomB,aAAAxvC,EAAAwvC,aACApmB,EAAAkrB,cACAlrB,EAAAmrB,kBAGAnrB,EAAAwrB,WAAA/E,EAGAsE,EA9WA,SAAAU,EAAAzrB,GACA,IAAAzmB,EAAAkyC,EAAA/mB,OAAAnrB,IAEAI,EAAA,EAAAqmB,EAAAkmB,SACAzsC,EAAA,EAGA8xC,EAAAvrB,EAAAurB,KACAG,EAAAH,EAAAI,OAAA,SAAAnlB,EAAA0jB,GACA,OAAA1jB,EAAA0jB,EAAAC,OAAA/tC,OAAA8tC,EAAAJ,MAAA1tC,OAAA8tC,EAAAE,MAAAhuC,QACE,GACFsvC,GAAA1rB,EAAA4mB,WAAAxqC,OAAA4jB,EAAAknB,UAAA9qC,OAEA,IAAAwvC,EAAA5rB,EAAAoR,MAAAh1B,OACAyvC,EAAA7rB,EAAAonB,OAAAhrC,OACA2sC,EAAA/oB,EAAA+oB,cACAJ,EAAA3oB,EAAA2oB,aACAS,EAAAppB,EAAAopB,eAEAzvC,GAAAiyC,EAAA7C,EACApvC,GAAAiyC,KAAA,GAAA5rB,EAAAslB,aAAA,EACA3rC,GAAAiyC,EAAA5rB,EAAAulB,kBAAA,EACA5rC,GAAA+xC,EAAA/C,EACAhvC,GAAA+xC,KAAA,GAAA1rB,EAAA0lB,YAAA,EACA/rC,GAAAkyC,EAAA7rB,EAAA+lB,gBAAA,EACApsC,GAAAkyC,EAAA,EACAlyC,GAAAkyC,KAAA,GAAA7rB,EAAA8lB,cAAA,EAGA,IAAAgG,EAAA,EACAC,EAAA,SAAA5iB,GACA1vB,EAAAqI,KAAAC,IAAAtI,EAAAF,EAAAyyC,YAAA7iB,GAAA1vB,MAAAqyC,IA4BA,OAzBAvyC,EAAAslB,KAAAQ,GAAA4sB,WAAAlD,EAAA/oB,EAAA8oB,gBAAA9oB,EAAA4oB,kBACAvpB,GAAAtJ,KAAAiK,EAAAoR,MAAA2a,GAGAxyC,EAAAslB,KAAAQ,GAAA4sB,WAAAtD,EAAA3oB,EAAAwoB,eAAAxoB,EAAAsoB,iBACAjpB,GAAAtJ,KAAAiK,EAAA4mB,WAAAn1B,OAAAuO,EAAAknB,WAAA6E,GAGAD,EAAA9rB,EAAAumB,cAAAoC,EAAA,IACAtpB,GAAAtJ,KAAAw1B,EAAA,SAAArB,GACA7qB,GAAAtJ,KAAAm0B,EAAAC,OAAA4B,GACA1sB,GAAAtJ,KAAAm0B,EAAAJ,MAAAiC,GACA1sB,GAAAtJ,KAAAm0B,EAAAE,MAAA2B,KAIAD,EAAA,EAGAvyC,EAAAslB,KAAAQ,GAAA4sB,WAAA7C,EAAAppB,EAAAmpB,iBAAAnpB,EAAAipB,mBACA5pB,GAAAtJ,KAAAiK,EAAAonB,OAAA2E,GAKA,CACAtyC,MAHAA,GAAA,EAAAumB,EAAAmmB,SAIAxsC,UAiTAuyC,CAAAp2C,KAAAkqB,GACA6qB,EA3SA,SAAAY,EAAA3vB,GACA,IAYAqwB,EAAAC,EACAC,EAAAC,EACAC,EAdAvsB,EAAAyrB,EAAA7rB,OACA/E,EAAA4wB,EAAA/mB,OACAwG,EAAAugB,EAAA/mB,OAAAwG,UACAkd,EAAA,SACAC,EAAA,SAEAroB,EAAAzd,EAAAuZ,EAAAniB,OACA0uC,EAAA,MACEroB,EAAAzd,EAAAsY,EAAAlhB,OAAAmiB,EAAAniB,SACF0uC,EAAA,UAMA,IAAAmE,GAAAthB,EAAAjQ,KAAAiQ,EAAA/P,OAAA,EACAsxB,GAAAvhB,EAAAhQ,IAAAgQ,EAAA9P,QAAA,EAEA,WAAAitB,GACA8D,EAAA,SAAA7pC,GACA,OAAAA,GAAAkqC,GAEAJ,EAAA,SAAA9pC,GACA,OAAAA,EAAAkqC,KAGAL,EAAA,SAAA7pC,GACA,OAAAA,GAAAwZ,EAAAriB,MAAA,GAEA2yC,EAAA,SAAA9pC,GACA,OAAAA,GAAAuY,EAAAphB,MAAAqiB,EAAAriB,MAAA,IAIA4yC,EAAA,SAAA/pC,GACA,OAAAA,EAAAwZ,EAAAriB,MAAAumB,EAAAqmB,UAAArmB,EAAAomB,aAAAvrB,EAAAphB,OAEA6yC,EAAA,SAAAhqC,GACA,OAAAA,EAAAwZ,EAAAriB,MAAAumB,EAAAqmB,UAAArmB,EAAAomB,aAAA,GAEAmG,EAAA,SAAAhqC,GACA,OAAAA,GAAAkqC,EAAA,gBAGAN,EAAAnsB,EAAA1d,IACA8lC,EAAA,OAGAiE,EAAArsB,EAAA1d,KACA8lC,EAAA,SACAC,EAAAkE,EAAAvsB,EAAAzd,KAEE6pC,EAAApsB,EAAA1d,KACF8lC,EAAA,QAGAkE,EAAAtsB,EAAA1d,KACA8lC,EAAA,SACAC,EAAAkE,EAAAvsB,EAAAzd,KAIA,IAAA3L,EAAA60C,EAAA3Z,SACA,OACAsW,OAAAxxC,EAAAwxC,OAAAxxC,EAAAwxC,SACAC,OAAAzxC,EAAAyxC,OAAAzxC,EAAAyxC,UAyOAqE,CAAA52C,KAAAi1C,GAEAD,EApOA,SAAAzjB,EAAAvL,EAAA+uB,EAAAhwB,GAEA,IAAAvY,EAAA+kB,EAAA/kB,EACAC,EAAA8kB,EAAA9kB,EAEA8jC,EAAAhf,EAAAgf,UACAD,EAAA/e,EAAA+e,aACArqB,EAAAsL,EAAAtL,aACAqsB,EAAAyC,EAAAzC,OACAC,EAAAwC,EAAAxC,OACAsE,EAAAtG,EAAAD,EACAwG,EAAA7wB,EAAAqqB,EAkCA,MAhCA,UAAAgC,EACA9lC,GAAAwZ,EAAAriB,MACE,WAAA2uC,KACF9lC,GAAAwZ,EAAAriB,MAAA,GACAqiB,EAAAriB,MAAAohB,EAAAphB,QACA6I,EAAAuY,EAAAphB,MAAAqiB,EAAAriB,OAEA6I,EAAA,IACAA,EAAA,IAIA,QAAA+lC,EACA9lC,GAAAoqC,EAEApqC,GADE,WAAA8lC,EACFvsB,EAAAniB,OAAAgzC,EAEA7wB,EAAAniB,OAAA,EAGA,WAAA0uC,EACA,SAAAD,EACA9lC,GAAAqqC,EACG,UAAAvE,IACH9lC,GAAAqqC,GAEE,SAAAvE,EACF9lC,GAAAsqC,EACE,UAAAxE,IACF9lC,GAAAsqC,GAGA,CACAtqC,IACAC,KAqLAsqC,CAAA7sB,EAAA+qB,EAAAF,EAAAvzB,EAAAoN,aAEA1E,EAAAspB,QAAA,EAoBA,OAjBAtpB,EAAAooB,OAAAyC,EAAAzC,OACApoB,EAAAqoB,OAAAwC,EAAAxC,OACAroB,EAAA1d,EAAAwoC,EAAAxoC,EACA0d,EAAAzd,EAAAuoC,EAAAvoC,EACAyd,EAAAvmB,MAAAsxC,EAAAtxC,MACAumB,EAAArmB,OAAAoxC,EAAApxC,OAGAqmB,EAAAgrB,OAAAxqB,EAAAle,EACA0d,EAAAirB,OAAAzqB,EAAAje,EAEA+U,EAAAsI,OAAAI,EAEAuqB,GAAA3zC,EAAAovB,QACApvB,EAAAovB,OAAAnY,KAAAyJ,EAAA0I,GAGA1I,GAGAw1B,UAAA,SAAAC,EAAAjxB,GACA,IAAAviB,EAAAzD,KAAA4uB,OAAAnrB,IACA8tB,EAAAvxB,KAAA6pB,MACAqtB,EAAAl3C,KAAAm3C,iBAAAF,EAAAjxB,EAAAuL,GAEA9tB,EAAA2iB,OAAA8wB,EAAA1hB,GAAA0hB,EAAAxhB,IACAjyB,EAAA2iB,OAAA8wB,EAAAzhB,GAAAyhB,EAAAnpC,IACAtK,EAAA2iB,OAAA8wB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAjxB,EAAAuL,GACA,IAAAiE,EAAAC,EAAA2hB,EAAA1hB,EAAA3nB,EAAAspC,EACA9G,EAAAhf,EAAAgf,UACAtqB,EAAAsL,EAAAtL,aACAqsB,EAAA/gB,EAAA+gB,OACAC,EAAAhhB,EAAAghB,OACA+E,EAAAL,EAAAzqC,EACA+qC,EAAAN,EAAAxqC,EACA9I,EAAAqiB,EAAAriB,MACAE,EAAAmiB,EAAAniB,OAEA,cAAA0uC,EACAxkC,EAAAwpC,EAAA1zC,EAAA,EAEA,SAAAyuC,GAEA7c,GADAD,EAAA8hB,GACA/G,EACA6G,EAAA5hB,EAEAE,EAAA3nB,EAAAwiC,EACA8G,EAAAtpC,EAAAwiC,IAGA9a,GADAD,EAAA8hB,EAAA3zC,GACA4sC,EACA6G,EAAA5hB,EAEAE,EAAA3nB,EAAAwiC,EACA8G,EAAAtpC,EAAAwiC,QAgBA,GAbA,SAAA+B,GAEA9c,GADAC,EAAA6hB,EAAArxB,EAAA,GACAsqB,EACA6G,EAAA3hB,EAAA8a,GACI,UAAA+B,GAEJ9c,GADAC,EAAA6hB,EAAA3zC,EAAAsiB,EAAAsqB,GACAA,EACA6G,EAAA3hB,EAAA8a,IAEA9a,EAAAlE,EAAA2jB,OACA1f,EAAAC,EAAA8a,EACA6G,EAAA3hB,EAAA8a,GAEA,QAAAgC,EAEAxkC,GADA2nB,EAAA6hB,GACAhH,EACA8G,EAAA3hB,MACI,CAEJ3nB,GADA2nB,EAAA6hB,EAAA1zC,GACA0sC,EACA8G,EAAA3hB,EAEA,IAAA8hB,EAAAJ,EACAA,EAAA5hB,EACAA,EAAAgiB,EAGA,OAAUhiB,KAAAC,KAAA2hB,KAAA1hB,KAAA3nB,KAAAspC,OAGVI,UAAA,SAAAhX,EAAAlP,EAAA9tB,GACA,IAAA63B,EAAA/J,EAAA+J,MAEA,GAAAA,EAAAh1B,OAAA,CACAm6B,EAAAj0B,EAAAknC,GAAAniB,IAAA2hB,aAEAzvC,EAAAi0C,UAAAnmB,EAAA2hB,YACAzvC,EAAAk0C,aAAA,MAEA,IAMAvxC,EAAAC,EANA4sC,EAAA1hB,EAAA0hB,cACAzD,EAAAje,EAAAie,aAMA,IAJA/rC,EAAAuvB,UAAAzB,EAAAme,eACAjsC,EAAAslB,KAAAQ,GAAA4sB,WAAAlD,EAAA1hB,EAAAyhB,gBAAAzhB,EAAAuhB,kBAGA1sC,EAAA,EAAAC,EAAAi1B,EAAAh1B,OAAkCF,EAAAC,IAASD,EAC3C3C,EAAAm0C,SAAAtc,EAAAl1B,GAAAq6B,EAAAj0B,EAAAi0B,EAAAh0B,GACAg0B,EAAAh0B,GAAAwmC,EAAAzD,EAEAppC,EAAA,IAAAk1B,EAAAh1B,SACAm6B,EAAAh0B,GAAA8kB,EAAAke,kBAAAD,KAMAqI,SAAA,SAAApX,EAAAlP,EAAA9tB,GACA,IAQAq0C,EARAjF,EAAAthB,EAAAshB,aACAjD,EAAAre,EAAAqe,YACAE,EAAAve,EAAAqhB,WACA6C,EAAAlkB,EAAAkkB,KACAsC,EAAAxmB,EAAAkf,cACA2E,EAAA7jB,EAAA6jB,YACA4C,EAAA,EACAC,EAAAF,EAAArE,GAAAniB,EAAA,UAGA9tB,EAAAi0C,UAAA5H,EACArsC,EAAAk0C,aAAA,MACAl0C,EAAAslB,KAAAQ,GAAA4sB,WAAAtD,EAAAthB,EAAAmhB,eAAAnhB,EAAAihB,iBAEA/R,EAAAj0B,EAAAknC,GAAAniB,EAAAue,GAGA,IAAAoI,EAAA,SAAA7kB,GACA5vB,EAAAm0C,SAAAvkB,EAAAoN,EAAAj0B,EAAAwrC,EAAAvX,EAAAh0B,GACAg0B,EAAAh0B,GAAAomC,EAAAjD,GAIAnsC,EAAAuvB,UAAAzB,EAAAse,cACAtmB,GAAAtJ,KAAAsR,EAAAuf,WAAAoH,GAEAF,EAAAD,GAAA,UAAAjI,EACA,WAAAA,EAAA+C,EAAA,IAAAA,EAAA,EACA,EAGAtpB,GAAAtJ,KAAAw1B,EAAA,SAAArB,EAAAhuC,GACA0xC,EAAAvmB,EAAA8jB,gBAAAjvC,GACA3C,EAAAuvB,UAAA8kB,EACAvuB,GAAAtJ,KAAAm0B,EAAAC,OAAA6D,GAEA3uB,GAAAtJ,KAAAm0B,EAAAJ,MAAA,SAAA3gB,GAEA0kB,IAEAt0C,EAAAuvB,UAAAzB,EAAAkiB,sBACAhwC,EAAAuzB,SAAAihB,EAAAxX,EAAAh0B,EAAAomC,KAGApvC,EAAAwvB,UAAA,EACAxvB,EAAA0vB,YAAAiiB,EAAAhvC,GAAAR,YACAnC,EAAA00C,WAAAF,EAAAxX,EAAAh0B,EAAAomC,KAGApvC,EAAAuvB,UAAAoiB,EAAAhvC,GAAAT,gBACAlC,EAAAuzB,SAAAihB,EAAA,EAAAxX,EAAAh0B,EAAA,EAAAomC,EAAA,EAAAA,EAAA,GACApvC,EAAAuvB,UAAA8kB,GAGAI,EAAA7kB,KAGA9J,GAAAtJ,KAAAm0B,EAAAE,MAAA4D,KAIAF,EAAA,EAGAzuB,GAAAtJ,KAAAsR,EAAA6f,UAAA8G,GACAzX,EAAAh0B,GAAAmjC,GAGAwI,WAAA,SAAA3X,EAAAlP,EAAA9tB,GACA,IAAA6tC,EAAA/f,EAAA+f,OAEAA,EAAAhrC,SACAm6B,EAAAj0B,EAAAknC,GAAAniB,IAAAgiB,cACA9S,EAAAh0B,GAAA8kB,EAAA0e,gBAEAxsC,EAAAi0C,UAAAnmB,EAAAgiB,aACA9vC,EAAAk0C,aAAA,MAEAl0C,EAAAuvB,UAAAzB,EAAA2e,gBACAzsC,EAAAslB,KAAAQ,GAAA4sB,WAAA5kB,EAAA+hB,eAAA/hB,EAAA8hB,iBAAA9hB,EAAA4hB,mBAEA5pB,GAAAtJ,KAAAqxB,EAAA,SAAAje,GACA5vB,EAAAm0C,SAAAvkB,EAAAoN,EAAAj0B,EAAAi0B,EAAAh0B,GACAg0B,EAAAh0B,GAAA8kB,EAAA+hB,eAAA/hB,EAAAye,kBAKAqI,eAAA,SAAA5X,EAAAlP,EAAA9tB,EAAAwxC,GACAxxC,EAAAuvB,UAAAzB,EAAA5rB,gBACAlC,EAAA0vB,YAAA5B,EAAA3rB,YACAnC,EAAAwvB,UAAA1B,EAAA1rB,YACA,IAAAysC,EAAA/gB,EAAA+gB,OACAC,EAAAhhB,EAAAghB,OACA/lC,EAAAi0B,EAAAj0B,EACAC,EAAAg0B,EAAAh0B,EACA9I,EAAAsxC,EAAAtxC,MACAE,EAAAoxC,EAAApxC,OACAqhB,EAAAqM,EAAAtL,aAEAxiB,EAAA0iB,YACA1iB,EAAA8hB,OAAA/Y,EAAA0Y,EAAAzY,GACA,QAAA8lC,GACAvyC,KAAAg3C,UAAAvW,EAAAwU,GAEAxxC,EAAA2iB,OAAA5Z,EAAA7I,EAAAuhB,EAAAzY,GACAhJ,EAAA60C,iBAAA9rC,EAAA7I,EAAA8I,EAAAD,EAAA7I,EAAA8I,EAAAyY,GACA,WAAAqtB,GAAA,UAAAD,GACAtyC,KAAAg3C,UAAAvW,EAAAwU,GAEAxxC,EAAA2iB,OAAA5Z,EAAA7I,EAAA8I,EAAA5I,EAAAqhB,GACAzhB,EAAA60C,iBAAA9rC,EAAA7I,EAAA8I,EAAA5I,EAAA2I,EAAA7I,EAAAuhB,EAAAzY,EAAA5I,GACA,WAAA0uC,GACAvyC,KAAAg3C,UAAAvW,EAAAwU,GAEAxxC,EAAA2iB,OAAA5Z,EAAA0Y,EAAAzY,EAAA5I,GACAJ,EAAA60C,iBAAA9rC,EAAAC,EAAA5I,EAAA2I,EAAAC,EAAA5I,EAAAqhB,GACA,WAAAqtB,GAAA,SAAAD,GACAtyC,KAAAg3C,UAAAvW,EAAAwU,GAEAxxC,EAAA2iB,OAAA5Z,EAAAC,EAAAyY,GACAzhB,EAAA60C,iBAAA9rC,EAAAC,EAAAD,EAAA0Y,EAAAzY,GACAhJ,EAAAgiB,YAEAhiB,EAAA6iB,OAEAiL,EAAA1rB,YAAA,GACApC,EAAA8iB,UAIAuJ,KAAA,WACA,IAAArsB,EAAAzD,KAAA4uB,OAAAnrB,IACA8tB,EAAAvxB,KAAA6pB,MAEA,OAAA0H,EAAAiiB,QAAA,CAIA,IAAAyB,EAAA,CACAtxC,MAAA4tB,EAAA5tB,MACAE,OAAA0tB,EAAA1tB,QAEA48B,EAAA,CACAj0B,EAAA+kB,EAAA/kB,EACAC,EAAA8kB,EAAA9kB,GAIA+mC,EAAAxnC,KAAA4oB,IAAArD,EAAAiiB,QAAA,QAAAjiB,EAAAiiB,QAGA+E,EAAAhnB,EAAA+J,MAAAh1B,QAAAirB,EAAAuf,WAAAxqC,QAAAirB,EAAAkkB,KAAAnvC,QAAAirB,EAAA6f,UAAA9qC,QAAAirB,EAAA+f,OAAAhrC,OAEAtG,KAAAg8B,SAAAsT,SAAAiJ,IACA90C,EAAAojB,OACApjB,EAAA+0C,YAAAhF,EAGAxzC,KAAAq4C,eAAA5X,EAAAlP,EAAA9tB,EAAAwxC,GAGAxU,EAAAh0B,GAAA8kB,EAAA6e,SAGApwC,KAAAy3C,UAAAhX,EAAAlP,EAAA9tB,GAGAzD,KAAA63C,SAAApX,EAAAlP,EAAA9tB,GAGAzD,KAAAo4C,WAAA3X,EAAAlP,EAAA9tB,GAEAA,EAAAujB,aAUAyxB,YAAA,SAAA5b,GACA,IAAArb,EAAAxhB,KACAsB,EAAAkgB,EAAAwa,SACAyY,GAAA,EA6BA,OA3BAjzB,EAAAsyB,YAAAtyB,EAAAsyB,aAAA,GAGA,aAAAjX,EAAA1e,KACAqD,EAAAszB,QAAA,GAEAtzB,EAAAszB,QAAAtzB,EAAAoN,OAAA8pB,0BAAA7b,EAAAv7B,EAAAg2B,KAAAh2B,IAIAmzC,GAAAlrB,GAAAlJ,YAAAmB,EAAAszB,QAAAtzB,EAAAsyB,gBAIAtyB,EAAAsyB,YAAAtyB,EAAAszB,SAEAxzC,EAAAguC,SAAAhuC,EAAA4uB,UACA1O,EAAA8zB,eAAA,CACA9oC,EAAAqwB,EAAArwB,EACAC,EAAAowB,EAAApwB,GAGA+U,EAAAgN,QAAA,GACAhN,EAAAoI,UAIA6qB,KAOAkE,GAAAnH,GAEAoH,GAAA/E,GACA+E,GAAApH,YAAAmH,GAEA,IAAAE,GAAAtvB,GAAA7J,eA4BA,SAAAo5B,KACA,OAAAvvB,GAAAxI,MAAA,GAA0B,GAAAjJ,MAAAC,KAAAC,WAAA,CAC1BmJ,OAAA,SAAA5J,EAAA8G,EAAAD,EAAA9c,GACA,aAAAiW,GAAA,UAAAA,EAAA,CACA,IACAnR,EAAA+X,EAAA1D,EADAs+B,EAAA36B,EAAA7G,GAAAjR,OAOA,IAJA+X,EAAA9G,KACA8G,EAAA9G,GAAA,IAGAnR,EAAA,EAAeA,EAAA2yC,IAAU3yC,EACzBqU,EAAA2D,EAAA7G,GAAAnR,GACA+X,EAAA06B,GAAAp+B,EAAA0D,KAAA,UAAA5G,EAAA,qBAEAnR,GAAAiY,EAAA9G,GAAAjR,QACA+X,EAAA9G,GAAAtQ,KAAA,KAGAoX,EAAA9G,GAAAnR,GAAA+X,MAAA1D,EAAA0D,MAAA1D,EAAA0D,OAAAE,EAAA9G,GAAAnR,GAAA+X,KAGAoL,GAAAxI,MAAA1C,EAAA9G,GAAAnR,GAAA,CAAAuoC,GAAAM,iBAAA9wB,GAAA1D,IAGA8O,GAAAxI,MAAA1C,EAAA9G,GAAAnR,GAAAqU,QAIA8O,GAAA3I,QAAArJ,EAAA8G,EAAAD,EAAA9c,MAWA,SAAA03C,KACA,OAAAzvB,GAAAxI,MAAA,GAA0B,GAAAjJ,MAAAC,KAAAC,WAAA,CAC1BmJ,OAAA,SAAA5J,EAAA8G,EAAAD,EAAA9c,GACA,IAAAuf,EAAAxC,EAAA9G,IAAA,GACAuJ,EAAA1C,EAAA7G,GAEA,WAAAA,EAEA8G,EAAA9G,GAAAuhC,GAAAj4B,EAAAC,GACI,UAAAvJ,EAEJ8G,EAAA9G,GAAAgS,GAAAxI,MAAAF,EAAA,CAAA8tB,GAAAM,iBAAAnuB,EAAA3C,MAAA2C,IAEAyI,GAAA3I,QAAArJ,EAAA8G,EAAAD,EAAA9c,MAuBA,SAAA23C,GAAAl0B,GACA,IAAAm0B,EAAAn0B,EAAAzjB,QAEAioB,GAAAtJ,KAAA8E,EAAA6I,OAAA,SAAAnT,GACA4qB,GAAAG,UAAAzgB,EAAAtK,KAGAy+B,EAAAF,GACAzwB,GAAA1gB,OACA0gB,GAAAxD,EAAA0nB,OAAAtuB,MACA+6B,GAEAn0B,EAAAzjB,QAAAyjB,EAAA0nB,OAAAnrC,QAAA43C,EACAn0B,EAAAo0B,sBACAp0B,EAAAq0B,sBAGAr0B,EAAA4wB,QAAA3Z,SAAAkd,EAAA9d,SACArW,EAAA4wB,QAAA51C,aAGA,SAAAs5C,GAAAle,GACA,cAAAA,GAAA,WAAAA,EA5HA5S,GAAAT,KAAA,UACA+H,SAAA,GACAypB,OAAA,CACA,YACA,WACA,QACA,aACA,aAEAjiB,MAAA,CACAkiB,QAAA,KACAjiB,KAAA,UACAmM,WAAA,EACA+V,kBAAA,KAEA5c,QAAA,KACA30B,qBAAA,EACAD,YAAA,EACAyxC,4BAAA,IA6GA,IAAA3zC,GAAA,SAAAmc,EAAAwqB,GAEA,OADAzsC,KAAA05C,UAAAz3B,EAAAwqB,GACAzsC,MAGAupB,GAAAnI,OAAAtb,GAAA+R,UAAA,CAIA6hC,UAAA,SAAAz3B,EAAAwqB,GACA,IAAAjrB,EAAAxhB,KAEAysC,EAtDA,SAAAA,GAKA,IAAAntC,GAJAmtC,KAAA,IAIAntC,KAAAmtC,EAAAntC,MAAA,GASA,OARAA,EAAAgG,SAAAhG,EAAAgG,UAAA,GACAhG,EAAA8F,OAAA9F,EAAA8F,QAAA,GAEAqnC,EAAAnrC,QAAA03C,GACAzwB,GAAA1gB,OACA0gB,GAAAkkB,EAAAtuB,MACAsuB,EAAAnrC,SAAA,IAEAmrC,EAwCAkN,CAAAlN,GAEA,IAAAnjB,EAAA2iB,GAAAO,eAAAvqB,EAAAwqB,GACAlpC,EAAA+lB,KAAA/lB,OACAM,EAAAN,KAAAM,OACAF,EAAAJ,KAAAI,MAEA6d,EAAAle,GAAAimB,GAAArK,MACAsC,EAAA/d,IAAA6lB,EACA9H,EAAAje,SACAie,EAAAirB,SACAjrB,EAAA7d,QACA6d,EAAA3d,SACA2d,EAAAurB,YAAAlpC,EAAAF,EAAAE,EAAA,KACA2d,EAAAlgB,QAAAmrC,EAAAnrC,QACAkgB,EAAAo4B,iBAAA,EAUAp4B,EAAAuD,MAAAvD,EACAA,EAAA6Y,WAAA7Y,EAGA1b,GAAA+zC,UAAAr4B,EAAAle,IAAAke,EAGAnC,OAAAgM,eAAA7J,EAAA,QACAzgB,IAAA,WACA,OAAAygB,EAAAirB,OAAAntC,MAEAiF,IAAA,SAAA4W,GACAqG,EAAAirB,OAAAntC,KAAA6b,KAIAmO,GAAA/lB,GASAie,EAAAzhB,aACAyhB,EAAAgN,UALA9nB,QAAAC,MAAA,sEAWA5G,WAAA,WACA,IAAAyhB,EAAAxhB,KAsBA,OAnBA4tC,GAAAQ,OAAA5sB,EAAA,cAEA+H,GAAAuwB,YAAAt4B,IAAAlgB,QAAAy4C,kBAEAv4B,EAAAw4B,aAEAx4B,EAAAlgB,QAAA0G,YAEAwZ,EAAAy4B,QAAA,GAIAz4B,EAAA23B,sBACA33B,EAAA43B,sBACA53B,EAAA04B,cAGAtM,GAAAQ,OAAA5sB,EAAA,aAEAA,GAGAsD,MAAA,WAEA,OADAyE,GAAAhmB,OAAAuhB,MAAA9kB,MACAA,MAGAO,KAAA,WAGA,OADAmrB,GAAAS,gBAAAnsB,MACAA,MAGAi6C,OAAA,SAAAE,GACA,IAAA34B,EAAAxhB,KACAsB,EAAAkgB,EAAAlgB,QACAiC,EAAAie,EAAAje,OACAwpC,EAAAzrC,EAAA2G,qBAAAuZ,EAAAurB,aAAA,KAMAqN,EAAApuC,KAAAC,IAAA,EAAAD,KAAAiB,MAAAsc,GAAA8wB,gBAAA92C,KACA+2C,EAAAtuC,KAAAC,IAAA,EAAAD,KAAAiB,MAAA8/B,EAAAqN,EAAArN,EAAAxjB,GAAAgxB,iBAAAh3C,KAEA,IAAAie,EAAA7d,QAAAy2C,GAAA54B,EAAA3d,SAAAy2C,KAIA/2C,EAAAI,MAAA6d,EAAA7d,MAAAy2C,EACA72C,EAAAM,OAAA2d,EAAA3d,OAAAy2C,EACA/2C,EAAAqiB,MAAAjiB,MAAAy2C,EAAA,KACA72C,EAAAqiB,MAAA/hB,OAAAy2C,EAAA,KAEA/wB,GAAAuwB,YAAAt4B,EAAAlgB,EAAAy4C,mBAEAI,GAAA,CAEA,IAAAK,EAAA,CAAkB72C,MAAAy2C,EAAAv2C,OAAAy2C,GAClB1M,GAAAQ,OAAA5sB,EAAA,UAAAg5B,IAGAl5C,EAAAm5C,UACAn5C,EAAAm5C,SAAAj5B,EAAAg5B,GAGAh5B,EAAAjhB,OACAihB,EAAAgN,OAAA,CACAjD,SAAAjqB,EAAAm4C,gCAKAN,oBAAA,WACA,IAAA73C,EAAAtB,KAAAsB,QACAo5C,EAAAp5C,EAAAssB,QAAA,GACA+sB,EAAAr5C,EAAAmZ,MAEA8O,GAAAtJ,KAAAy6B,EAAA7sB,MAAA,SAAA+sB,EAAA/7B,GACA+7B,EAAAt3C,GAAAs3C,EAAAt3C,IAAA,UAAAub,IAGA0K,GAAAtJ,KAAAy6B,EAAA3sB,MAAA,SAAA8sB,EAAAh8B,GACAg8B,EAAAv3C,GAAAu3C,EAAAv3C,IAAA,UAAAub,IAGA87B,IACAA,EAAAr3C,GAAAq3C,EAAAr3C,IAAA,UAOA81C,oBAAA,WACA,IAAA53B,EAAAxhB,KACAsB,EAAAkgB,EAAAlgB,QACAssB,EAAApM,EAAAoM,QAAA,GACA0W,EAAA,GACAwW,EAAAz7B,OAAAe,KAAAwN,GAAAioB,OAAA,SAAA76B,EAAA1X,GAEA,OADA0X,EAAA1X,IAAA,EACA0X,GACG,IAEH1Z,EAAAssB,SACA0W,IAAA3oB,QACAra,EAAAssB,OAAAC,OAAA,IAAA5oB,IAAA,SAAA21C,GACA,OAAat5C,QAAAs5C,EAAAG,MAAA,WAAAC,UAAA,aAEb15C,EAAAssB,OAAAG,OAAA,IAAA9oB,IAAA,SAAA41C,GACA,OAAav5C,QAAAu5C,EAAAE,MAAA,SAAAC,UAAA,YAKb15C,EAAAmZ,OACA6pB,EAAAr9B,KAAA,CACA3F,UAAAmZ,MACAsgC,MAAA,eACAE,WAAA,EACAD,UAAA,cAIAzxB,GAAAtJ,KAAAqkB,EAAA,SAAAriB,GACA,IAAA04B,EAAA14B,EAAA3gB,QACAgC,EAAAq3C,EAAAr3C,GACA43C,EAAArC,GAAA8B,EAAAx8B,KAAA8D,EAAA84B,OAEA1B,GAAAsB,EAAAxf,YAAAke,GAAAp3B,EAAA+4B,aACAL,EAAAxf,SAAAlZ,EAAA+4B,WAGAF,EAAAx3C,IAAA,EACA,IAAAmX,EAAA,KACA,GAAAnX,KAAAsqB,KAAAtqB,GAAA6a,OAAA+8B,GACAzgC,EAAAmT,EAAAtqB,IACAhC,QAAAq5C,EACAlgC,EAAAhX,IAAA+d,EAAA/d,IACAgX,EAAAsK,MAAAvD,MACI,CACJ,IAAA25B,EAAAxM,GAAAK,oBAAAkM,GACA,IAAAC,EACA,OAEA1gC,EAAA,IAAA0gC,EAAA,CACA73C,KACA6a,KAAA+8B,EACA55C,QAAAq5C,EACAl3C,IAAA+d,EAAA/d,IACAshB,MAAAvD,IAEAoM,EAAAnT,EAAAnX,IAAAmX,EAGAA,EAAA2gC,oBAKAn5B,EAAAg5B,YACAz5B,EAAA/G,WAIA8O,GAAAtJ,KAAA66B,EAAA,SAAAO,EAAA/3C,GACA+3C,UACAztB,EAAAtqB,KAIAke,EAAAoM,SAEA+gB,GAAAS,kBAAApvC,OAGAs7C,yBAAA,WACA,IAAA95B,EAAAxhB,KACAu7C,EAAA,GA0BA,OAxBAhyB,GAAAtJ,KAAAuB,EAAAliB,KAAAgG,SAAA,SAAAmoB,EAAAR,GACA,IAAAM,EAAA/L,EAAAwM,eAAAf,GACA9O,EAAAsP,EAAAtP,MAAAqD,EAAAirB,OAAAtuB,KAQA,GANAoP,EAAApP,MAAAoP,EAAApP,WACAqD,EAAAg6B,mBAAAvuB,GACAM,EAAA/L,EAAAwM,eAAAf,IAEAM,EAAApP,OAEAoP,EAAA8M,WACA9M,EAAA8M,WAAA/M,YAAAL,GACAM,EAAA8M,WAAAjN,iBACI,CACJ,IAAAquB,EAAA9Y,GAAApV,EAAApP,MACA,QAAA5X,IAAAk1C,EACA,UAAAh6C,MAAA,IAAA8rB,EAAApP,KAAA,0BAGAoP,EAAA8M,WAAA,IAAAohB,EAAAj6B,EAAAyL,GACAsuB,EAAAt0C,KAAAsmB,EAAA8M,cAEG7Y,GAEH+5B,GAOAG,cAAA,WACA,IAAAl6B,EAAAxhB,KACAupB,GAAAtJ,KAAAuB,EAAAliB,KAAAgG,SAAA,SAAAmoB,EAAAR,GACAzL,EAAAwM,eAAAf,GAAAoN,WAAA9L,SACG/M,IAMH+M,MAAA,WACAvuB,KAAA07C,gBACA17C,KAAA21C,QAAA51C,cAGAyuB,OAAA,SAAAie,GACA,IAAAjrB,EAAAxhB,KAgBA,GAdAysC,GAAA,iBAAAA,IAEAA,EAAA,CACAlhB,SAAAkhB,EACA3gB,KAAA9T,UAAA,KAIAihC,GAAAz3B,GAIAosB,GAAAc,YAAAltB,IAEA,IAAAosB,GAAAQ,OAAA5sB,EAAA,iBAKAA,EAAAm0B,QAAAjnB,MAAAlN,EAAAliB,KAGA,IAAAi8C,EAAA/5B,EAAA85B,2BAGA/xB,GAAAtJ,KAAAuB,EAAAliB,KAAAgG,SAAA,SAAAmoB,EAAAR,GACAzL,EAAAwM,eAAAf,GAAAoN,WAAAlL,yBACG3N,GAEHA,EAAAm6B,eAGAn6B,EAAAlgB,QAAAgqB,WAAA9J,EAAAlgB,QAAAgqB,UAAAC,UACAhC,GAAAtJ,KAAAs7B,EAAA,SAAAlhB,GACAA,EAAA9L,UAIA/M,EAAAo6B,iBAIAp6B,EAAAm0B,QAAA51C,aAIAyhB,EAAAq6B,WAAA,GAGAjO,GAAAQ,OAAA5sB,EAAA,eAEAA,EAAAo4B,gBACAp4B,EAAAs6B,iBAAA,CACAvwB,SAAAkhB,EAAAlhB,SACA/B,OAAAijB,EAAAjjB,OACAsC,KAAA2gB,EAAA3gB,MAGAtK,EAAAyJ,OAAAwhB,KASAkP,aAAA,YAGA,IAAA/N,GAAAQ,OAFApuC,KAEA,kBAIAqlC,GAAA7W,OAAAxuB,UAAA2D,MAAA3D,KAAA6D,QASA+pC,GAAAQ,OAfApuC,KAeA,oBACA4tC,GAAAQ,OAhBApuC,KAgBA,iBAQA47C,eAAA,WAGA,QAAAhO,GAAAQ,OAFApuC,KAEA,yBAIA,QAAAoG,EAAA,EAAAoa,EANAxgB,KAMAV,KAAAgG,SAAAgB,OAAiDF,EAAAoa,IAAUpa,EAN3DpG,KAOA+7C,cAAA31C,GAGAwnC,GAAAQ,OAVApuC,KAUA,yBAQA+7C,cAAA,SAAAl9B,GACA,IACA0O,EADAvtB,KACAguB,eAAAnP,GACA9V,EAAA,CACAwkB,OACA1O,UAGA,IAAA+uB,GAAAQ,OAPApuC,KAOA,uBAAA+I,MAIAwkB,EAAA8M,WAAA7L,SAEAof,GAAAQ,OAbApuC,KAaA,sBAAA+I,MAGAkiB,OAAA,SAAAwhB,GACA,IAAAjrB,EAAAxhB,KAEAysC,GAAA,iBAAAA,IAEAA,EAAA,CACAlhB,SAAAkhB,EACA3gB,KAAA9T,UAAA,KAIA,IAAAgkC,EAAAx6B,EAAAlgB,QAAAgqB,UACAC,EAAAstB,GAAApM,EAAAlhB,SAAAywB,KAAAzwB,UACAO,EAAA2gB,EAAA3gB,KAEA,QAAA8hB,GAAAQ,OAAA5sB,EAAA,iBAIA,IAAAiK,EAAA,SAAAH,GACAsiB,GAAAQ,OAAA5sB,EAAA,eACA+H,GAAA1J,SAAAm8B,KAAAvwB,WAAA,CAAAH,GAAA9J,IAGA,GAAAw6B,GAAAzwB,EAAA,CACA,IAAAD,EAAA,IAAAF,GAAA,CACAJ,SAAAO,EAAA,MACA/B,OAAAijB,EAAAjjB,QAAAwyB,EAAAxyB,OAEAyB,OAAA,SAAAlG,EAAAk3B,GACA,IAAAC,EAAA3yB,GAAAC,OAAAnH,QAAA45B,EAAAzyB,QACAuB,EAAAkxB,EAAAlxB,YACAoxB,EAAApxB,EAAAkxB,EAAAjxB,SAEAjG,EAAA+K,KAAAosB,EAAAC,KAAApxB,IAGAG,oBAAA8wB,EAAAxwB,WACAL,oBAAAM,IAGAC,GAAAG,aAAArK,EAAA8J,EAAAC,EAAAO,QAEAtK,EAAAsO,OAGArE,EAAA,IAAAL,GAAA,CAAkCJ,SAAA,EAAAjG,MAAAvD,KAGlC,OAAAA,IAGAsO,KAAA,SAAAF,GACA,IAAApO,EAAAxhB,KAEAwhB,EAAAsD,QAEAyE,GAAApK,cAAAyQ,KACAA,EAAA,GAGApO,EAAAwI,WAAA4F,GAEApO,EAAA7d,OAAA,GAAA6d,EAAA3d,QAAA,IAIA,IAAA+pC,GAAAQ,OAAA5sB,EAAA,cAAAoO,MAKArG,GAAAtJ,KAAAuB,EAAA0jB,MAAA,SAAAC,GACAA,EAAArV,KAAAtO,EAAA4T,YACG5T,GAEHA,EAAA46B,aAAAxsB,GACApO,EAAA66B,aAAAzsB,GAEAge,GAAAQ,OAAA5sB,EAAA,aAAAoO,MAMA5F,WAAA,SAAA4F,GAGA,IAFA,IAEAxpB,EAAA,EAAAoa,GAFAxgB,KAEAV,KAAAgG,UAAA,IAAAgB,OAAyDF,EAAAoa,IAAUpa,EAFnEpG,KAGAm5B,iBAAA/yB,IAHApG,KAIAguB,eAAA5nB,GAAAi0B,WAAArQ,WAAA4F,GAJA5vB,KAQA21C,QAAA3rB,WAAA4F,IAQAwsB,aAAA,SAAAxsB,GACA,IAAApO,EAAAxhB,KAEA,QAAA4tC,GAAAQ,OAAA5sB,EAAA,sBAAAoO,IAAA,CAKA,QAAAxpB,GAAAob,EAAAliB,KAAAgG,UAAA,IAAAgB,OAAA,EAAmDF,GAAA,IAAQA,EAC3Dob,EAAA2X,iBAAA/yB,IACAob,EAAA86B,YAAAl2C,EAAAwpB,GAIAge,GAAAQ,OAAA5sB,EAAA,qBAAAoO,MAQA0sB,YAAA,SAAAz9B,EAAA+Q,GACA,IACArC,EADAvtB,KACAguB,eAAAnP,GACA9V,EAAA,CACAwkB,OACA1O,QACA+Q,gBAGA,IAAAge,GAAAQ,OARApuC,KAQA,qBAAA+I,MAIAwkB,EAAA8M,WAAAvK,KAAAF,GAEAge,GAAAQ,OAdApuC,KAcA,oBAAA+I,MAQAszC,aAAA,SAAAzsB,GACA,IACA+lB,EADA31C,KACA21C,QACA5sC,EAAA,CACA4sC,UACA/lB,gBAGA,IAAAge,GAAAQ,OAPApuC,KAOA,qBAAA+I,MAIA4sC,EAAA7lB,OAEA8d,GAAAQ,OAbApuC,KAaA,oBAAA+I,MAOAwzC,kBAAA,SAAA1f,GACA,OAAA0H,GAAAC,MAAAC,OAAAzkC,KAAA68B,IAGA2f,mBAAA,SAAA3f,GACA,OAAA0H,GAAAC,MAAAn/B,MAAArF,KAAA68B,EAAA,CAAgD4G,WAAA,KAGhDgZ,mBAAA,SAAA5f,GACA,OAAA0H,GAAAC,MAAA,UAAAxkC,KAAA68B,EAAA,CAAoD4G,WAAA,KAGpDiV,0BAAA,SAAA7b,EAAAvF,EAAAh2B,GACA,IAAAiuB,EAAAgV,GAAAC,MAAAlN,GACA,yBAAA/H,EACAA,EAAAvvB,KAAA68B,EAAAv7B,GAGA,IAGAo7C,kBAAA,SAAA7f,GACA,OAAA0H,GAAAC,MAAA/W,QAAAztB,KAAA68B,EAAA,CAAkD4G,WAAA,KAGlDzV,eAAA,SAAAf,GACA,IACAQ,EADAztB,KACAV,KAAAgG,SAAA2nB,GACAQ,EAAAkvB,QACAlvB,EAAAkvB,MAAA,IAGA,IAAApvB,EAAAE,EAAAkvB,MANA38C,KAMAsD,IAaA,OAZAiqB,IACAA,EAAAE,EAAAkvB,MARA38C,KAQAsD,IAAA,CACA6a,KAAA,KACA7e,KAAA,GACAmuB,QAAA,KACA4M,WAAA,KACA1Q,OAAA,KACAgE,QAAA,KACAG,QAAA,OAIAP,GAGAuU,uBAAA,WAEA,IADA,IAAApR,EAAA,EACAtqB,EAAA,EAAAoa,EAAAxgB,KAAAV,KAAAgG,SAAAgB,OAAmDF,EAAAoa,IAAUpa,EAC7DpG,KAAAm5B,iBAAA/yB,IACAsqB,IAGA,OAAAA,GAGAyI,iBAAA,SAAAlM,GACA,IAAAM,EAAAvtB,KAAAguB,eAAAf,GAIA,wBAAAM,EAAA5D,QAAA4D,EAAA5D,QAAA3pB,KAAAV,KAAAgG,SAAA2nB,GAAAtD,QAGAizB,eAAA,WACA,OAAA58C,KAAAsB,QAAA+6B,eAAAr8B,OAMAw7C,mBAAA,SAAAvuB,GACA,IAAA3pB,EAAAtD,KAAAsD,GACAmqB,EAAAztB,KAAAV,KAAAgG,SAAA2nB,GACAM,EAAAE,EAAAkvB,OAAAlvB,EAAAkvB,MAAAr5C,GAEAiqB,IACAA,EAAA8M,WAAA5L,iBACAhB,EAAAkvB,MAAAr5C,KAIAmrB,QAAA,WACA,IAEAroB,EAAAoa,EAFAgB,EAAAxhB,KACAuD,EAAAie,EAAAje,OAMA,IAHAie,EAAAjhB,OAGA6F,EAAA,EAAAoa,EAAAgB,EAAAliB,KAAAgG,SAAAgB,OAA6CF,EAAAoa,IAAUpa,EACvDob,EAAAg6B,mBAAAp1C,GAGA7C,IACAie,EAAAq7B,eACAtzB,GAAAhmB,OAAAuhB,MAAAtD,GACAyqB,GAAAiB,eAAA1rB,EAAA/d,KACA+d,EAAAje,OAAA,KACAie,EAAA/d,IAAA,MAGAmqC,GAAAQ,OAAA5sB,EAAA,kBAEA1b,GAAA+zC,UAAAr4B,EAAAle,KAGAw5C,cAAA,WACA,OAAA98C,KAAAuD,OAAAw5C,UAAA/8B,MAAAhgB,KAAAuD,OAAAyU,YAGAkiC,YAAA,WACA,IAAA14B,EAAAxhB,KACAwhB,EAAAm0B,QAAA,IAAAiD,GAAA,CACAhqB,OAAApN,EACAw7B,eAAAx7B,EACAkN,MAAAlN,EAAAliB,KACA08B,SAAAxa,EAAAlgB,QAAA85B,UACG5Z,IAMHw4B,WAAA,WACA,IAAAx4B,EAAAxhB,KACA+sB,EAAAvL,EAAAy7B,WAAA,GACArwB,EAAA,WACApL,EAAA07B,aAAAl9B,MAAAwB,EAAAxJ,YAGAuR,GAAAtJ,KAAAuB,EAAAlgB,QAAAg4C,OAAA,SAAAn7B,GACA8tB,GAAA1C,iBAAA/nB,EAAArD,EAAAyO,GACAG,EAAA5O,GAAAyO,IAKApL,EAAAlgB,QAAA0G,aACA4kB,EAAA,WACApL,EAAAy4B,UAGAhO,GAAA1C,iBAAA/nB,EAAA,SAAAoL,GACAG,EAAAktB,OAAArtB,IAOAiwB,aAAA,WACA,IAAAr7B,EAAAxhB,KACA+sB,EAAAvL,EAAAy7B,WACAlwB,WAIAvL,EAAAy7B,WACA1zB,GAAAtJ,KAAA8M,EAAA,SAAAH,EAAAzO,GACA8tB,GAAArC,oBAAApoB,EAAArD,EAAAyO,OAIAuwB,iBAAA,SAAAttB,EAAAyH,EAAAgY,GACA,IACAnrC,EAAAiC,EAAAoa,EADA+O,EAAA+f,EAAA,mCAGA,IAAAlpC,EAAA,EAAAoa,EAAAqP,EAAAvpB,OAAqCF,EAAAoa,IAAUpa,GAC/CjC,EAAA0rB,EAAAzpB,KAEApG,KAAAguB,eAAA7pB,EAAA0qB,eAAAwL,WAAA9K,GAAAprB,IAQA+4C,aAAA,SAAArgB,GACA,IAAArb,EAAAxhB,KACA21C,EAAAn0B,EAAAm0B,QAEA,QAAA/H,GAAAQ,OAAA5sB,EAAA,eAAAqb,IAAA,CAKArb,EAAAo4B,iBAAA,EACAp4B,EAAAs6B,iBAAA,KAEA,IAAArH,EAAAjzB,EAAAi3B,YAAA5b,GAKA8Y,IACAlB,EAAAkB,EAAA5rB,OACA4rB,EAAA8C,YAAA5b,GACA4X,EAAAkB,EAAA8C,YAAA5b,IAGA+Q,GAAAQ,OAAA5sB,EAAA,cAAAqb,IAEA,IAAAugB,EAAA57B,EAAAs6B,iBAmBA,OAlBAsB,EAEA57B,EAAAyJ,OAAAmyB,GACG3I,IAAAjzB,EAAAyK,YAEHzK,EAAAjhB,OAIAihB,EAAAyJ,OAAA,CACAM,SAAA/J,EAAAlgB,QAAA+1B,MAAAmiB,kBACA1tB,MAAA,KAIAtK,EAAAo4B,iBAAA,EACAp4B,EAAAs6B,iBAAA,KAEAt6B,IASAi3B,YAAA,SAAA5b,GACA,IAAArb,EAAAxhB,KACAsB,EAAAkgB,EAAAlgB,SAAA,GACA+7C,EAAA/7C,EAAA+1B,MACAod,GAAA,EAqCA,OAnCAjzB,EAAAq6B,WAAAr6B,EAAAq6B,YAAA,GAGA,aAAAhf,EAAA1e,KACAqD,EAAAqzB,OAAA,GAEArzB,EAAAqzB,OAAArzB,EAAAk3B,0BAAA7b,EAAAwgB,EAAA/lB,KAAA+lB,GAKA9zB,GAAA1J,SAAAve,EAAAi4C,SAAAj4C,EAAA+1B,MAAAkiB,QAAA,CAAA1c,EAAAsG,OAAA3hB,EAAAqzB,QAAArzB,GAEA,YAAAqb,EAAA1e,MAAA,UAAA0e,EAAA1e,MACA7c,EAAAs7B,SAEAt7B,EAAAs7B,QAAA7kB,KAAAyJ,EAAAqb,EAAAsG,OAAA3hB,EAAAqzB,QAKArzB,EAAAq6B,WAAAv1C,QACAkb,EAAA27B,iBAAA37B,EAAAq6B,WAAAwB,EAAA/lB,MAAA,GAIA9V,EAAAqzB,OAAAvuC,QAAA+2C,EAAA/lB,MACA9V,EAAA27B,iBAAA37B,EAAAqzB,OAAAwI,EAAA/lB,MAAA,GAGAmd,GAAAlrB,GAAAlJ,YAAAmB,EAAAqzB,OAAArzB,EAAAq6B,YAGAr6B,EAAAq6B,WAAAr6B,EAAAqzB,OAEAJ,KASA3uC,GAAA+zC,UAAA,GAEA,IAAAyD,GAAAx3C,GAipBA,SAAAy3C,KACA,UAAA97C,MACA,6GAsBA,SAAA+7C,GAAAl8C,GACAtB,KAAAsB,WAAA,GA/pBAwE,GAAA23C,WAAA33C,GASAA,GAAA43C,MAAA,GASAn0B,GAAAo0B,YAAA3E,GASAzvB,GAAAq0B,WAAA9E,GAuoBAvvB,GAAAnI,OAAAo8B,GAAA3lC,UAAA,CAMAgmC,QAAAN,GASAO,MAAAP,GASA34C,OAAA24C,GAUAlS,IAAAkS,GAUAQ,KAAAR,GAUAS,QAAAT,GAQAU,MAAAV,GAWAW,QAAA,SAAA/iC,GACA,OAAAA,KAIAqiC,GAAAW,SAAA,SAAAC,GACA70B,GAAAnI,OAAAo8B,GAAA3lC,UAAAumC,IAGA,IAEAC,GAAA,CACAC,MAHAd,IAUAe,GAAA,CAKAC,WAAA,CAOA/lC,OAAA,SAAA0C,GACA,OAAAoO,GAAAnK,QAAAjE,KAAA,GAAAA,GAWAmH,OAAA,SAAAm8B,EAAA5/B,EAAAgb,GAEA,IAAAv3B,EAAAu3B,EAAAvzB,OAAA,EAAAuzB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGA7tB,KAAA4oB,IAAAtyB,GAAA,GACAm8C,IAAAzyC,KAAAiB,MAAAwxC,KAEAn8C,EAAAm8C,EAAAzyC,KAAAiB,MAAAwxC,IAIA,IAAAC,EAAAn1B,GAAAo1B,MAAA3yC,KAAA4oB,IAAAtyB,IACAs8C,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAA7yC,KAAAC,IAAAD,KAAA4oB,IAAAiF,EAAA,IAAA7tB,KAAA4oB,IAAAiF,IAAAvzB,OAAA,KACA,GAAAu4C,EAAA,MACA,IAAAC,EAAAv1B,GAAAo1B,MAAA3yC,KAAA4oB,IAAA6pB,IACAG,EAAAH,EAAAM,cAAA/yC,KAAAiB,MAAA6xC,GAAA9yC,KAAAiB,MAAAyxC,QACK,CACL,IAAAM,GAAA,EAAAhzC,KAAAiB,MAAAyxC,GACAM,EAAAhzC,KAAAC,IAAAD,KAAAD,IAAAizC,EAAA,OACAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAGAM,YAAA,SAAAT,EAAA5/B,EAAAgb,GACA,IAAAslB,EAAAV,EAAAzyC,KAAAO,IAAA,GAAAP,KAAAiB,MAAAsc,GAAAo1B,MAAAF,KAEA,WAAAA,EACA,IACI,IAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAtgC,OAAAgb,EAAAvzB,OAAA,EACJm4C,EAAAM,gBAEA,MAKAK,GAAA71B,GAAA7J,eACAE,GAAA2J,GAAA3J,sBA2DA,SAAAy/B,GAAAxlB,GACA,IACAzzB,EAAAoa,EADApb,EAAA,GAGA,IAAAgB,EAAA,EAAAoa,EAAAqZ,EAAAvzB,OAAiCF,EAAAoa,IAAUpa,EAC3ChB,EAAA6B,KAAA4yB,EAAAzzB,GAAAf,OAGA,OAAAD,EAoBA,SAAAk6C,GAAAh2B,EAAAi2B,EAAAx2B,GACA,OAAAQ,GAAAnK,QAAAmgC,GACAh2B,GAAAi2B,YAAAl2B,EAAAP,EAAAw2B,GACAj2B,EAAA4sB,YAAAqJ,GAAA57C,MAxFA4kB,GAAAT,KAAA,SACAoZ,SAAA,EACA/F,SAAA,OACA1D,QAAA,EAGAC,UAAA,CACAwJ,SAAA,EACAue,MAAA,qBACAxsB,UAAA,EACAysB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACAtoB,iBAAA,EACApE,WAAA,GACAC,iBAAA,GAIA0sB,WAAA,CAEAhf,SAAA,EAGAif,YAAA,GAGAhrB,QAAA,CACA/P,IAAA,EACAE,OAAA,IAKAuU,MAAA,CACAwH,aAAA,EACA+e,YAAA,EACAC,YAAA,GACAC,QAAA,EACAnrB,QAAA,EACAhV,SAAA,EACA+gB,SAAA,EACAqf,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEA5gC,SAAA0+B,GAAAC,WAAA/lC,OACAioC,MAAA,GACAC,MAAA,MAsCA,IAAAC,GAAA/1B,GAAAzJ,OAAA,CAOA8lB,WAAA,WAEA,OACA/hB,KAFAnlB,KAEA6gD,aAAA,EACAz7B,IAHAplB,KAGA8gD,YAAA,EACAz7B,MAJArlB,KAIA+gD,cAAA,EACAz7B,OALAtlB,KAKAghD,eAAA,IAQAlnB,SAAA,WACA,OAAA95B,KAAAihD,QAOA7F,kBAAA,WACA,IAAAvhB,EAAA75B,KAAAsB,QAAAu4B,MAWA,QAAAtiB,KAVA,IAAAsiB,EAAA6mB,QACA7mB,EAAA6mB,MAAA,CACAxf,SAAA,KAGA,IAAArH,EAAA8mB,QACA9mB,EAAA8mB,MAAA,CACAzf,SAAA,IAGArH,EACA,UAAAtiB,GAAA,UAAAA,SACA,IAAAsiB,EAAA6mB,MAAAnpC,KACAsiB,EAAA6mB,MAAAnpC,GAAAsiB,EAAAtiB,SAEA,IAAAsiB,EAAA8mB,MAAAppC,KACAsiB,EAAA8mB,MAAAppC,GAAAsiB,EAAAtiB,MAKA2pC,aAAA,WACA33B,GAAA1J,SAAA7f,KAAAsB,QAAA4/C,aAAA,CAAAlhD,QAGAwuB,OAAA,SAAA2yB,EAAAC,EAAAC,GACA,IACAj7C,EAAAoa,EAAApb,EAAAC,EAAAw0B,EAAA0lB,EADA/9B,EAAAxhB,KA4DA,IAxDAwhB,EAAA0/B,eAGA1/B,EAAA2/B,WACA3/B,EAAA4/B,YACA5/B,EAAA6/B,QAAA93B,GAAAnI,OAAA,CACA+D,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACG+7B,GAEH7/B,EAAA8/B,eAAA,EACA9/B,EAAA+/B,kBAAA,EACA//B,EAAAggC,iBAAAhgC,EAAAggC,kBAAA,GAGAhgC,EAAAigC,sBACAjgC,EAAAkgC,gBACAlgC,EAAAmgC,qBAGAngC,EAAAogC,mBACApgC,EAAAqgC,sBACArgC,EAAAsgC,kBASAtgC,EAAAugC,mBAIAloB,EAAArY,EAAAwgC,cAAA,GAGAnoB,EAAArY,EAAAygC,gBAAApoB,MAEArY,EAAA0gC,8BAKA98C,EAAAoc,EAAA2gC,qBAAAtoB,IAAArY,EAAAqY,MAEArY,EAAA4gC,6BAEA5gC,EAAAqY,MAAAz0B,EAKAgB,EAAA,EAAAoa,EAAApb,EAAAkB,OAAmCF,EAAAoa,IAAUpa,EAC7Cf,EAAAD,EAAAgB,IACAm5C,EAAA1lB,EAAAzzB,IAOAm5C,EAAAl6C,QALAw0B,EAAA5yB,KAAAs4C,EAAA,CACAl6C,QACAs7C,OAAA,IAoBA,OAbAn/B,EAAAy/B,OAAApnB,EAGArY,EAAA6gC,8BACA7gC,EAAA8gC,wBACA9gC,EAAA+gC,6BAEA/gC,EAAAghC,YACAhhC,EAAAihC,MACAjhC,EAAAkhC,WAEAlhC,EAAAmhC,cAEAnhC,EAAAic,SAGAklB,YAAA,WACAp5B,GAAA1J,SAAA7f,KAAAsB,QAAAqhD,YAAA,CAAA3iD,QAKAyhD,oBAAA,WACAl4B,GAAA1J,SAAA7f,KAAAsB,QAAAmgD,oBAAA,CAAAzhD,QAEA0hD,cAAA,WACA,IAAAlgC,EAAAxhB,KAEAwhB,EAAA+W,gBAEA/W,EAAA7d,MAAA6d,EAAA2/B,SACA3/B,EAAA2D,KAAA,EACA3D,EAAA6D,MAAA7D,EAAA7d,QAEA6d,EAAA3d,OAAA2d,EAAA4/B,UAGA5/B,EAAA4D,IAAA,EACA5D,EAAA8D,OAAA9D,EAAA3d,QAIA2d,EAAAq/B,YAAA,EACAr/B,EAAAs/B,WAAA,EACAt/B,EAAAu/B,aAAA,EACAv/B,EAAAw/B,cAAA,GAEAW,mBAAA,WACAp4B,GAAA1J,SAAA7f,KAAAsB,QAAAqgD,mBAAA,CAAA3hD,QAIA4hD,iBAAA,WACAr4B,GAAA1J,SAAA7f,KAAAsB,QAAAsgD,iBAAA,CAAA5hD,QAEA6hD,oBAAAt4B,GAAAtK,KACA6iC,gBAAA,WACAv4B,GAAA1J,SAAA7f,KAAAsB,QAAAwgD,gBAAA,CAAA9hD,QAIA+hD,iBAAA,WACAx4B,GAAA1J,SAAA7f,KAAAsB,QAAAygD,iBAAA,CAAA/hD,QAEAgiD,WAAAz4B,GAAAtK,KACAgjC,gBAAA,SAAApoB,GACA,IAAArY,EAAAxhB,KAEA,OAAAupB,GAAAnK,QAAAya,MAAAvzB,OACAijB,GAAA1J,SAAA2B,EAAAlgB,QAAA2gD,gBAAA,CAAAzgC,EAAAqY,KAGArY,EAAAqY,MAAAtQ,GAAA1J,SAAA2B,EAAAlgB,QAAA2gD,gBAAA,CAAAzgC,IAAAqY,SAAArY,EAAAqY,MACAA,IAGAqoB,4BAAA,WACA34B,GAAA1J,SAAA7f,KAAAsB,QAAA4gD,4BAAA,CAAAliD,QAEAmiD,qBAAA,WACA,IAEAS,EAFA5iD,KAEAsB,QAAAu4B,MAFA75B,KAGA65B,MAHA75B,KAGA65B,MAAA50B,IAAA29C,EAAAC,cAAAD,EAAA/iC,SAAA7f,OAEAoiD,2BAAA,WACA74B,GAAA1J,SAAA7f,KAAAsB,QAAA8gD,2BAAA,CAAApiD,QAKAqiD,4BAAA,WACA94B,GAAA1J,SAAA7f,KAAAsB,QAAA+gD,4BAAA,CAAAriD,QAEAsiD,sBAAA,WACA,IAAA9gC,EAAAxhB,KACAspB,EAAA9H,EAAA/d,IACAm/C,EAAAphC,EAAAlgB,QAAAu4B,MACAz0B,EAAAi6C,GAAA79B,EAAAy/B,QAIA6B,EAAAv5B,GAAAjoB,QAAAsnB,WAAAg6B,GACAt5B,EAAAP,KAAA+5B,EAAA1pC,OAEA,IAAA2pC,EAAAH,EAAAxC,aAAA,EAEA,GAAAh7C,EAAAkB,QAAAkb,EAAAlgB,QAAA4/B,SAAA1f,EAAA+W,eASA,IARA,IAEAyqB,EAFAC,EAAA15B,GAAAi2B,YAAAl2B,EAAAw5B,EAAA1pC,OAAAhU,EAAAoc,EAAAggC,kBACA0B,EAAAD,EAIAE,EAAA3hC,EAAAuY,gBAAA,GAAAvY,EAAAuY,gBAAA,KAGAmpB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAA75B,GAAA85B,UAAAN,GAIA,GAHAC,EAAAh3C,KAAAsC,IAAA80C,GACAp3C,KAAAuC,IAAA60C,GAEAH,EAAAzhC,EAAA4/B,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIAzhC,EAAAuhC,iBAEAR,2BAAA,WACAh5B,GAAA1J,SAAA7f,KAAAsB,QAAAihD,2BAAA,CAAAviD,QAKAwiD,UAAA,WACAj5B,GAAA1J,SAAA7f,KAAAsB,QAAAkhD,UAAA,CAAAxiD,QAEAyiD,IAAA,WACA,IAAAjhC,EAAAxhB,KAEAy9B,EAAAjc,EAAAic,QAAA,CACA95B,MAAA,EACAE,OAAA,GAGAuB,EAAAi6C,GAAA79B,EAAAy/B,QAEAngD,EAAA0gB,EAAAlgB,QACAshD,EAAA9hD,EAAA+4B,MACAypB,EAAAxiD,EAAAo/C,WACAqD,EAAAziD,EAAA42B,UACAwJ,EAAA1f,EAAAgiC,aACAroB,EAAAr6B,EAAAq6B,SACA5C,EAAA/W,EAAA+W,eAEAkrB,EAAAl6B,GAAAjoB,QAAAsnB,WACAk6B,EAAAW,EAAAb,GACA/C,EAAA/+C,EAAA42B,UAAAmoB,eAkBA,GAbApiB,EAAA95B,MAFA40B,EAEA/W,EAAAkiC,cAAAliC,EAAA2/B,SAAA3/B,EAAA6/B,QAAAl8B,KAAA3D,EAAA6/B,QAAAh8B,MAAA7D,EAAA2/B,SAEAjgB,GAAAqiB,EAAA3D,UAAAC,EAAA,EAKApiB,EAAA55B,OADA00B,EACA2I,GAAAqiB,EAAA3D,UAAAC,EAAA,EAEAr+B,EAAA4/B,UAIAkC,EAAApiB,WAAA,CACA,IAAAyiB,EAAAF,EAAAH,GACAM,EAAAr6B,GAAAjoB,QAAAqnB,UAAA26B,EAAAnuB,SACA0uB,EAAAF,EAAAz6B,WAAA06B,EAAA//C,OAEA00B,EACAkF,EAAA55B,QAAAggD,EAEApmB,EAAA95B,OAAAkgD,EAKA,GAAAjB,EAAA1hB,WAAA,CACA,IAAA4iB,EAAAv6B,GAAAi2B,YAAAh+B,EAAA/d,IAAAq/C,EAAA1pC,OAAAhU,EAAAoc,EAAAggC,kBACAuC,EAAAx6B,GAAAy6B,mBAAA5+C,GACA6+C,EAAA,GAAAnB,EAAA98B,KACAk+B,EAAA1iC,EAAAlgB,QAAAu4B,MAAA1E,QAMA,GAHA3T,EAAA8/B,eAAAyC,EACAviC,EAAA+/B,kBAAAuC,EAEAvrB,EAAA,CACA,IAAA6qB,EAAA75B,GAAA85B,UAAA7hC,EAAAuhC,eACAC,EAAAh3C,KAAAsC,IAAA80C,GACAe,EAAAn4C,KAAAuC,IAAA60C,GAGAgB,EAAAD,EAAAL,EACAhB,EAAA55B,WAAA66B,EACAE,EAEAxmB,EAAA55B,OAAAmI,KAAAD,IAAAyV,EAAA4/B,UAAA3jB,EAAA55B,OAAAugD,EAAAF,GAEA1iC,EAAA/d,IAAAslB,KAAA+5B,EAAA1pC,OACA,IAIAynC,EAAAE,EAJAsD,EAAA/E,GAAA99B,EAAA/d,IAAA2B,EAAA,GAAA09C,EAAA1pC,QACAkrC,EAAAhF,GAAA99B,EAAA/d,IAAA2B,IAAAkB,OAAA,GAAAw8C,EAAA1pC,QACAmrC,EAAA/iC,EAAAuY,gBAAA,GAAAvY,EAAA2D,KACAq/B,EAAAhjC,EAAA6D,MAAA7D,EAAAuY,gBAAA30B,EAAAkB,OAAA,GAKA,IAAAkb,EAAAuhC,eACAlC,EAAA,WAAA1lB,EAAA6nB,EAAAqB,EAAArB,EAAAiB,EACAlD,EAAA,WAAA5lB,EAAA6nB,EAAAiB,EAAAjB,EAAAsB,IAEAzD,EAAAwD,EAAA,EACAtD,EAAAuD,EAAA,GAEA9iC,EAAAq/B,YAAA70C,KAAAC,IAAA40C,EAAA0D,EAAA,KACA/iC,EAAAu/B,aAAA/0C,KAAAC,IAAA80C,EAAAyD,EAAA,UAIA5B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGAxmB,EAAA95B,MAAAqI,KAAAD,IAAAyV,EAAA2/B,SAAA1jB,EAAA95B,MAAAmgD,GAEAtiC,EAAAs/B,WAAAgC,EAAA98B,KAAA,EACAxE,EAAAw/B,cAAA8B,EAAA98B,KAAA,EAIAxE,EAAAijC,gBAEAjjC,EAAA7d,MAAA85B,EAAA95B,MACA6d,EAAA3d,OAAA45B,EAAA55B,QAOA4gD,cAAA,WACA,IAAAjjC,EAAAxhB,KACAwhB,EAAA6/B,UACA7/B,EAAAq/B,YAAA70C,KAAAC,IAAAuV,EAAAq/B,YAAAr/B,EAAA6/B,QAAAl8B,KAAA,GACA3D,EAAAs/B,WAAA90C,KAAAC,IAAAuV,EAAAs/B,WAAAt/B,EAAA6/B,QAAAj8B,IAAA,GACA5D,EAAAu/B,aAAA/0C,KAAAC,IAAAuV,EAAAu/B,aAAAv/B,EAAA6/B,QAAAh8B,MAAA,GACA7D,EAAAw/B,cAAAh1C,KAAAC,IAAAuV,EAAAw/B,cAAAx/B,EAAA6/B,QAAA/7B,OAAA,KAIAo9B,SAAA,WACAn5B,GAAA1J,SAAA7f,KAAAsB,QAAAohD,SAAA,CAAA1iD,QAIAu4B,aAAA,WACA,cAAAv4B,KAAAsB,QAAA65B,UAAA,WAAAn7B,KAAAsB,QAAA65B,UAEAuoB,YAAA,WACA,OAAA1jD,KAAAsB,QAAA,WAIA64B,cAAA,SAAAuqB,GAEA,GAAAn7B,GAAApK,cAAAulC,GACA,OAAA3oB,IAGA,qBAAA2oB,gBAAAjlC,UAAAD,SAAAklC,GACA,OAAA3oB,IAGA,GAAA2oB,EACA,GAAA1kD,KAAAu4B,gBACA,QAAAhyB,IAAAm+C,EAAAl4C,EACA,OAAAxM,KAAAm6B,cAAAuqB,EAAAl4C,QAEI,QAAAjG,IAAAm+C,EAAAj4C,EACJ,OAAAzM,KAAAm6B,cAAAuqB,EAAAj4C,GAKA,OAAAi4C,GAQAnP,iBAAAhsB,GAAAtK,KASAwa,iBAAAlQ,GAAAtK,KAOA0lC,iBAAAp7B,GAAAtK,KAMA8a,gBAAA,SAAAlb,GACA,IAAA2C,EAAAxhB,KACAy3B,EAAAjW,EAAAlgB,QAAAm2B,OACA,GAAAjW,EAAA+W,eAAA,CACA,IAAAqsB,EAAApjC,EAAA7d,OAAA6d,EAAAq/B,YAAAr/B,EAAAu/B,cACAoC,EAAAyB,EAAA54C,KAAAC,IAAAuV,EAAAy/B,OAAA36C,QAAAmxB,EAAA,QACAotB,EAAA1B,EAAAtkC,EAAA2C,EAAAq/B,YAEAppB,IACAotB,GAAA1B,EAAA,GAGA,IAAA2B,EAAAtjC,EAAA2D,KAAA0/B,EAEA,OADAC,GAAAtjC,EAAAkiC,cAAAliC,EAAA6/B,QAAAl8B,KAAA,EAGA,IAAA4/B,EAAAvjC,EAAA3d,QAAA2d,EAAAs/B,WAAAt/B,EAAAw/B,eACA,OAAAx/B,EAAA4D,IAAAvG,GAAAkmC,GAAAvjC,EAAAy/B,OAAA36C,OAAA,KAOAw1B,mBAAA,SAAAkpB,GACA,IAAAxjC,EAAAxhB,KACA,GAAAwhB,EAAA+W,eAAA,CACA,IAAAqsB,EAAApjC,EAAA7d,OAAA6d,EAAAq/B,YAAAr/B,EAAAu/B,cACAkE,EAAAL,EAAAI,EAAAxjC,EAAAq/B,YAEAiE,EAAAtjC,EAAA2D,KAAA8/B,EAEA,OADAH,GAAAtjC,EAAAkiC,cAAAliC,EAAA6/B,QAAAl8B,KAAA,EAGA,OAAA3D,EAAA4D,IAAA4/B,EAAAxjC,EAAA3d,QAOAy0B,aAAA,WACA,OAAAt4B,KAAAy5B,iBAAAz5B,KAAAklD,iBAGAA,aAAA,WACA,IACAn5C,EADA/L,KACA+L,IACAE,EAFAjM,KAEAiM,IAEA,OAJAjM,KAIAqhC,YAAA,EACAt1B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,GAOAo5C,UAAA,SAAAtrB,GACA,IAiBAzzB,EAAAm5C,EAjBA/9B,EAAAxhB,KACAu4B,EAAA/W,EAAA+W,eACA6sB,EAAA5jC,EAAAlgB,QAAAu4B,MAAA6mB,MACA2E,EAAAxrB,EAAAvzB,OACAg/C,GAAA,EACAC,EAAAH,EAAAI,cAIAC,EAAAjkC,EAAAkkC,aAAAL,EAAA,GAGAM,EAAAptB,EACA/W,EAAA7d,OAAA6d,EAAAq/B,YAAAr/B,EAAAu/B,cACAv/B,EAAA3d,QAAA2d,EAAAs/B,WAAAt/B,EAAAokC,eAEA7jD,EAAA,GAaA,IAVA0jD,EAAAE,IACAL,EAAA,EAAAt5C,KAAAiB,MAAAw4C,EAAAE,IAKAN,EAAAE,IACAD,EAAAt5C,KAAAC,IAAAq5C,EAAA,EAAAt5C,KAAAiB,MAAAo4C,EAAAE,KAGAn/C,EAAA,EAAaA,EAAAi/C,EAAej/C,IAC5Bm5C,EAAA1lB,EAAAzzB,GAEAk/C,EAAA,GAAAl/C,EAAAk/C,EAAA,UAEA/F,EAAAl6C,MAEAtD,EAAAkF,KAAAs4C,GAEA,OAAAx9C,GAMA2jD,UAAA,WACA,IAAAlkC,EAAAxhB,KACAu4B,EAAA/W,EAAA+W,eACA6sB,EAAA5jC,EAAAlgB,QAAAu4B,MAAA6mB,MAGAmF,EAAAt8B,GAAA85B,UAAA7hC,EAAAuhC,eACAz0C,EAAAtC,KAAA4oB,IAAA5oB,KAAAsC,IAAAu3C,IACAt3C,EAAAvC,KAAA4oB,IAAA5oB,KAAAuC,IAAAs3C,IAEA1wB,EAAAiwB,EAAA5E,iBAAA,EACAt0C,EAAAsV,EAAA+/B,kBAAApsB,GAAA,EAEA2tB,EAAAv5B,GAAAjoB,QAAAsnB,WAAAw8B,GACAh8C,EAAAoY,EAAA8/B,eAAAwB,EAAA55B,WAAAiM,GAAA,EAGA,OAAAoD,EACAnvB,EAAAkF,EAAApC,EAAAqC,EAAArC,EAAAoC,EAAAlF,EAAAmF,EACAnF,EAAAmF,EAAArC,EAAAoC,EAAAlF,EAAAkF,EAAApC,EAAAqC,GAMAi1C,WAAA,WACA,IAGAp9C,EAAAoa,EAAA+M,EAFAxI,EADA/kB,KACA+kB,MACAmc,EAFAlhC,KAEAsB,QAAA4/B,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAA96B,EAAA,EAAAoa,EAAAuE,EAAAzlB,KAAAgG,SAAAgB,OAAgDF,EAAAoa,IAAUpa,EAC1D,GAAA2e,EAAAoU,iBAAA/yB,MACAmnB,EAAAxI,EAAAiJ,eAAA5nB,IACAunB,UAbA3tB,KAaAsD,IAAAiqB,EAAAO,UAbA9tB,KAaAsD,IACA,SAKA,UAOAwsB,KAAA,SAAAsF,GACA,IAAA5T,EAAAxhB,KACAsB,EAAAkgB,EAAAlgB,QAEA,GAAAkgB,EAAAgiC,aAAA,CAIA,IAmCAsC,EAAAC,EAAAC,EAnCAjhC,EAAAvD,EAAAuD,MACAuE,EAAA9H,EAAA/d,IACAolB,EAAAN,GAAA1gB,OACAogB,EAAAY,EAAAZ,iBACAm9B,EAAA9jD,EAAAu4B,MAAA6mB,MACAuF,EAAA3kD,EAAAu4B,MAAA8mB,OAAAyE,EACA1tB,EAAAp2B,EAAAo2B,UACAwoB,EAAA5+C,EAAA4+C,WACA/kB,EAAA75B,EAAA65B,SAEA+qB,EAAA,IAAA1kC,EAAAuhC,cACAoD,EAAAf,EAAA9E,OACA/nB,EAAA/W,EAAA+W,eAEAkrB,EAAAl6B,GAAAjoB,QAAAsnB,WACAiR,EAAAurB,EAAAlkB,SAAAkkB,EAAA7E,SAAA/+B,EAAA2jC,UAAA3jC,EAAAsY,YAAAtY,EAAAsY,WACAssB,EAAAhH,GAAAgG,EAAAiB,UAAAp+B,GACA66B,EAAAW,EAAA2B,GACAl8B,EAAA45B,EAAA55B,WACAo9B,EAAAlH,GAAA6G,EAAAI,UAAAp+B,GACAs+B,EAAA9C,EAAAwC,GACA/B,EAAAkB,EAAAjwB,QACAsrB,EAAA2E,EAAA3E,YAEA+F,EAAA9uB,EAAAkoB,UAAAloB,EAAAmoB,eAAA,EAEA4G,EAAArH,GAAAc,EAAAmG,UAAAp+B,GACA07B,EAAAF,EAAAvD,GACA0D,EAAAr6B,GAAAjoB,QAAAqnB,UAAAu3B,EAAA/qB,SACAuxB,EAAAn9B,GAAA85B,UAAA7hC,EAAAuhC,eAEA4D,EAAA,GAEAC,EAAAlvB,EAAAgoB,WAAA9/B,GAAA8X,EAAAzE,UAAA,OACA4zB,EAAAt9B,GAAAu9B,YAkLA,GA/KA,QAAA3rB,GACA2qB,EAAAe,EAAA9hC,EAAAvD,EAAA8D,OAAAshC,GACAb,EAAAvkC,EAAA8D,OAAAkhC,EACAR,EAAAF,EAAAc,EAAA,GACG,WAAAzrB,GACH2qB,EAAAe,EAAA9hC,EAAAvD,EAAA4D,IAAAwhC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAxkC,EAAA4D,IAAAohC,GACG,SAAArrB,GACH2qB,EAAAe,EAAA9hC,EAAAvD,EAAA6D,MAAAuhC,GACAb,EAAAvkC,EAAA6D,MAAAmhC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAA9hC,EAAAvD,EAAA2D,KAAAyhC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAxkC,EAAA2D,KAAAqhC,GAKAj9B,GAAAtJ,KAAA4Z,EAAA,SAAA0lB,EAAA1gC,GAEA,IAAA0K,GAAApK,cAAAogC,EAAAl6C,OAAA,CAIA,IACA4tB,EAAA8zB,EAAAxzB,EAAAC,EAeAwzB,EAAAC,EAAAC,EAAAC,EAAA3xB,EAAAE,EAAAD,EAAA1nB,EAAAq5C,EAAAC,EAAAC,EAAA5P,EAhBAryC,EAAAk6C,EAAAl6C,MAEAwZ,IAAA2C,EAAA+lC,eAAAjmD,EAAAm2B,SAAAC,EAAAC,iBAEA1E,EAAAyE,EAAAooB,cACAiH,EAAArvB,EAAAqoB,cACAxsB,EAAAmE,EAAAsoB,oBAAA,GACAxsB,EAAAkE,EAAAuoB,0BAAA,IAEAhtB,EAAArT,GAAA8X,EAAAzE,UAAApU,GACAkoC,EAAAnnC,GAAA8X,EAAA+nB,MAAA5gC,GACA0U,EAAAmE,EAAAnE,YAAA,GACAC,EAAAkE,EAAAlE,kBAAA,GAKA,IAAAod,EAAArnB,GAAAnK,QAAA/Z,KAAAiB,OAAA,EACAkhD,EA/tBA,SAAA/sC,EAAAoE,EAAA8Y,GACA,IAAA6vB,EAAA/sC,EAAAsf,gBAAAlb,GAaA,OAXA8Y,IACA,IAAAld,EAAAqf,WAAAxzB,OACAkhD,GAAA/sC,EAAA8d,eACAvsB,KAAAC,IAAAu7C,EAAA/sC,EAAA0K,KAAA1K,EAAA4K,MAAAmiC,GACAx7C,KAAAC,IAAAu7C,EAAA/sC,EAAA2K,IAAA3K,EAAA6K,OAAAkiC,GAEAA,GADG,IAAA3oC,GACHpE,EAAAsf,gBAAA,GAAAytB,GAAA,GAEAA,EAAA/sC,EAAAsf,gBAAAlb,EAAA,OAGA2oC,EAitBAC,CAAAjmC,EAAA3C,EAAA6Y,EAAAC,iBAEA,GAAAY,EAAA,CACA,IAAAmvB,EAAAlB,EAAAtC,EAEAsD,EAAAhmC,EAAA2D,KA/BA,OAgCA4hC,EAAA,iBAGAC,EAAAE,EAAA1xB,EAAAC,EAAAoxB,EAAA9hC,EAAAyiC,EAAAv0B,GACAg0B,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAA5lC,EAAAuY,gBAAAlb,GAAA4hC,EAEA,QAAAtlB,GACAzF,EAAAmxB,EAAA9hC,EAAAqQ,EAAAhQ,IAAAwhC,KAAA,EACA74C,EAAAqnB,EAAA9P,OACAgiC,IAAApB,EAAA,MAAAtV,GAAA1nB,EACAwuB,EAAAwO,EAAA,gBACAmB,EAAA7lC,EAAA8D,OAAAoiC,IAEAhyB,EAAAN,EAAAhQ,IACArX,EAAA84C,EAAA9hC,EAAAqQ,EAAA9P,OAAAshC,KAAA,EACAU,GAAApB,EAAA,MAAAh9B,EACAwuB,EAAAwO,EAAA,iBACAmB,EAAA7lC,EAAA4D,IAAAsiC,OAEI,CACJ,IAAAC,GAAAxB,EAAA,EAAAK,GAAAtC,EAEAsD,EAAAhmC,EAAA4D,IAxDA,OAyDA2hC,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAAzxB,EAAA3nB,EAAA84C,EAAA9hC,EAAAyiC,EAAAv0B,GACAo0B,EAAA7lC,EAAAuY,gBAAAlb,GAAA4hC,EACA6G,GAAA,EAAA1W,GAAA1nB,EAAA,EAEA,SAAAiS,GACA3F,EAAAqxB,EAAA9hC,EAAAqQ,EAAAjQ,KAAAyhC,KAAA,EACAnxB,EAAAL,EAAA/P,MACAqyB,EAAAyO,EAAA,eACAiB,EAAA5lC,EAAA6D,MAAAsiC,IAEAnyB,EAAAJ,EAAAjQ,KACAsQ,EAAAoxB,EAAA9hC,EAAAqQ,EAAA/P,MAAAuhC,KAAA,EACAlP,EAAAyO,EAAA,eACAiB,EAAA5lC,EAAA2D,KAAAwiC,GAIAhB,EAAA1/C,KAAA,CACA+/C,MACAC,MACAC,MACAC,MACA3xB,KACAE,KACAD,KACA1nB,KACAq5C,SACAC,SACAO,QAAA30B,EACA40B,QAAAd,EACAe,aAAAv0B,EACAw0B,mBAAAv0B,EACA3N,UAAA,EAAA6gC,EACArhD,QACAs7C,MAAApB,EAAAoB,MACA2G,aACA5P,iBAKAnuB,GAAAtJ,KAAA0mC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA2BA,GAzBAnwB,EAAAwJ,SAAA0mB,GAAAC,IACAv+B,EAAAzC,OACAyC,EAAA2J,UAAA20B,EACAt+B,EAAA6J,YAAA00B,EACAv+B,EAAA+K,cACA/K,EAAA+K,YAAA2zB,EAAAF,cACAx+B,EAAAgL,eAAA0zB,EAAAD,oBAGAz+B,EAAAnD,YAEAuR,EAAAkoB,YACAt2B,EAAA/D,OAAAyiC,EAAAhB,IAAAgB,EAAAf,KACA39B,EAAAlD,OAAA4hC,EAAAd,IAAAc,EAAAb,MAGAzvB,EAAAioB,kBACAr2B,EAAA/D,OAAAyiC,EAAAxyB,GAAAwyB,EAAAtyB,IACApM,EAAAlD,OAAA4hC,EAAAvyB,GAAAuyB,EAAAj6C,KAGAub,EAAA/C,SACA+C,EAAAtC,WAGAo+B,EAAAlkB,QAAA,CAEA5X,EAAAzC,OACAyC,EAAA2+B,UAAAD,EAAAZ,OAAAY,EAAAX,QACA/9B,EAAA5L,OAAAsqC,EAAAniC,UACAyD,EAAAP,KAAAi/B,EAAArH,MAAA4F,EAAAntC,OAAA0pC,EAAA1pC,OACAkQ,EAAA0J,UAAAg1B,EAAArH,MAAA2F,EAAAF,EACA98B,EAAAquB,aAAA,SACAruB,EAAAouB,UAAAsQ,EAAAtQ,UAEA,IAAAryC,EAAA2iD,EAAA3iD,MACAoH,EAAAu7C,EAAAV,WACA,GAAA/9B,GAAAnK,QAAA/Z,GACA,QAAAe,EAAA,EAAoBA,EAAAf,EAAAiB,SAAkBF,EAEtCkjB,EAAAsuB,SAAA,GAAAvyC,EAAAe,GAAA,EAAAqG,GACAA,GAAAyc,OAGAI,EAAAsuB,SAAAvyC,EAAA,EAAAoH,GAEA6c,EAAAtC,aAIAk5B,EAAAhf,QAAA,CAEA,IAAAgnB,EACAC,EACAtiC,EAAA,EACAuiC,EAAAzE,EAAAz6B,WAAA,EAEA,GAAAqP,EACA2vB,EAAA1mC,EAAA2D,MAAA3D,EAAA6D,MAAA7D,EAAA2D,MAAA,EACAgjC,EAAA,WAAAhtB,EACA3Z,EAAA8D,OAAA8iC,EAAAxE,EAAAt+B,OACA9D,EAAA4D,IAAAgjC,EAAAxE,EAAAx+B,QACI,CACJ,IAAAijC,EAAA,SAAAltB,EACA+sB,EAAAG,EACA7mC,EAAA2D,KAAAijC,EAAAxE,EAAAx+B,IACA5D,EAAA6D,MAAA+iC,EAAAxE,EAAAx+B,IACA+iC,EAAA3mC,EAAA4D,KAAA5D,EAAA8D,OAAA9D,EAAA4D,KAAA,EACAS,EAAAwiC,GAAA,GAAAr8C,KAAAmC,GAAA,GAAAnC,KAAAmC,GAGAmb,EAAAzC,OACAyC,EAAA2+B,UAAAC,EAAAC,GACA7+B,EAAA5L,OAAAmI,GACAyD,EAAAouB,UAAA,SACApuB,EAAAquB,aAAA,SACAruB,EAAA0J,UAAAyzB,EACAn9B,EAAAP,KAAA46B,EAAAvqC,OACAkQ,EAAAsuB,SAAAsI,EAAAC,YAAA,KACA72B,EAAAtC,UAGA,GAAA4/B,EAAA,CAEA,IAEApxB,EAAAC,EAAAC,EAAA3nB,EAFAu6C,EAAA1B,EACA2B,EAAA3oC,GAAA8X,EAAAzE,UAAA4G,EAAAvzB,OAAA,KAGAiyB,GACA/C,EAAAqxB,EAAA9hC,EAAAvD,EAAA2D,KAAAmjC,KAAA,EACA7yB,EAAAoxB,EAAA9hC,EAAAvD,EAAA6D,MAAAkjC,KAAA,EACA7yB,EAAA3nB,EAAA+3C,IAEApwB,EAAAmxB,EAAA9hC,EAAAvD,EAAA4D,IAAAkjC,KAAA,EACAv6C,EAAA84C,EAAA9hC,EAAAvD,EAAA8D,OAAAijC,KAAA,EACA/yB,EAAAC,EAAAqwB,GAGAx8B,EAAA2J,UAAA2zB,EACAt9B,EAAA6J,YAAAvT,GAAA8X,EAAA+nB,MAAA,GACAn2B,EAAAnD,YACAmD,EAAA/D,OAAAiQ,EAAAE,GACApM,EAAAlD,OAAAqP,EAAA1nB,GACAub,EAAA/C,cASAiiC,GAAA5H,GAAAx/B,OAAA,CAMAqnC,UAAA,WACA,IAAAnpD,EAAAU,KAAA+kB,MAAAzlB,KACA,OAAAU,KAAAsB,QAAA8D,SAAApF,KAAAu4B,eAAAj5B,EAAAopD,QAAAppD,EAAAqpD,UAAArpD,EAAA8F,QAGAy8C,oBAAA,WACA,IAIAz1B,EAJA5K,EAAAxhB,KACAoF,EAAAoc,EAAAinC,YACAjnC,EAAAonC,SAAA,EACApnC,EAAAqnC,SAAAzjD,EAAAkB,OAAA,OAGAC,IAAAib,EAAAlgB,QAAAu4B,MAAA9tB,MAEAqgB,EAAAhnB,EAAA2c,QAAAP,EAAAlgB,QAAAu4B,MAAA9tB,KACAyV,EAAAonC,UAAA,IAAAx8B,IAAA5K,EAAAonC,eAGAriD,IAAAib,EAAAlgB,QAAAu4B,MAAA5tB,MAEAmgB,EAAAhnB,EAAA2c,QAAAP,EAAAlgB,QAAAu4B,MAAA5tB,KACAuV,EAAAqnC,UAAA,IAAAz8B,IAAA5K,EAAAqnC,UAGArnC,EAAAzV,IAAA3G,EAAAoc,EAAAonC,UACApnC,EAAAvV,IAAA7G,EAAAoc,EAAAqnC,WAGA7G,WAAA,WACA,IAAAxgC,EAAAxhB,KACAoF,EAAAoc,EAAAinC,YAEAjnC,EAAAqY,MAAA,IAAArY,EAAAonC,UAAApnC,EAAAqnC,WAAAzjD,EAAAkB,OAAA,EAAAlB,IAAA0S,MAAA0J,EAAAonC,SAAApnC,EAAAqnC,SAAA,IAGAtT,iBAAA,SAAA12B,EAAAoO,GACA,IAAAzL,EAAAxhB,KACA+kB,EAAAvD,EAAAuD,MAEA,OAAAA,EAAAiJ,eAAAf,GAAAoN,WAAAlM,qBAAA3M,EAAAle,GACAke,EAAA2Y,cAAApV,EAAAzlB,KAAAgG,SAAA2nB,GAAA3tB,KAAAuf,IAGA2C,EAAAqY,MAAAhb,EAAA2C,EAAAonC,WAIAnvB,iBAAA,SAAAte,EAAA0D,GACA,IAOAiqC,EAPAtnC,EAAAxhB,KACAy3B,EAAAjW,EAAAlgB,QAAAm2B,OAEAsxB,EAAA/8C,KAAAC,IAAAuV,EAAAqnC,SAAA,EAAArnC,EAAAonC,UAAAnxB,EAAA,QAQA,GAHAtc,UACA2tC,EAAAtnC,EAAA+W,eAAApd,EAAA3O,EAAA2O,EAAA1O,QAEAlG,IAAAuiD,QAAAviD,IAAA4U,GAAA3Z,MAAAqd,GAAA,CACA,IAAAzZ,EAAAoc,EAAAinC,YACAttC,EAAA2tC,GAAA3tC,EACA,IAAA+yB,EAAA9oC,EAAA2c,QAAA5G,GACA0D,GAAA,IAAAqvB,IAAArvB,EAGA,GAAA2C,EAAA+W,eAAA,CACA,IAAAywB,EAAAxnC,EAAA7d,MAAAolD,EACAE,EAAAD,GAAAnqC,EAAA2C,EAAAonC,UAMA,OAJAnxB,IACAwxB,GAAAD,EAAA,GAGAxnC,EAAA2D,KAAA8jC,EAEA,IAAAC,EAAA1nC,EAAA3d,OAAAklD,EACAI,EAAAD,GAAArqC,EAAA2C,EAAAonC,UAMA,OAJAnxB,IACA0xB,GAAAD,EAAA,GAGA1nC,EAAA4D,IAAA+jC,GAGApvB,gBAAA,SAAAlb,GACA,OAAA7e,KAAAy5B,iBAAAz5B,KAAA65B,MAAAhb,KAAA7e,KAAA4oD,SAAA,OAGAjE,iBAAA,SAAAE,GACA,IAAArjC,EAAAxhB,KACAy3B,EAAAjW,EAAAlgB,QAAAm2B,OAEAsxB,EAAA/8C,KAAAC,IAAAuV,EAAAy/B,OAAA36C,QAAAmxB,EAAA,QACA2xB,EAAA5nC,EAAA+W,eACA8wB,GAAAD,EAAA5nC,EAAA7d,MAAA6d,EAAA3d,QAAAklD,EAcA,OAZAlE,GAAAuE,EAAA5nC,EAAA2D,KAAA3D,EAAA4D,IAEAqS,IACAotB,GAAAwE,EAAA,IAGAxE,GAAA,EACA,EAEA74C,KAAAqM,MAAAwsC,EAAAwE,IAGA7nC,EAAAonC,UAGAtwB,aAAA,WACA,OAAAt4B,KAAAslB,UAKAgkC,GAjIA,CACAnuB,SAAA,UAiIAqtB,GAAAc,aAEA,IAAArqC,GAAAsK,GAAAtK,KACAE,GAAAoK,GAAApK,cAgFAoqC,GAAA3I,GAAAx/B,OAAA,CACA+Y,cAAA,SAAAhf,GACA,uBAAAA,GACAA,EAEAylC,GAAA/oC,UAAAsiB,cAAApiB,KAAA/X,KAAAmb,IAGAquC,uBAAA,WACA,IAAAhoC,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACAshD,EAAA9hD,EAAA+4B,MAKA,GAAA+oB,EAAAvhB,YAAA,CACA,IAAAooB,EAAAlgC,GAAAmgC,KAAAloC,EAAAzV,KACA49C,EAAApgC,GAAAmgC,KAAAloC,EAAAvV,KAEAw9C,EAAA,GAAAE,EAAA,EAEAnoC,EAAAvV,IAAA,EACIw9C,EAAA,GAAAE,EAAA,IAEJnoC,EAAAzV,IAAA,GAIA,IAAA69C,OAAArjD,IAAAq8C,EAAA72C,UAAAxF,IAAAq8C,EAAAiH,aACAC,OAAAvjD,IAAAq8C,EAAA32C,UAAA1F,IAAAq8C,EAAAmH,kBAEAxjD,IAAAq8C,EAAA72C,IACAyV,EAAAzV,IAAA62C,EAAA72C,SACGxF,IAAAq8C,EAAAiH,eACH,OAAAroC,EAAAzV,IACAyV,EAAAzV,IAAA62C,EAAAiH,aAEAroC,EAAAzV,IAAAC,KAAAD,IAAAyV,EAAAzV,IAAA62C,EAAAiH,oBAIAtjD,IAAAq8C,EAAA32C,IACAuV,EAAAvV,IAAA22C,EAAA32C,SACG1F,IAAAq8C,EAAAmH,eACH,OAAAvoC,EAAAvV,IACAuV,EAAAvV,IAAA22C,EAAAmH,aAEAvoC,EAAAvV,IAAAD,KAAAC,IAAAuV,EAAAvV,IAAA22C,EAAAmH,eAIAH,IAAAE,GAKAtoC,EAAAzV,KAAAyV,EAAAvV,MACA29C,EACApoC,EAAAvV,IAAAuV,EAAAzV,IAAA,EAEAyV,EAAAzV,IAAAyV,EAAAvV,IAAA,GAKAuV,EAAAzV,MAAAyV,EAAAvV,MACAuV,EAAAvV,MAEA22C,EAAAvhB,aACA7f,EAAAzV,QAKAi+C,aAAA,WACA,IAIAzE,EAHA3C,EADA5iD,KACAsB,QAAAu4B,MACAowB,EAAArH,EAAAqH,SACAzE,EAAA5C,EAAA4C,cAcA,OAXAyE,EACA1E,EAAAv5C,KAAAk+C,KAPAlqD,KAOAiM,IAAAg+C,GAAAj+C,KAAAiB,MAPAjN,KAOA+L,IAAAk+C,GAAA,GAEA1E,EATAvlD,KASAmqD,oBACA3E,KAAA,IAGAA,IACAD,EAAAv5C,KAAAD,IAAAy5C,EAAAD,IAGAA,GAGA4E,kBAAA,WACA,OAAA1qC,OAAAmkB,mBAGAwmB,yBAAAnrC,GAEA+iC,WAAA,WACA,IAAAxgC,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACAshD,EAAA9hD,EAAA+4B,MAMA0rB,EAAA/jC,EAAAwoC,eAGAK,EAAA,CACA9E,SAHAA,EAAAv5C,KAAAC,IAAA,EAAAs5C,GAIAx5C,IAAA62C,EAAA72C,IACAE,IAAA22C,EAAA32C,IACAq+C,UAAA1H,EAAA0H,UACAL,SAAA1gC,GAAA7J,eAAAkjC,EAAA2H,cAAA3H,EAAAqH,WAEApwB,EAAArY,EAAAqY,MAjMA,SAAA2wB,EAAAC,GACA,IAeAC,EAAAC,EAAAC,EAAAC,EAfAhxB,EAAA,GAMAowB,EAAAO,EAAAP,SACAa,EAAAb,GAAA,EACAc,EAAAP,EAAAjF,SAAA,EACAx5C,EAAAy+C,EAAAz+C,IACAE,EAAAu+C,EAAAv+C,IACAq+C,EAAAE,EAAAF,UACAU,EAAAP,EAAA1+C,IACAk/C,EAAAR,EAAAx+C,IACAi/C,EAAA3hC,GAAA4hC,SAAAF,EAAAD,GAAAD,EAAAD,KAKA,GAAAI,EAdA,OAcA/rC,GAAApT,IAAAoT,GAAAlT,GACA,OAAA++C,EAAAC,IAGAJ,EAAA7+C,KAAAk+C,KAAAe,EAAAC,GAAAl/C,KAAAiB,MAAA+9C,EAAAE,IACAH,IAEAG,EAAA3hC,GAAA4hC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAA9qC,GAAAmrC,GAEAI,EAAA1+C,KAAAO,IAAA,GAAAgd,GAAA6hC,eAAAF,KAGAR,EAAA1+C,KAAAO,IAAA,GAAA+9C,GACAY,EAAAl/C,KAAAk+C,KAAAgB,EAAAR,MAGAC,EAAA3+C,KAAAiB,MAAA+9C,EAAAE,KACAN,EAAA5+C,KAAAk+C,KAAAe,EAAAC,KAGAjB,KAEA9qC,GAAApT,IAAAwd,GAAA8hC,YAAAt/C,EAAAm/C,IAAA,OACAP,EAAA5+C,IAEAoT,GAAAlT,IAAAsd,GAAA8hC,YAAAp/C,EAAAi/C,IAAA,OACAN,EAAA3+C,IAIA4+C,GAAAD,EAAAD,GAAAO,EAGAL,EADAthC,GAAA+hC,aAAAT,EAAA7+C,KAAAqM,MAAAwyC,GAAAK,EAAA,KACAl/C,KAAAqM,MAAAwyC,GAEA7+C,KAAAk+C,KAAAW,GAGAF,EAAA3+C,KAAAqM,MAAAsyC,EAAAD,KACAE,EAAA5+C,KAAAqM,MAAAuyC,EAAAF,KACA7wB,EAAA5yB,KAAAkY,GAAApT,GAAA4+C,EAAA5+C,GACA,QAAAuxB,EAAA,EAAgBA,EAAAutB,IAAevtB,EAC/BzD,EAAA5yB,KAAA+E,KAAAqM,OAAAsyC,EAAArtB,EAAA4tB,GAAAR,MAIA,OAFA7wB,EAAA5yB,KAAAkY,GAAAlT,GAAA2+C,EAAA3+C,GAEA4tB,EA4HA0xB,CAAAlB,EAAA7oC,GAEAA,EAAA4oC,2BAIA5oC,EAAAvV,IAAAsd,GAAAtd,IAAA4tB,GACArY,EAAAzV,IAAAwd,GAAAxd,IAAA8tB,GAEA+oB,EAAAziC,SACA0Z,EAAA1Z,UAEAqB,EAAA2I,MAAA3I,EAAAvV,IACAuV,EAAA+X,IAAA/X,EAAAzV,MAEAyV,EAAA2I,MAAA3I,EAAAzV,IACAyV,EAAA+X,IAAA/X,EAAAvV,MAIAk2C,qBAAA,WACA,IAAA3gC,EAAAxhB,KACAwhB,EAAAgqC,eAAAhqC,EAAAqY,MAAA/hB,QACA0J,EAAA+lC,cAAA/lC,EAAAqY,MAAA9X,QAAA,GAEA6+B,GAAA/oC,UAAAsqC,qBAAApqC,KAAAyJ,MAIAiqC,GAAA,CACAtwB,SAAA,OACAtB,MAAA,CACAha,SAAA0+B,GAAAC,WAAAl8B,SAIAopC,GAAAnC,GAAAnoC,OAAA,CACAygC,oBAAA,WACA,IAAArgC,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACAyjB,EAAAvD,EAAAuD,MACAzlB,EAAAylB,EAAAzlB,KACAgG,EAAAhG,EAAAgG,SACAizB,EAAA/W,EAAA+W,eAIA,SAAAozB,EAAAp+B,GACA,OAAAgL,EAAAhL,EAAAI,UAAAnM,EAAAle,GAAAiqB,EAAAO,UAAAtM,EAAAle,GAIAke,EAAAzV,IAAA,KACAyV,EAAAvV,IAAA,KAEA,IAAA2/C,EAAA9qD,EAAAm4B,QAeA,QAdA1yB,IAAAqlD,GACAriC,GAAAtJ,KAAA3a,EAAA,SAAAmoB,EAAAR,GACA,IAAA2+B,EAAA,CAIA,IAAAr+B,EAAAxI,EAAAiJ,eAAAf,GACAlI,EAAAoU,iBAAAlM,IAAA0+B,EAAAp+B,SACAhnB,IAAAgnB,EAAA3mB,QACAglD,GAAA,MAKA9qD,EAAAm4B,SAAA2yB,EAAA,CACA,IAAAC,EAAA,GAEAtiC,GAAAtJ,KAAA3a,EAAA,SAAAmoB,EAAAR,GACA,IAAAM,EAAAxI,EAAAiJ,eAAAf,GACA1V,EAAA,CACAgW,EAAApP,UAEA5X,IAAAzF,EAAAm4B,cAAA1yB,IAAAgnB,EAAA3mB,MAAAqmB,EAAA,GACAM,EAAA3mB,OACA01B,KAAA,UAEA/1B,IAAAslD,EAAAt0C,KACAs0C,EAAAt0C,GAAA,CACAu0C,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAAt0C,GAAAu0C,eACAC,EAAAF,EAAAt0C,GAAAw0C,eAEAhnC,EAAAoU,iBAAAlM,IAAA0+B,EAAAp+B,IACAhE,GAAAtJ,KAAAwN,EAAAnuB,KAAA,SAAAolD,EAAA7lC,GACA,IAAA1D,GAAAqG,EAAA2Y,cAAAuqB,GACAljD,MAAA2Z,IAAAoS,EAAAjuB,KAAAuf,GAAA8K,SAIAmiC,EAAAjtC,GAAAitC,EAAAjtC,IAAA,EACAktC,EAAAltC,GAAAktC,EAAAltC,IAAA,EAEA/d,EAAAkrD,eACAF,EAAAjtC,GAAA,IACO1D,EAAA,EACP4wC,EAAAltC,IAAA1D,EAEA2wC,EAAAjtC,IAAA1D,OAMAoO,GAAAtJ,KAAA4rC,EAAA,SAAAI,GACA,IAAAxzC,EAAAwzC,EAAAH,eAAAnwC,OAAAswC,EAAAF,gBACAG,EAAA3iC,GAAAxd,IAAA0M,GACA0zC,EAAA5iC,GAAAtd,IAAAwM,GACA+I,EAAAzV,IAAA,OAAAyV,EAAAzV,IAAAmgD,EAAAlgD,KAAAD,IAAAyV,EAAAzV,IAAAmgD,GACA1qC,EAAAvV,IAAA,OAAAuV,EAAAvV,IAAAkgD,EAAAngD,KAAAC,IAAAuV,EAAAvV,IAAAkgD,UAIA5iC,GAAAtJ,KAAA3a,EAAA,SAAAmoB,EAAAR,GACA,IAAAM,EAAAxI,EAAAiJ,eAAAf,GACAlI,EAAAoU,iBAAAlM,IAAA0+B,EAAAp+B,IACAhE,GAAAtJ,KAAAwN,EAAAnuB,KAAA,SAAAolD,EAAA7lC,GACA,IAAA1D,GAAAqG,EAAA2Y,cAAAuqB,GACAljD,MAAA2Z,IAAAoS,EAAAjuB,KAAAuf,GAAA8K,SAIA,OAAAnI,EAAAzV,IACAyV,EAAAzV,IAAAoP,EACOA,EAAAqG,EAAAzV,MACPyV,EAAAzV,IAAAoP,GAGA,OAAAqG,EAAAvV,IACAuV,EAAAvV,IAAAkP,EACOA,EAAAqG,EAAAvV,MACPuV,EAAAvV,IAAAkP,QAOAqG,EAAAzV,IAAAyT,SAAAgC,EAAAzV,OAAAvK,MAAAggB,EAAAzV,KAAAyV,EAAAzV,IAxGA,EAyGAyV,EAAAvV,IAAAuT,SAAAgC,EAAAvV,OAAAzK,MAAAggB,EAAAvV,KAAAuV,EAAAvV,IAxGA,EA2GAjM,KAAAwpD,0BAIAW,kBAAA,WACA,IACArH,EAEA,OAHA9iD,KAGAu4B,eACAvsB,KAAAk+C,KAJAlqD,KAIA2D,MAAA,KAEAm/C,EAAAv5B,GAAAjoB,QAAAsnB,WANA5oB,KAMAsB,QAAAu4B,OACA7tB,KAAAk+C,KAPAlqD,KAOA6D,OAAAi/C,EAAA55B,cAIAkhC,yBAAA,WACApqD,KAAAu4B,gBAEAv4B,KAAA65B,MAAA1Z,WAIAo1B,iBAAA,SAAA12B,EAAAoO,GACA,OAAAjtB,KAAAm6B,cAAAn6B,KAAA+kB,MAAAzlB,KAAAgG,SAAA2nB,GAAA3tB,KAAAuf,KAIA4a,iBAAA,SAAAte,GAGA,IAAAqG,EAAAxhB,KACAmqB,EAAA3I,EAAA2I,MAEAmW,GAAA9e,EAAA2Y,cAAAhf,GAEAmf,EAAA9Y,EAAA+X,IAAApP,EAOA,OALA3I,EAAA+W,eACA/W,EAAA2D,KAAA3D,EAAA7d,MAAA22B,GAAAgG,EAAAnW,GAEA3I,EAAA8D,OAAA9D,EAAA3d,OAAAy2B,GAAAgG,EAAAnW,IAKAw6B,iBAAA,SAAAE,GACA,IAAArjC,EAAAxhB,KACAu4B,EAAA/W,EAAA+W,eACA6zB,EAAA7zB,EAAA/W,EAAA7d,MAAA6d,EAAA3d,OACA4zB,GAAAc,EAAAssB,EAAArjC,EAAA2D,KAAA3D,EAAA8D,OAAAu/B,GAAAuH,EACA,OAAA5qC,EAAA2I,OAAA3I,EAAA+X,IAAA/X,EAAA2I,OAAAsN,GAGAsC,gBAAA,SAAAlb,GACA,OAAA7e,KAAAy5B,iBAAAz5B,KAAAwrD,eAAA3sC,OAKAwtC,GAAAZ,GACAC,GAAApC,UAAA+C,GAEA,IAAAC,GAAA/iC,GAAA7J,eAgDA6sC,GAAA,CACApxB,SAAA,OAGAtB,MAAA,CACAha,SAAA0+B,GAAAC,WAAAU,cAKA,SAAAsN,GAAArxC,EAAAwE,GACA,OAAA4J,GAAA/J,SAAArE,OAAA,EAAAA,EAAAwE,EAGA,IAAA8sC,GAAA7L,GAAAx/B,OAAA,CACAygC,oBAAA,WACA,IAAArgC,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACAyjB,EAAAvD,EAAAuD,MACAzlB,EAAAylB,EAAAzlB,KACAgG,EAAAhG,EAAAgG,SACAizB,EAAA/W,EAAA+W,eACA,SAAAozB,EAAAp+B,GACA,OAAAgL,EAAAhL,EAAAI,UAAAnM,EAAAle,GAAAiqB,EAAAO,UAAAtM,EAAAle,GAIAke,EAAAzV,IAAA,KACAyV,EAAAvV,IAAA,KACAuV,EAAAkrC,WAAA,KAEA,IAAAd,EAAA9qD,EAAAm4B,QAeA,QAdA1yB,IAAAqlD,GACAriC,GAAAtJ,KAAA3a,EAAA,SAAAmoB,EAAAR,GACA,IAAA2+B,EAAA,CAIA,IAAAr+B,EAAAxI,EAAAiJ,eAAAf,GACAlI,EAAAoU,iBAAAlM,IAAA0+B,EAAAp+B,SACAhnB,IAAAgnB,EAAA3mB,QACAglD,GAAA,MAKA9qD,EAAAm4B,SAAA2yB,EAAA,CACA,IAAAC,EAAA,GAEAtiC,GAAAtJ,KAAA3a,EAAA,SAAAmoB,EAAAR,GACA,IAAAM,EAAAxI,EAAAiJ,eAAAf,GACA1V,EAAA,CACAgW,EAAApP,UAEA5X,IAAAzF,EAAAm4B,cAAA1yB,IAAAgnB,EAAA3mB,MAAAqmB,EAAA,GACAM,EAAA3mB,OACA01B,KAAA,KAEAvX,EAAAoU,iBAAAlM,IAAA0+B,EAAAp+B,UACAhnB,IAAAslD,EAAAt0C,KACAs0C,EAAAt0C,GAAA,IAGAgS,GAAAtJ,KAAAwN,EAAAnuB,KAAA,SAAAolD,EAAA7lC,GACA,IAAApG,EAAAozC,EAAAt0C,GACA4D,GAAAqG,EAAA2Y,cAAAuqB,GAEAljD,MAAA2Z,IAAAoS,EAAAjuB,KAAAuf,GAAA8K,QAAAxO,EAAA,IAGA1C,EAAAoG,GAAApG,EAAAoG,IAAA,EACApG,EAAAoG,IAAA1D,QAKAoO,GAAAtJ,KAAA4rC,EAAA,SAAAI,GACA,GAAAA,EAAA3lD,OAAA,GACA,IAAA4lD,EAAA3iC,GAAAxd,IAAAkgD,GACAE,EAAA5iC,GAAAtd,IAAAggD,GACAzqC,EAAAzV,IAAA,OAAAyV,EAAAzV,IAAAmgD,EAAAlgD,KAAAD,IAAAyV,EAAAzV,IAAAmgD,GACA1qC,EAAAvV,IAAA,OAAAuV,EAAAvV,IAAAkgD,EAAAngD,KAAAC,IAAAuV,EAAAvV,IAAAkgD,WAKA5iC,GAAAtJ,KAAA3a,EAAA,SAAAmoB,EAAAR,GACA,IAAAM,EAAAxI,EAAAiJ,eAAAf,GACAlI,EAAAoU,iBAAAlM,IAAA0+B,EAAAp+B,IACAhE,GAAAtJ,KAAAwN,EAAAnuB,KAAA,SAAAolD,EAAA7lC,GACA,IAAA1D,GAAAqG,EAAA2Y,cAAAuqB,GAEAljD,MAAA2Z,IAAAoS,EAAAjuB,KAAAuf,GAAA8K,QAAAxO,EAAA,IAIA,OAAAqG,EAAAzV,IACAyV,EAAAzV,IAAAoP,EACOA,EAAAqG,EAAAzV,MACPyV,EAAAzV,IAAAoP,GAGA,OAAAqG,EAAAvV,IACAuV,EAAAvV,IAAAkP,EACOA,EAAAqG,EAAAvV,MACPuV,EAAAvV,IAAAkP,GAGA,IAAAA,IAAA,OAAAqG,EAAAkrC,YAAAvxC,EAAAqG,EAAAkrC,cACAlrC,EAAAkrC,WAAAvxC,QAQAnb,KAAAwpD,0BAGAA,uBAAA,WACA,IAAAhoC,EAAAxhB,KACA4iD,EAAAphC,EAAAlgB,QAAAu4B,MAIArY,EAAAzV,IAAAygD,GAAA5J,EAAA72C,IAAAyV,EAAAzV,KACAyV,EAAAvV,IAAAugD,GAAA5J,EAAA32C,IAAAuV,EAAAvV,KAEAuV,EAAAzV,MAAAyV,EAAAvV,MACA,IAAAuV,EAAAzV,KAAA,OAAAyV,EAAAzV,KACAyV,EAAAzV,IAAAC,KAAAO,IAAA,GAAAP,KAAAiB,MAAAsc,GAAAo1B,MAAAn9B,EAAAzV,MAAA,GACAyV,EAAAvV,IAAAD,KAAAO,IAAA,GAAAP,KAAAiB,MAAAsc,GAAAo1B,MAAAn9B,EAAAvV,MAAA,KAEAuV,EAAAzV,IAXA,EAYAyV,EAAAvV,IAXA,KAcA,OAAAuV,EAAAzV,MACAyV,EAAAzV,IAAAC,KAAAO,IAAA,GAAAP,KAAAiB,MAAAsc,GAAAo1B,MAAAn9B,EAAAvV,MAAA,IAEA,OAAAuV,EAAAvV,MACAuV,EAAAvV,IAAA,IAAAuV,EAAAzV,IACAC,KAAAO,IAAA,GAAAP,KAAAiB,MAAAsc,GAAAo1B,MAAAn9B,EAAAzV,MAAA,GAnBA,IAsBA,OAAAyV,EAAAkrC,aACAlrC,EAAAzV,IAAA,EACAyV,EAAAkrC,WAAAlrC,EAAAzV,IACIyV,EAAAvV,IAAA,EACJuV,EAAAkrC,WAAA1gD,KAAAO,IAAA,GAAAP,KAAAiB,MAAAsc,GAAAo1B,MAAAn9B,EAAAvV,OAEAuV,EAAAkrC,WA7BA,IAkCA1K,WAAA,WACA,IAAAxgC,EAAAxhB,KACA4iD,EAAAphC,EAAAlgB,QAAAu4B,MACA1Z,GAAAqB,EAAA+W,eAEAiyB,EAAA,CACAz+C,IAAAygD,GAAA5J,EAAA72C,KACAE,IAAAugD,GAAA5J,EAAA32C,MAEA4tB,EAAArY,EAAAqY,MA9MA,SAAA2wB,EAAAC,GACA,IAMAkC,EAAAC,EANA/yB,EAAA,GAEAgzB,EAAAP,GAAA9B,EAAAz+C,IAAAC,KAAAO,IAAA,GAAAP,KAAAiB,MAAAsc,GAAAo1B,MAAA8L,EAAA1+C,QAEA+gD,EAAA9gD,KAAAiB,MAAAsc,GAAAo1B,MAAA8L,EAAAx+C,MACA8gD,EAAA/gD,KAAAk+C,KAAAO,EAAAx+C,IAAAD,KAAAO,IAAA,GAAAugD,IAGA,IAAAD,GACAF,EAAA3gD,KAAAiB,MAAAsc,GAAAo1B,MAAA8L,EAAAiC,aACAE,EAAA5gD,KAAAiB,MAAAw9C,EAAAiC,WAAA1gD,KAAAO,IAAA,GAAAogD,IAEA9yB,EAAA5yB,KAAA4lD,GACAA,EAAAD,EAAA5gD,KAAAO,IAAA,GAAAogD,KAEAA,EAAA3gD,KAAAiB,MAAAsc,GAAAo1B,MAAAkO,IACAD,EAAA5gD,KAAAiB,MAAA4/C,EAAA7gD,KAAAO,IAAA,GAAAogD,KAEA,IAAArC,EAAAqC,EAAA,EAAA3gD,KAAAO,IAAA,GAAAP,KAAA4oB,IAAA+3B,IAAA,EAEA,GACA9yB,EAAA5yB,KAAA4lD,GAGA,MADAD,IAEAA,EAAA,EAEAtC,IADAqC,GACA,IAAArC,GAGAuC,EAAA7gD,KAAAqM,MAAAu0C,EAAA5gD,KAAAO,IAAA,GAAAogD,GAAArC,WACEqC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEF,IAAAC,EAAAV,GAAA9B,EAAAv+C,IAAA4gD,GAGA,OAFAhzB,EAAA5yB,KAAA+lD,GAEAnzB,EAyKAozB,CAAAzC,EAAAhpC,GAIAA,EAAAvV,IAAAsd,GAAAtd,IAAA4tB,GACArY,EAAAzV,IAAAwd,GAAAxd,IAAA8tB,GAEA+oB,EAAAziC,SACAA,KACAqB,EAAA2I,MAAA3I,EAAAvV,IACAuV,EAAA+X,IAAA/X,EAAAzV,MAEAyV,EAAA2I,MAAA3I,EAAAzV,IACAyV,EAAA+X,IAAA/X,EAAAvV,KAEAkU,GACA0Z,EAAA1Z,WAIAgiC,qBAAA,WACAniD,KAAAktD,WAAAltD,KAAA65B,MAAA/hB,QAEA8oC,GAAA/oC,UAAAsqC,qBAAApqC,KAAA/X,OAIAu1C,iBAAA,SAAA12B,EAAAoO,GACA,OAAAjtB,KAAAm6B,cAAAn6B,KAAA+kB,MAAAzlB,KAAAgG,SAAA2nB,GAAA3tB,KAAAuf,KAGAkb,gBAAA,SAAAlb,GACA,OAAA7e,KAAAy5B,iBAAAz5B,KAAAktD,WAAAruC,KASAsuC,mBAAA,SAAAhyC,GACA,IAAAwxC,EAAA3gD,KAAAiB,MAAAsc,GAAAo1B,MAAAxjC,IACAyxC,EAAA5gD,KAAAiB,MAAAkO,EAAAnP,KAAAO,IAAA,GAAAogD,IAEA,OAAAC,EAAA5gD,KAAAO,IAAA,GAAAogD,IAGAlzB,iBAAA,SAAAte,GACA,IAMAixC,EAAAvH,EAAA16B,EAAAoP,EAAAmwB,EANAloC,EAAAxhB,KACA4iD,EAAAphC,EAAAlgB,QAAAu4B,MACA1Z,EAAAyiC,EAAAziC,QACAw+B,EAAAp1B,GAAAo1B,MACAyO,EAAA5rC,EAAA2rC,mBAAA3rC,EAAAkrC,YACAj1B,EAAA,EAgCA,OA7BAtc,GAAAqG,EAAA2Y,cAAAhf,GACAgF,GACAgK,EAAA3I,EAAA+X,IACAA,EAAA/X,EAAA2I,MACAu/B,GAAA,IAEAv/B,EAAA3I,EAAA2I,MACAoP,EAAA/X,EAAA+X,IACAmwB,EAAA,GAEAloC,EAAA+W,gBACA6zB,EAAA5qC,EAAA7d,MACAkhD,EAAA1kC,EAAAqB,EAAA6D,MAAA7D,EAAA2D,OAEAinC,EAAA5qC,EAAA3d,OACA6lD,IAAA,EACA7E,EAAA1kC,EAAAqB,EAAA4D,IAAA5D,EAAA8D,QAEAnK,IAAAgP,IACA,IAAAA,IACAsN,EAAA60B,GAAA1J,EAAA95B,SAAAP,GAAA1gB,OAAAsgB,iBACAikC,GAAA30B,EACAtN,EAAAijC,GAEA,IAAAjyC,IACAsc,GAAA20B,GAAAzN,EAAAplB,GAAAolB,EAAAx0B,KAAAw0B,EAAAxjC,GAAAwjC,EAAAx0B,KAEA06B,GAAA6E,EAAAjyB,GAEAotB,GAGAF,iBAAA,SAAAE,GACA,IAKAuH,EAAAjiC,EAAAoP,EAAApe,EALAqG,EAAAxhB,KACA4iD,EAAAphC,EAAAlgB,QAAAu4B,MACA1Z,EAAAyiC,EAAAziC,QACAw+B,EAAAp1B,GAAAo1B,MACAyO,EAAA5rC,EAAA2rC,mBAAA3rC,EAAAkrC,YAiBA,GAdAvsC,GACAgK,EAAA3I,EAAA+X,IACAA,EAAA/X,EAAA2I,QAEAA,EAAA3I,EAAA2I,MACAoP,EAAA/X,EAAA+X,KAEA/X,EAAA+W,gBACA6zB,EAAA5qC,EAAA7d,MACAwX,EAAAgF,EAAAqB,EAAA6D,MAAAw/B,IAAArjC,EAAA2D,OAEAinC,EAAA5qC,EAAA3d,OACAsX,EAAAgF,EAAA0kC,EAAArjC,EAAA4D,IAAA5D,EAAA8D,OAAAu/B,GAEA1pC,IAAAgP,EAAA,CACA,OAAAA,EAAA,CACA,IAAAsN,EAAA60B,GAAA1J,EAAA95B,SAAAP,GAAA1gB,OAAAsgB,iBACAhN,GAAAsc,EACA20B,GAAA30B,EACAtN,EAAAijC,EAEAjyC,GAAAwjC,EAAAplB,GAAAolB,EAAAx0B,GACAhP,GAAAixC,EACAjxC,EAAAnP,KAAAO,IAAA,GAAAoyC,EAAAx0B,GAAAhP,GAEA,OAAAA,KAKAkyC,GAAAd,GACAE,GAAAnD,UAAA+D,GAEA,IAAAC,GAAA/jC,GAAA7J,eACA6tC,GAAAhkC,GAAA3J,sBACA4tC,GAAAjkC,GAAAjoB,QAAA2B,QAEAwqD,GAAA,CACAvsB,SAAA,EAGAwsB,SAAA,EACAvyB,SAAA,YAEA8F,WAAA,CACAC,SAAA,EACAue,MAAA,qBACAxsB,UAAA,EACAM,WAAA,GACAC,iBAAA,GAGAkE,UAAA,CACAyJ,UAAA,GAIAtH,MAAA,CAEA8zB,mBAAA,EAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEAjuC,SAAA0+B,GAAAC,WAAAl8B,QAGA8e,YAAA,CAEAF,SAAA,EAGApY,SAAA,GAGAjJ,SAAA,SAAAxa,GACA,OAAAA,KAKA,SAAA0oD,GAAAtzC,GACA,IAAA3Z,EAAA2Z,EAAAnZ,QACA,OAAAR,EAAAmgC,WAAAC,SAAApgC,EAAAsgC,YAAAF,QAAAzmB,EAAAsK,MAAAzlB,KAAA8F,OAAAkB,OAAA,EAGA,SAAA0nD,GAAAltD,GACA,IAAA8hD,EAAA9hD,EAAA+4B,MAEA,OAAA+oB,EAAA1hB,SAAApgC,EAAAogC,QACAosB,GAAA1K,EAAA95B,SAAAP,GAAA1gB,OAAAsgB,iBAAA,EAAAy6B,EAAAiL,iBAEA,EAiBA,SAAAI,GAAAn8B,EAAAwb,EAAAtnB,EAAAja,EAAAE,GACA,OAAA6lB,IAAA/lB,GAAA+lB,IAAA7lB,EACA,CACAke,MAAAmjB,EAAAtnB,EAAA,EACAuT,IAAA+T,EAAAtnB,EAAA,GAEE8L,EAAA/lB,GAAA+lB,EAAA7lB,EACF,CACAke,MAAAmjB,EAAAtnB,EACAuT,IAAA+T,GAIA,CACAnjB,MAAAmjB,EACA/T,IAAA+T,EAAAtnB,GAuFA,SAAAkoC,GAAAp8B,GACA,WAAAA,GAAA,MAAAA,EACA,SACEA,EAAA,IACF,OAGA,QAGA,SAAA8lB,GAAAn0C,EAAA8D,EAAA4zB,EAAAjS,GACA,IACA9iB,EAAAoa,EADA/T,EAAA0uB,EAAA1uB,EAAAyc,EAAA,EAGA,GAAAK,GAAAnK,QAAA7X,GACA,IAAAnB,EAAA,EAAAoa,EAAAjZ,EAAAjB,OAAiCF,EAAAoa,IAAUpa,EAC3C3C,EAAAm0C,SAAArwC,EAAAnB,GAAA+0B,EAAA3uB,EAAAC,GACAA,GAAAyc,OAGAzlB,EAAAm0C,SAAArwC,EAAA4zB,EAAA3uB,EAAAC,GAIA,SAAA0hD,GAAAr8B,EAAAs8B,EAAAjzB,GACA,KAAArJ,GAAA,MAAAA,EACAqJ,EAAA1uB,GAAA2hD,EAAAhlD,EAAA,GACE0oB,EAAA,KAAAA,EAAA,MACFqJ,EAAA1uB,GAAA2hD,EAAAhlD,GAiGA,SAAAilD,GAAAC,GACA,OAAA/kC,GAAAqB,SAAA0jC,KAAA,EAGA,IAAAC,GAAAhF,GAAAnoC,OAAA,CACAsgC,cAAA,WACA,IAAAlgC,EAAAxhB,KAGAwhB,EAAA7d,MAAA6d,EAAA2/B,SACA3/B,EAAA3d,OAAA2d,EAAA4/B,UACA5/B,EAAAs/B,WAAAkN,GAAAxsC,EAAAlgB,SAAA,EACAkgB,EAAAugB,QAAA/1B,KAAAiB,MAAAuU,EAAA7d,MAAA,GACA6d,EAAAwgB,QAAAh2B,KAAAiB,OAAAuU,EAAA3d,OAAA2d,EAAAs/B,YAAA,GACAt/B,EAAAgtC,YAAAxiD,KAAAD,IAAAyV,EAAA3d,OAAA2d,EAAAs/B,WAAAt/B,EAAA7d,OAAA,GAGAk+C,oBAAA,WACA,IAAArgC,EAAAxhB,KACA+kB,EAAAvD,EAAAuD,MACAhZ,EAAA0T,OAAAmkB,kBACA33B,EAAAwT,OAAAgvC,kBAEAllC,GAAAtJ,KAAA8E,EAAAzlB,KAAAgG,SAAA,SAAAmoB,EAAAR,GACA,GAAAlI,EAAAoU,iBAAAlM,GAAA,CACA,IAAAM,EAAAxI,EAAAiJ,eAAAf,GAEA1D,GAAAtJ,KAAAwN,EAAAnuB,KAAA,SAAAolD,EAAA7lC,GACA,IAAA1D,GAAAqG,EAAA2Y,cAAAuqB,GACAljD,MAAA2Z,IAAAoS,EAAAjuB,KAAAuf,GAAA8K,SAIA5d,EAAAC,KAAAD,IAAAoP,EAAApP,GACAE,EAAAD,KAAAC,IAAAkP,EAAAlP,SAKAuV,EAAAzV,QAAA0T,OAAAmkB,kBAAA,EAAA73B,EACAyV,EAAAvV,QAAAwT,OAAAgvC,kBAAA,EAAAxiD,EAGAuV,EAAAgoC,0BAIAW,kBAAA,WACA,OAAAn+C,KAAAk+C,KAAAlqD,KAAAwuD,YAAAR,GAAAhuD,KAAAsB,WAGA6gD,qBAAA,WACA,IAAA3gC,EAAAxhB,KAEAupD,GAAA1xC,UAAAsqC,qBAAApqC,KAAAyJ,GAGAA,EAAA4f,YAAA5f,EAAAuD,MAAAzlB,KAAA8F,OAAAH,IAAAuc,EAAAlgB,QAAA8/B,YAAAvhB,SAAA2B,IAGA+zB,iBAAA,SAAA12B,EAAAoO,GACA,OAAAjtB,KAAAm6B,cAAAn6B,KAAA+kB,MAAAzlB,KAAAgG,SAAA2nB,GAAA3tB,KAAAuf,KAGA4jC,IAAA,WACA,IACA3hD,EADAd,KACAsB,QAEAR,EAAAogC,SAAApgC,EAAAsgC,YAAAF,QAjRA,SAAAzmB,GA4BA,IAWArU,EAAAgoD,EAAA3rB,EAXAisB,EAAAnlC,GAAAjoB,QAAAsnB,WAAAnO,EAAAnZ,QAAA8/B,aAIAutB,EAAA,CACArlD,EAAA,EACAsC,EAAA6O,EAAA9W,MACA0J,EAAA,EACAvB,EAAA2O,EAAA5W,OAAA4W,EAAAqmC,YAEA8N,EAAA,GAGAn0C,EAAAhX,IAAAslB,KAAA2lC,EAAAt1C,OACAqB,EAAAo0C,iBAAA,GAEA,IAhFAprD,EAAAylB,EAAA7jB,EAgFAypD,EAAAf,GAAAtzC,GACA,IAAArU,EAAA,EAAYA,EAAA0oD,EAAgB1oD,IAAA,CAC5Bq8B,EAAAhoB,EAAAs0C,iBAAA3oD,EAAAqU,EAAA+zC,YAAA,GAlFA/qD,EAmFAgX,EAAAhX,IAnFAylB,EAmFAwlC,EAAAxlC,WAnFA7jB,EAmFAoV,EAAA2mB,YAAAh7B,IAAA,GAAAgoD,EAlFA7kC,GAAAnK,QAAA/Z,GACA,CACA6G,EAAAqd,GAAAi2B,YAAA/7C,IAAAslB,KAAA1jB,GACA+D,EAAA/D,EAAAiB,OAAA4iB,GAIA,CACAhd,EAAAzI,EAAAyyC,YAAA7wC,GAAA1B,MACAyF,EAAA8f,GA0EAzO,EAAAo0C,iBAAAzoD,GAAAgoD,EAGA,IAAAhL,EAAA3oC,EAAAu0C,cAAA5oD,GACA0rB,EAAAvI,GAAA0lC,UAAA7L,GAAA,IACA8L,EAAAjB,GAAAn8B,EAAA2Q,EAAAj2B,EAAA4hD,EAAAliD,EAAA,OACAijD,EAAAlB,GAAAn8B,EAAA2Q,EAAAh2B,EAAA2hD,EAAAhlD,EAAA,QAEA8lD,EAAA/kC,MAAAwkC,EAAArlD,IACAqlD,EAAArlD,EAAA4lD,EAAA/kC,MACAykC,EAAAtlD,EAAA85C,GAGA8L,EAAA31B,IAAAo1B,EAAA/iD,IACA+iD,EAAA/iD,EAAAsjD,EAAA31B,IACAq1B,EAAAhjD,EAAAw3C,GAGA+L,EAAAhlC,MAAAwkC,EAAAthD,IACAshD,EAAAthD,EAAA8hD,EAAAhlC,MACAykC,EAAAvhD,EAAA+1C,GAGA+L,EAAA51B,IAAAo1B,EAAA7iD,IACA6iD,EAAA7iD,EAAAqjD,EAAA51B,IACAq1B,EAAA9iD,EAAAs3C,GAIA3oC,EAAA20C,cAAA30C,EAAA+zC,YAAAG,EAAAC,GAqMAS,CAJArvD,WAMAsvD,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAAptC,EAAAxhB,KACAwvD,EAAAb,EAAArlD,EAAA0C,KAAAuC,IAAAqgD,EAAAtlD,GACAmmD,EAAAzjD,KAAAC,IAAA0iD,EAAA/iD,EAAA4V,EAAA7d,MAAA,GAAAqI,KAAAuC,IAAAqgD,EAAAhjD,GACA8jD,GAAAf,EAAAthD,EAAArB,KAAAsC,IAAAsgD,EAAAvhD,GACAsiD,GAAA3jD,KAAAC,IAAA0iD,EAAA7iD,GAAA0V,EAAA3d,OAAA2d,EAAAs/B,YAAA,GAAA90C,KAAAsC,IAAAsgD,EAAA9iD,GAEA0jD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GAEAnuC,EAAAgtC,YAAAxiD,KAAAD,IACAC,KAAAiB,MAAAsiD,GAAAC,EAAAC,GAAA,GACAzjD,KAAAiB,MAAAsiD,GAAAG,EAAAC,GAAA,IACAnuC,EAAA8tC,eAAAE,EAAAC,EAAAC,EAAAC,IAGAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAAvuC,EAAAxhB,KACAgwD,EAAAxuC,EAAA7d,MAAAksD,EAAAruC,EAAAgtC,YACAyB,EAAAL,EAAApuC,EAAAgtC,YACA0B,EAAAJ,EAAAtuC,EAAAgtC,YACA2B,EAAA3uC,EAAA3d,OAAA2d,EAAAs/B,WAAAiP,EAAAvuC,EAAAgtC,YAEAhtC,EAAAugB,QAAA/1B,KAAAiB,OAAAgjD,EAAAD,GAAA,EAAAxuC,EAAA2D,MACA3D,EAAAwgB,QAAAh2B,KAAAiB,OAAAijD,EAAAC,GAAA,EAAA3uC,EAAA4D,IAAA5D,EAAAs/B,aAGAkO,cAAA,SAAAnwC,GACA,IAAAuxC,EAAA,EAAApkD,KAAAmC,GAAA4/C,GAAA/tD,MACAgyB,EAAAhyB,KAAA+kB,MAAAzjB,SAAAtB,KAAA+kB,MAAAzjB,QAAA0wB,WACAhyB,KAAA+kB,MAAAzjB,QAAA0wB,WACA,EAEAq+B,EAAAr+B,EAAAhmB,KAAAmC,GAAA,MAGA,OAAA0Q,EAAAuxC,EAAAC,GAGAnuB,8BAAA,SAAA/mB,GACA,IAAAqG,EAAAxhB,KAEA,UAAAmb,EACA,SAIA,IAAAm1C,EAAA9uC,EAAAgtC,aAAAhtC,EAAAvV,IAAAuV,EAAAzV,KACA,OAAAyV,EAAAlgB,QAAAu4B,MAAA1Z,SACAqB,EAAAvV,IAAAkP,GAAAm1C,GAEAn1C,EAAAqG,EAAAzV,KAAAukD,GAGAvB,iBAAA,SAAAlwC,EAAA0xC,GACA,IACAC,EADAxwD,KACAgvD,cAAAnwC,GAAA7S,KAAAmC,GAAA,EACA,OACA3B,EAAAR,KAAAsC,IAAAkiD,GAAAD,EAHAvwD,KAGA+hC,QACAt1B,EAAAT,KAAAuC,IAAAiiD,GAAAD,EAJAvwD,KAIAgiC,UAIAU,yBAAA,SAAA7jB,EAAA1D,GACA,OAAAnb,KAAA+uD,iBAAAlwC,EAAA7e,KAAAkiC,8BAAA/mB,KAGAs1C,gBAAA,WACA,IACA1kD,EADA/L,KACA+L,IACAE,EAFAjM,KAEAiM,IAEA,OAJAjM,KAIA0iC,yBAAA,EAJA1iC,KAKAqhC,YAAA,EACAt1B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,IAGA+jB,KAAA,WACA,IAAAtO,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACAiiD,EAAAziD,EAAA42B,UACAkrB,EAAA9hD,EAAA+4B,MAEA,GAAA/4B,EAAAogC,QAAA,CACA,IAAAz9B,EAAA+d,EAAA/d,IACAuuB,EAAAhyB,KAAAgvD,cAAA,GACAlM,EAAAv5B,GAAAjoB,QAAAsnB,WAAAg6B,IAEA9hD,EAAAmgC,WAAAC,SAAApgC,EAAAsgC,YAAAF,UAxQA,SAAAzmB,GACA,IAAAhX,EAAAgX,EAAAhX,IACA3C,EAAA2Z,EAAAnZ,QACAovD,EAAA5vD,EAAAmgC,WACAsiB,EAAAziD,EAAA42B,UACAi5B,EAAA7vD,EAAAsgC,YACAnO,EAAAq6B,GAAAoD,EAAAz9B,UAAAswB,EAAAtwB,WACA8zB,EAAAuG,GAAAoD,EAAAjR,MAAA8D,EAAA9D,OACAmR,EAAA5C,GAAAltD,GAEA2C,EAAAojB,OACApjB,EAAAwvB,YACAxvB,EAAA0vB,YAAA4zB,EACAtjD,EAAA4wB,cACA5wB,EAAA4wB,YAAAm5B,GAAA,CAAAkD,EAAAn9B,WAAAgwB,EAAAhwB,WAAA,MACA9vB,EAAA6wB,eAAAk5B,GAAA,CAAAkD,EAAAl9B,iBAAA+vB,EAAA/vB,iBAAA,KAGA,IAAAq9B,EAAAp2C,EAAAynB,8BAAAphC,EAAA+4B,MAAA1Z,QAAA1F,EAAA1O,IAAA0O,EAAAxO,KAGAyiD,EAAAnlC,GAAAjoB,QAAAsnB,WAAA+nC,GAEAltD,EAAAslB,KAAA2lC,EAAAt1C,OACA3V,EAAAk0C,aAAA,SAEA,QAAAvxC,EAAA2nD,GAAAtzC,GAAA,EAAuCrU,GAAA,EAAQA,IAAA,CAC/C,GAAAsqD,EAAAxvB,SAAAjO,GAAA8zB,EAAA,CACA,IAAA+J,EAAAr2C,EAAAs0C,iBAAA3oD,EAAAyqD,GACAptD,EAAA0iB,YACA1iB,EAAA8hB,OAAA9K,EAAAsnB,QAAAtnB,EAAAunB,SACAv+B,EAAA2iB,OAAA0qC,EAAAtkD,EAAAskD,EAAArkD,GACAhJ,EAAA8iB,SAGA,GAAAoqC,EAAAzvB,QAAA,CAEA,IAAA6vB,EAAA,IAAA3qD,EAAAwqD,EAAA,IACAI,EAAAv2C,EAAAs0C,iBAAA3oD,EAAAyqD,EAAAE,EAAA,GAGAE,EAAA1D,GAAAoD,EAAAtK,UAAAjgD,EAAAmiB,GAAA1gB,OAAAogB,kBACAxkB,EAAAuvB,UAAAi+B,EAEA,IAAA7N,EAAA3oC,EAAAu0C,cAAA5oD,GACA0rB,EAAAvI,GAAA0lC,UAAA7L,GACA3/C,EAAAi0C,UAAAwW,GAAAp8B,GACAq8B,GAAAr8B,EAAArX,EAAAo0C,iBAAAzoD,GAAA4qD,GACApZ,GAAAn0C,EAAAgX,EAAA2mB,YAAAh7B,IAAA,GAAA4qD,EAAAtC,EAAAxlC,aAGAzlB,EAAAujB,UAsNAkqC,CAAA1vC,GAGA+H,GAAAtJ,KAAAuB,EAAAqY,MAAA,SAAAx0B,EAAAwZ,GAEA,GAAAA,EAAA,GAAA+jC,EAAAziC,QAAA,CACA,IAAAgxC,EAAA3vC,EAAA0gB,8BAAA1gB,EAAAgqC,eAAA3sC,IAOA,GAJA0kC,EAAAriB,SAAA,IAAAriB,GA5NA,SAAApE,EAAA8oC,EAAAr+B,EAAArG,GACA,IAKA4jB,EALAh/B,EAAAgX,EAAAhX,IACA09B,EAAAoiB,EAAApiB,SACA2tB,EAAAf,GAAAtzC,GACAssC,EAAAwG,GAAAhK,EAAA9D,MAAA5gC,EAAA,GACAoU,EAAAs6B,GAAAhK,EAAAtwB,UAAApU,EAAA,GAGA,IAAAsiB,GAAA2tB,IAAA/H,GAAA9zB,EAAA,CAaA,GATAxvB,EAAAojB,OACApjB,EAAA0vB,YAAA4zB,EACAtjD,EAAAwvB,YACAxvB,EAAA4wB,cACA5wB,EAAA4wB,YAAAkvB,EAAAhwB,YAAA,IACA9vB,EAAA6wB,eAAAivB,EAAA/vB,kBAAA,GAGA/vB,EAAA0iB,YACAgb,EAEA19B,EAAA+hB,IAAA/K,EAAAsnB,QAAAtnB,EAAAunB,QAAA9c,EAAA,IAAAlZ,KAAAmC,QACE,CAEFs0B,EAAAhoB,EAAAs0C,iBAAA,EAAA7pC,GACAzhB,EAAA8hB,OAAAkd,EAAAj2B,EAAAi2B,EAAAh2B,GAEA,QAAArG,EAAA,EAAiBA,EAAA0oD,EAAgB1oD,IACjCq8B,EAAAhoB,EAAAs0C,iBAAA3oD,EAAA8e,GACAzhB,EAAA2iB,OAAAqc,EAAAj2B,EAAAi2B,EAAAh2B,GAGAhJ,EAAAgiB,YACAhiB,EAAA8iB,SACA9iB,EAAAujB,WAyLAoqC,CAAA5vC,EAAA+hC,EAAA4N,EAAAtyC,GAGA+jC,EAAA1hB,QAAA,CACA,IAAAklB,EAAAkH,GAAA1K,EAAAyD,UAAA99B,GAAA1gB,OAAAogB,kBAOA,GANAxkB,EAAAslB,KAAA+5B,EAAA1pC,OAEA3V,EAAAojB,OACApjB,EAAAwkD,UAAAzmC,EAAAugB,QAAAvgB,EAAAwgB,SACAv+B,EAAAia,OAAAsU,GAEA4wB,EAAA+K,kBAAA,CACA,IAAAzK,EAAAz/C,EAAAyyC,YAAA7wC,GAAA1B,MACAF,EAAAuvB,UAAA4vB,EAAAgL,cACAnqD,EAAAuzB,UACAksB,EAAA,EAAAN,EAAAkL,kBACAqD,EAAArO,EAAA98B,KAAA,EAAA48B,EAAAiL,iBACA3K,EAAA,EAAAN,EAAAkL,iBACAhL,EAAA98B,KAAA,EAAA48B,EAAAiL,kBAIApqD,EAAAi0C,UAAA,SACAj0C,EAAAk0C,aAAA,SACAl0C,EAAAuvB,UAAAozB,EACA3iD,EAAAm0C,SAAAvyC,EAAA,GAAA8rD,GACA1tD,EAAAujB,kBASAqqC,GAAA5D,GACAc,GAAAjF,UAAA+H,GAEA,IAAAC,GAAA/nC,GAAA7J,eAGA6xC,GAAA9xC,OAAA+xC,mBAAA,iBACAC,GAAAhyC,OAAAiyC,kBAAA,iBAEAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACA7rC,KAAA,EACA8rC,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACA7rC,KAAA,IACA8rC,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACA7rC,KAAA,IACA8rC,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACA7rC,KAAA,KACA8rC,MAAA,cAEAntD,IAAA,CACAktD,QAAA,EACA7rC,KAAA,MACA8rC,MAAA,SAEAI,KAAA,CACAL,QAAA,EACA7rC,KAAA,OACA8rC,MAAA,WAEA5rD,MAAA,CACA2rD,QAAA,EACA7rC,KAAA,OACA8rC,MAAA,SAEAK,QAAA,CACAN,QAAA,EACA7rC,KAAA,OACA8rC,MAAA,WAEAM,KAAA,CACAP,QAAA,EACA7rC,KAAA,SAIAqsC,GAAAhzC,OAAAe,KAAAuxC,IAEA,SAAAW,GAAAtkD,EAAAlC,GACA,OAAAkC,EAAAlC,EAGA,SAAAymD,GAAAjuB,GACA,IAEAl+B,EAAAoa,EAAAyB,EAFAuwC,EAAA,GACAC,EAAA,GAGA,IAAArsD,EAAA,EAAAoa,EAAA8jB,EAAAh+B,OAAiCF,EAAAoa,IAAUpa,EAC3C6b,EAAAqiB,EAAAl+B,GACAosD,EAAAvwC,KACAuwC,EAAAvwC,IAAA,EACAwwC,EAAAxrD,KAAAgb,IAIA,OAAAwwC,EAsFA,SAAAC,GAAAC,EAAAC,EAAA9xC,EAAA+xC,GACA,IAAAv4B,EAjCA,SAAAq4B,EAAAp7C,EAAA4D,GAKA,IAJA,IAEA23C,EAAAC,EAAAC,EAFAC,EAAA,EACAjmD,EAAA2lD,EAAArsD,OAAA,EAGA2sD,GAAA,GAAAA,GAAAjmD,GAAA,CAKA,GAHA+lD,EAAAJ,GADAG,EAAAG,EAAAjmD,GAAA,GACA,SACAgmD,EAAAL,EAAAG,IAEAC,EAEA,OAAWE,GAAA,KAAAjmD,GAAAgmD,GACR,GAAAA,EAAAz7C,GAAA4D,EACH83C,EAAAH,EAAA,MACG,MAAAC,EAAAx7C,GAAA4D,GAGH,OAAW83C,GAAAF,EAAA/lD,GAAAgmD,GAFXhmD,EAAA8lD,EAAA,GAOA,OAASG,GAAAD,EAAAhmD,GAAA,MAUTkmD,CAAAP,EAAAC,EAAA9xC,GAGA6Y,EAAAW,EAAA24B,GAAA34B,EAAAttB,GAAAstB,EAAA24B,GAAAN,IAAArsD,OAAA,GAAAqsD,EAAA,GACAp4B,EAAAD,EAAA24B,GAAA34B,EAAAttB,GAAAstB,EAAAttB,GAAA2lD,IAAArsD,OAAA,GAAAqsD,EAAA,GAEAQ,EAAA54B,EAAAq4B,GAAAj5B,EAAAi5B,GACAllD,EAAAylD,GAAAryC,EAAA6Y,EAAAi5B,IAAAO,EAAA,EACA17B,GAAA8C,EAAAs4B,GAAAl5B,EAAAk5B,IAAAnlD,EAEA,OAAAisB,EAAAk5B,GAAAp7B,EAGA,SAAA27B,GAAA34C,EAAA44C,GACA,IAAAC,EAAA74C,EAAA84C,SACAjyD,EAAAmZ,EAAAnZ,QAAAkyD,KACAC,EAAAnyD,EAAAmyD,OACA7uD,EAAA6uD,GAAAnyD,EAAAsD,OACAuW,EAAAk4C,EAaA,MAXA,mBAAAI,IACAt4C,EAAAs4C,EAAAt4C,IAIAoO,GAAA/J,SAAArE,KACAA,EAAA,iBAAAvW,EACA0uD,EAAAxV,MAAA3iC,EAAAvW,GACA0uD,EAAAxV,MAAA3iC,IAGA,OAAAA,GACAA,GAKAs4C,GAAA,mBAAA7uD,IACAuW,EAAAvW,EAAAyuD,GAGA9pC,GAAA/J,SAAArE,KACAA,EAAAm4C,EAAAxV,MAAA3iC,KAIAA,GAGA,SAAA2iC,GAAArjC,EAAA44C,GACA,GAAA9pC,GAAApK,cAAAk0C,GACA,YAGA,IAAA/xD,EAAAmZ,EAAAnZ,QAAAkyD,KACAr4C,EAAAi4C,GAAA34C,IAAA0f,cAAAk5B,IACA,cAAAl4C,EACAA,GAGA7Z,EAAA+W,QACA8C,GAAAV,EAAA84C,SAAAvV,QAAA7iC,EAAA7Z,EAAA+W,QAGA8C,GAgEA,SAAAu4C,GAAA5I,GACA,QAAA1kD,EAAAisD,GAAAtwC,QAAA+oC,GAAA,EAAAtqC,EAAA6xC,GAAA/rD,OAA2DF,EAAAoa,IAAUpa,EACrE,GAAAurD,GAAAU,GAAAjsD,IAAAyrD,OACA,OAAAQ,GAAAjsD,GAWA,SAAAutD,GAAAl5C,EAAA1O,EAAAE,EAAA2nD,GACA,IAYAJ,EAZAF,EAAA74C,EAAA84C,SACAjyD,EAAAmZ,EAAAnZ,QACAuyD,EAAAvyD,EAAAkyD,KACA9S,EAAAmT,EAAA/I,MAnDA,SAAAgJ,EAAA/nD,EAAAE,EAAA2nD,GACA,IACAxtD,EAAA2tD,EAAArJ,EADAlqC,EAAA6xC,GAAA/rD,OAGA,IAAAF,EAAAisD,GAAAtwC,QAAA+xC,GAAiC1tD,EAAAoa,EAAA,IAAcpa,EAI/C,GAHA2tD,EAAApC,GAAAU,GAAAjsD,IACAskD,EAAAqJ,EAAAjC,MAAAiC,EAAAjC,MAAAiC,EAAAjC,MAAAxrD,OAAA,GAAAmrD,GAEAsC,EAAAlC,QAAA7lD,KAAAk+C,MAAAj+C,EAAAF,IAAA2+C,EAAAqJ,EAAA/tC,QAAA4tC,EACA,OAAAvB,GAAAjsD,GAIA,OAAAisD,GAAA7xC,EAAA,GAsCAwzC,CAAAH,EAAAC,QAAA/nD,EAAAE,EAAA2nD,GACAjT,EAAA+S,GAAAhT,GACAuJ,EAAAqH,GAAAuC,EAAA5J,SAAA4J,EAAAI,cACAC,EAAA,SAAAxT,GAAAmT,EAAAM,WACAC,EAAA9yD,EAAAu4B,MAAA8mB,MAAArR,QACAykB,EAAApC,GAAAjR,GACA2T,EAAAtoD,EACAitB,EAAA/sB,EACA4tB,EAAA,GAgCA,IA7BAowB,IACAA,EAvFA,SAAAl+C,EAAAE,EAAA6+C,EAAA8I,GACA,IAIAxtD,EAAAoa,EAAAkqC,EAJApwB,EAAAruB,EAAAF,EACAgoD,EAAApC,GAAA7G,GACAwJ,EAAAP,EAAA/tC,KACA8rC,EAAAiC,EAAAjC,MAGA,IAAAA,EACA,OAAA9lD,KAAAk+C,KAAA5vB,GAAAs5B,EAAAU,IAGA,IAAAluD,EAAA,EAAAoa,EAAAsxC,EAAAxrD,OAAiCF,EAAAoa,IACjCkqC,EAAAoH,EAAA1rD,KACA4F,KAAAk+C,KAAA5vB,GAAAg6B,EAAA5J,KAAAkJ,MAF2CxtD,GAO3C,OAAAskD,EAqEA6J,CAAAxoD,EAAAE,EAAAy0C,EAAAkT,IAIAM,IACAG,GAAAf,EAAAtV,QAAAqW,EAAA,UAAAH,GACAl7B,GAAAs6B,EAAAtV,QAAAhlB,EAAA,UAAAk7B,IAIAG,GAAAf,EAAAtV,QAAAqW,EAAAH,EAAA,MAAAxT,IACA1nB,GAAAs6B,EAAAtV,QAAAhlB,EAAAk7B,EAAA,MAAAxT,IAGAz0C,IACA+sB,GAAAs6B,EAAAjoB,IAAArS,EAAA,EAAA0nB,IAGA8S,EAAAa,EAEAD,GAAAzT,IAAAuT,IAAAL,EAAAx7C,QAIAm7C,GAAAF,EAAAtV,QAAAwV,EAAA7S,GACA6S,GAAAF,EAAAjoB,IAAAmoB,MAAAa,EAAAb,IAAAO,EAAA/tC,KAAAikC,MAAAvJ,IAGO8S,EAAAx6B,EAAaw6B,GAAAF,EAAAjoB,IAAAmoB,EAAAvJ,EAAAvJ,GACpB7mB,EAAA5yB,MAAAusD,GAKA,OAFA35B,EAAA5yB,MAAAusD,GAEA35B,EAqDA,IAmDA26B,GAAA5T,GAAAx/B,OAAA,CACArhB,WAAA,WACAC,KAAAo7C,oBACAwF,GAAA/oC,UAAA9X,WAAAgY,KAAA/X,OAGAwuB,OAAA,WACA,IAAAhN,EAAAxhB,KACAsB,EAAAkgB,EAAAlgB,QACAkyD,EAAAlyD,EAAAkyD,OAAAlyD,EAAAkyD,KAAA,IACAF,EAAA9xC,EAAA+xC,SAAA,IAAAlV,GAAAC,MAAAh9C,EAAAmzD,SAAAxuD,MAaA,OAVAutD,EAAA5uD,QACA8B,QAAAguD,KAAA,0EAOAnrC,GAAAtI,QAAAuyC,EAAAmB,eAAArB,EAAAzV,WAEA+C,GAAA/oC,UAAA2W,OAAAxO,MAAAwB,EAAAxJ,YAMAmiB,cAAA,SAAAuqB,GAIA,OAHAA,QAAAn+C,IAAAm+C,EAAAr3C,IACAq3C,IAAAr3C,GAEAuzC,GAAA/oC,UAAAsiB,cAAApiB,KAAA/X,KAAA0kD,IAGA7C,oBAAA,WACA,IAUAz7C,EAAAk3B,EAAA9c,EAAA8iB,EAAAhkC,EAAAs1D,EAVApzC,EAAAxhB,KACA+kB,EAAAvD,EAAAuD,MACAuuC,EAAA9xC,EAAA+xC,SACAM,EAAAryC,EAAAlgB,QAAAkyD,KACA1I,EAAA+I,EAAA/I,MAAA,MACA/+C,EAAA0lD,GACAxlD,EAAAslD,GACAsD,EAAA,GACAvvD,EAAA,GACAF,EAAA,GAEA0vD,EAAA/vC,EAAAzlB,KAAA8F,QAAA,GAGA,IAAAgB,EAAA,EAAAoa,EAAAs0C,EAAAxuD,OAAuCF,EAAAoa,IAAUpa,EACjDhB,EAAA6B,KAAA62C,GAAAt8B,EAAAszC,EAAA1uD,KAIA,IAAAA,EAAA,EAAAoa,GAAAuE,EAAAzlB,KAAAgG,UAAA,IAAAgB,OAAwDF,EAAAoa,IAAUpa,EAClE,GAAA2e,EAAAoU,iBAAA/yB,GAIA,GAHA9G,EAAAylB,EAAAzlB,KAAAgG,SAAAc,GAAA9G,KAGAiqB,GAAAhK,SAAAjgB,EAAA,IAGA,IAFAgG,EAAAc,GAAA,GAEAk3B,EAAA,EAAAgG,EAAAhkC,EAAAgH,OAAoCg3B,EAAAgG,IAAUhG,EAC9Cs3B,EAAA9W,GAAAt8B,EAAAliB,EAAAg+B,IACAu3B,EAAA5tD,KAAA2tD,GACAtvD,EAAAc,GAAAk3B,GAAAs3B,MAEK,CACL,IAAAt3B,EAAA,EAAAgG,EAAAl+B,EAAAkB,OAAsCg3B,EAAAgG,IAAUhG,EAChDu3B,EAAA5tD,KAAA7B,EAAAk4B,IAEAh4B,EAAAc,GAAAhB,EAAA0S,MAAA,QAGAxS,EAAAc,GAAA,GAIAhB,EAAAkB,SAEAlB,EAAAmtD,GAAAntD,GAAA0B,KAAAwrD,IACAvmD,EAAAC,KAAAD,MAAA3G,EAAA,IACA6G,EAAAD,KAAAC,MAAA7G,IAAAkB,OAAA,KAGAuuD,EAAAvuD,SACAuuD,EAAAtC,GAAAsC,GAAA/tD,KAAAwrD,IACAvmD,EAAAC,KAAAD,MAAA8oD,EAAA,IACA5oD,EAAAD,KAAAC,MAAA4oD,IAAAvuD,OAAA,KAGAyF,EAAA+xC,GAAAt8B,EAAAqyC,EAAA9nD,QACAE,EAAA6xC,GAAAt8B,EAAAqyC,EAAA5nD,QAGAF,MAAA0lD,IAAA6B,EAAAtV,QAAAhyB,KAAAvpB,MAAAqoD,GAAA/+C,EACAE,MAAAslD,IAAA+B,EAAArV,MAAAjyB,KAAAvpB,MAAAqoD,GAAA,EAAA7+C,EAGAuV,EAAAzV,IAAAC,KAAAD,MAAAE,GACAuV,EAAAvV,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAGAuV,EAAAuzC,YAAAvzC,EAAA+W,eACA/W,EAAAwzC,OAAA,GACAxzC,EAAAyzC,YAAA,CACA31D,KAAAu1D,EACAvvD,WACAF,WAIA48C,WAAA,WACA,IAOA57C,EAAAoa,EAAAo0C,EAPApzC,EAAAxhB,KACA+L,EAAAyV,EAAAzV,IACAE,EAAAuV,EAAAvV,IACA3K,EAAAkgB,EAAAlgB,QACAuyD,EAAAvyD,EAAAkyD,KACAqB,EAAA,GACAh7B,EAAA,GAGA,OAAAv4B,EAAAu4B,MAAAzb,QACA,WACAy2C,EAAArzC,EAAAyzC,YAAA31D,KACA,MACA,aACAu1D,EAAArzC,EAAAyzC,YAAA7vD,OACA,MACA,WACA,QACAyvD,EAAAlB,GAAAnyC,EAAAzV,EAAAE,EAAAuV,EAAA0zC,iBAAAnpD,IAaA,IAVA,UAAAzK,EAAAk1B,QAAAq+B,EAAAvuD,SACAyF,EAAA8oD,EAAA,GACA5oD,EAAA4oD,IAAAvuD,OAAA,IAIAyF,EAAA+xC,GAAAt8B,EAAAqyC,EAAA9nD,QACAE,EAAA6xC,GAAAt8B,EAAAqyC,EAAA5nD,QAGA7F,EAAA,EAAAoa,EAAAq0C,EAAAvuD,OAAuCF,EAAAoa,IAAUpa,GACjDwuD,EAAAC,EAAAzuD,KACA2F,GAAA6oD,GAAA3oD,GACA4tB,EAAA5yB,KAAA2tD,GAiBA,OAbApzC,EAAAzV,MACAyV,EAAAvV,MAGAuV,EAAA2zC,MAAAtB,EAAA/I,MAnVA,SAAArwC,EAAAof,EAAAi6B,EAAA/nD,EAAAE,GACA,IACA7F,EAAA0kD,EADAtqC,EAAA6xC,GAAA/rD,OAGA,IAAAF,EAAAoa,EAAA,EAAmBpa,GAAAisD,GAAAtwC,QAAA+xC,GAA6B1tD,IAEhD,GADA0kD,EAAAuH,GAAAjsD,GACAurD,GAAA7G,GAAA+G,QAAAp3C,EAAA84C,SAAAxV,KAAA9xC,EAAAF,EAAA++C,IAAAjxB,EAAAvzB,OACA,OAAAwkD,EAIA,OAAAuH,GAAAyB,EAAAzB,GAAAtwC,QAAA+xC,GAAA,GAwUAsB,CAAA5zC,EAAAqY,EAAAg6B,EAAAC,QAAAtyC,EAAAzV,IAAAyV,EAAAvV,KACAuV,EAAA6zC,WAAA3B,GAAAlyC,EAAA2zC,OACA3zC,EAAAwzC,OA5gBA,SAAAH,EAAA9oD,EAAAE,EAAAqpD,GACA,cAAAA,IAAAT,EAAAvuD,OACA,OACA,CAAIktD,KAAAznD,EAAAuhC,IAAA,GACJ,CAAIkmB,KAAAvnD,EAAAqhC,IAAA,IAIJ,IAEAlnC,EAAAoa,EAAAmZ,EAAAC,EAAAW,EAFAo4B,EAAA,GACAruB,EAAA,CAAAv4B,GAGA,IAAA3F,EAAA,EAAAoa,EAAAq0C,EAAAvuD,OAAsCF,EAAAoa,IAAUpa,GAChDwzB,EAAAi7B,EAAAzuD,IACA2F,GAAA6tB,EAAA3tB,GACAq4B,EAAAr9B,KAAA2yB,GAMA,IAFA0K,EAAAr9B,KAAAgF,GAEA7F,EAAA,EAAAoa,EAAA8jB,EAAAh+B,OAAiCF,EAAAoa,IAAUpa,EAC3Cm0B,EAAA+J,EAAAl+B,EAAA,GACAuzB,EAAA2K,EAAAl+B,EAAA,GACAwzB,EAAA0K,EAAAl+B,QAGAG,IAAAozB,QAAApzB,IAAAg0B,GAAAvuB,KAAAqM,OAAAkiB,EAAAZ,GAAA,KAAAC,GACA+4B,EAAA1rD,KAAA,CAAeusD,KAAA55B,EAAA0T,IAAAlnC,GAAAoa,EAAA,KAIf,OAAAmyC,EA4eA4C,CAAA/zC,EAAAyzC,YAAA31D,KAAAyM,EAAAE,EAAA3K,EAAAg0D,cACA9zC,EAAAg0C,SA/PA,SAAA7C,EAAA94B,EAAA9tB,EAAAE,EAAA3K,GACA,IAEA+yD,EAAAr7B,EAFA7O,EAAA,EACAoP,EAAA,EAsBA,OAnBAj4B,EAAAm2B,QAAAoC,EAAAvzB,SACAhF,EAAAkyD,KAAAznD,MACAsoD,EAAA3B,GAAAC,EAAA,OAAA94B,EAAA,UAEA1P,EADA,IAAA0P,EAAAvzB,OACA,EAAA+tD,GAEA3B,GAAAC,EAAA,OAAA94B,EAAA,UAAAw6B,GAAA,GAGA/yD,EAAAkyD,KAAAvnD,MACA+sB,EAAA05B,GAAAC,EAAA,OAAA94B,IAAAvzB,OAAA,UAEAizB,EADA,IAAAM,EAAAvzB,OACA0yB,GAEAA,EAAA05B,GAAAC,EAAA,OAAA94B,IAAAvzB,OAAA,eAKA,CAAS6jB,QAAAoP,OAuOTk8B,CAAAj0C,EAAAwzC,OAAAn7B,EAAA9tB,EAAAE,EAAA3K,GAEAA,EAAAu4B,MAAA1Z,SACA0Z,EAAA1Z,UAvOA,SAAA1F,EAAAhC,EAAAi9C,GACA,IACAtvD,EAAAoa,EAAArF,EAAAwlC,EADA9mB,EAAA,GAGA,IAAAzzB,EAAA,EAAAoa,EAAA/H,EAAAnS,OAAkCF,EAAAoa,IAAUpa,EAC5C+U,EAAA1C,EAAArS,GACAu6C,IAAA+U,GAAAv6C,KAAAV,EAAA84C,SAAAvV,QAAA7iC,EAAAu6C,GAEA77B,EAAA5yB,KAAA,CACAkU,QACAwlC,UAIA,OAAA9mB,EA4NA87B,CAAAn0C,EAAAqY,EAAArY,EAAA6zC,aAGA9f,iBAAA,SAAA12B,EAAAoO,GACA,IAAAzL,EAAAxhB,KACAszD,EAAA9xC,EAAA+xC,SACAj0D,EAAAkiB,EAAAuD,MAAAzlB,KACAu0D,EAAAryC,EAAAlgB,QAAAkyD,KACAnuD,EAAA/F,EAAA8F,QAAAyZ,EAAAvf,EAAA8F,OAAAkB,OAAAhH,EAAA8F,OAAAyZ,GAAA,GACA1D,EAAA7b,EAAAgG,SAAA2nB,GAAA3tB,KAAAuf,GAKA,OAHA0K,GAAAhK,SAAApE,KACA9V,EAAAmc,EAAA2Y,cAAAhf,IAEA04C,EAAA+B,cACAtC,EAAA1uD,OAAAwuD,GAAA5xC,EAAAnc,GAAAwuD,EAAA+B,eAEA,iBAAAvwD,EACAA,EAEAiuD,EAAA1uD,OAAAwuD,GAAA5xC,EAAAnc,GAAAwuD,EAAAc,eAAAkB,WAOAC,mBAAA,SAAAtC,EAAA30C,EAAAgb,EAAAj1B,GACA,IACA0uD,EADAtzD,KACAuzD,SACAjyD,EAFAtB,KAEAsB,QACAu8C,EAAAv8C,EAAAkyD,KAAAmB,eACAoB,EAAAlY,EAJA79C,KAIAm1D,OACAO,EALA11D,KAKAq1D,WACAW,EAAAnY,EAAA6X,GACAO,GAAA3C,EAAAtV,QAAAwV,EAAAkC,GACAQ,EAAA50D,EAAAu4B,MAAA8mB,MACAA,EAAAuV,EAAA5mB,SAAAomB,GAAAM,GAAAxC,IAAAyC,EACA5wD,EAAAiuD,EAAA1uD,OAAA4uD,EAAA5uD,IAAA+7C,EAAAqV,EAAAD,IACAnT,EAAAjC,EAAAuV,EAAA50D,EAAAu4B,MAAA6mB,MACAyV,EAAA7E,GAAA1O,EAAA/iC,SAAA+iC,EAAAC,cAEA,OAAAsT,IAAA9wD,EAAAwZ,EAAAgb,GAAAx0B,GAGA88C,qBAAA,SAAAtoB,GACA,IACAzzB,EAAAoa,EADApb,EAAA,GAGA,IAAAgB,EAAA,EAAAoa,EAAAqZ,EAAAvzB,OAAkCF,EAAAoa,IAAUpa,EAC5ChB,EAAA6B,KAAAjH,KAAA81D,mBAAAj8B,EAAAzzB,GAAA+U,MAAA/U,EAAAyzB,IAGA,OAAAz0B,GAMAgxD,kBAAA,SAAA5C,GACA,IAAAhyC,EAAAxhB,KACAq2D,EAAA70C,EAAAlgB,QAAAu4B,MAAA1Z,QACA6F,EAAAxE,EAAAuzC,YAAAvzC,EAAA7d,MAAA6d,EAAA3d,OACAsmB,EAAA3I,EAAAuzC,YAAAsB,EAAA70C,EAAA6D,MAAA7D,EAAA2D,KAAAkxC,EAAA70C,EAAA8D,OAAA9D,EAAA4D,IACAkoB,EAAAolB,GAAAlxC,EAAAwzC,OAAA,OAAAxB,EAAA,OACA/7B,EAAAzR,GAAAxE,EAAAg0C,SAAArrC,MAAAmjB,IAAA9rB,EAAAg0C,SAAArrC,MAAA,EAAA3I,EAAAg0C,SAAAj8B,KAEA,OAAA88B,EAAAlsC,EAAAsN,EAAAtN,EAAAsN,GAGAgC,iBAAA,SAAAte,EAAA0D,EAAAoO,GACA,IACAumC,EAAA,KAUA,QARAjtD,IAAAsY,QAAAtY,IAAA0mB,IACAumC,EAJAxzD,KAIAi1D,YAAA3vD,SAAA2nB,GAAApO,IAGA,OAAA20C,IACAA,EAAA1V,GARA99C,KAQAmb,IAGA,OAAAq4C,EACA,OAZAxzD,KAYAo2D,kBAAA5C,IAIAz5B,gBAAA,SAAAlb,GACA,IAAAgb,EAAA75B,KAAA85B,WACA,OAAAjb,GAAA,GAAAA,EAAAgb,EAAAvzB,OACAtG,KAAAo2D,kBAAAv8B,EAAAhb,GAAA1D,OACA,MAGAwpC,iBAAA,SAAAE,GACA,IAAArjC,EAAAxhB,KACAgmB,EAAAxE,EAAAuzC,YAAAvzC,EAAA7d,MAAA6d,EAAA3d,OACAsmB,EAAA3I,EAAAuzC,YAAAvzC,EAAA2D,KAAA3D,EAAA4D,IACAkoB,GAAAtnB,GAAA6+B,EAAA16B,GAAAnE,EAAA,IAAAxE,EAAAg0C,SAAArrC,MAAA,EAAA3I,EAAAg0C,SAAArrC,OAAA3I,EAAAg0C,SAAAj8B,IACAi6B,EAAAd,GAAAlxC,EAAAwzC,OAAA,MAAA1nB,EAAA,QAGA,OAAA9rB,EAAA+xC,SAAArV,QAAAsV,IAOA8C,cAAA,SAAAjxD,GACA,IACAkxD,EADAv2D,KACAsB,QAAAu4B,MACA28B,EAFAx2D,KAEAyD,IAAAyyC,YAAA7wC,GAAA1B,MACAmuB,EAAAvI,GAAA85B,UAAAkT,EAAAlW,aACA2C,EAAAh3C,KAAAsC,IAAAwjB,GACAqyB,EAAAn4C,KAAAuC,IAAAujB,GACA2kC,EAAAnF,GAAAiF,EAAAztC,SAAAP,GAAA1gB,OAAAsgB,iBAEA,OAAAquC,EAAAxT,EAAAyT,EAAAtS,GAMA+Q,iBAAA,SAAAwB,GACA,IAAAl1C,EAAAxhB,KAGA4E,EAAA4c,EAAAlgB,QAAAkyD,KAAAmB,eAAA/C,YACA+E,EAAAn1C,EAAAs0C,mBAAAY,EAAA,KAAA9xD,GACA4xD,EAAAh1C,EAAA80C,cAAAK,GACA/R,EAAApjC,EAAA+W,eAAA/W,EAAA7d,MAAA6d,EAAA3d,OACA+vD,EAAA5nD,KAAAiB,MAAA23C,EAAA4R,GAEA,OAAA5C,EAAA,EAAAA,EAAA,KAKAgD,GApWA,CACAz7B,SAAA,SASAm6B,aAAA,SASA9+B,OAAA,OAEAi+B,SAAA,GACAjB,KAAA,CACAC,QAAA,EACA7uD,QAAA,EACAkmD,MAAA,EACAzyC,OAAA,EACAw+C,eAAA,EACA1C,YAAA,EACAL,QAAA,cACAa,eAAA,IAEA96B,MAAA,CACA0mB,UAAA,EAUAniC,OAAA,OAEAuiC,MAAA,CACArR,SAAA,KAuTAklB,GAAAlL,UAAAsN,GAEA,IAAAhpC,GAAA,CACAkpC,SAAAtO,GACAlmC,OAAAopC,GACAxM,YAAAuN,GACAsK,aAAAxI,GACAiF,KAAAgB,IAGAwC,GAAA,CACAnB,SAAA,yBACAjE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAttD,IAAA,QACAutD,KAAA,KACAhsD,MAAA,WACAisD,QAAA,cACAC,KAAA,QAGA/T,GAAAC,MAAAH,SAAA,mBAAA/1C,EAAA,CACA6uD,IAAA,SAEApZ,QAAA,WACA,OAAAmZ,IAGAlZ,MAAA,SAAA3iC,EAAAvW,GAMA,MALA,iBAAAuW,GAAA,iBAAAvW,EACAuW,EAAA/S,EAAA+S,EAAAvW,GACGuW,aAAA/S,IACH+S,EAAA/S,EAAA+S,IAEAA,EAAAE,UAAAF,EAAA+7C,UAAA,MAGAtyD,OAAA,SAAA4uD,EAAA5uD,GACA,OAAAwD,EAAAorD,GAAA5uD,WAGAymC,IAAA,SAAAmoB,EAAA2D,EAAArM,GACA,OAAA1iD,EAAAorD,GAAAnoB,IAAA8rB,EAAArM,GAAAoM,WAGAnZ,KAAA,SAAA9xC,EAAAF,EAAA++C,GACA,OAAA1iD,EAAAmjB,SAAAnjB,EAAA6D,GAAA8xC,KAAA31C,EAAA2D,KAAAqrD,GAAAtM,IAGA9M,QAAA,SAAAwV,EAAA1I,EAAAoJ,GAEA,OADAV,EAAAprD,EAAAorD,GACA,YAAA1I,EACA0I,EAAAW,WAAAD,GAAAgD,UAEA1D,EAAAxV,QAAA8M,GAAAoM,WAGAjZ,MAAA,SAAAuV,EAAA1I,GACA,OAAA1iD,EAAAorD,GAAAvV,MAAA6M,GAAAoM,WAWAhZ,QAAA,SAAAsV,GACA,OAAAprD,EAAAorD,KAEC,IAEDjrC,GAAAT,KAAA,UACA6lB,QAAA,CACA0pB,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACA9pC,QAAA,SAAArP,GACA,IAAAS,EAAAT,EAAAkI,KACAvB,EAAA3G,EAAA2G,MACAwI,EAAAxI,EAAAiJ,eAAAnP,GACA24C,EAAAjqC,GAAAxI,EAAAoU,iBAAAta,GACAkV,EAAAyjC,GAAAjqC,EAAAE,QAAAuG,WAAA,GACA1tB,EAAAytB,EAAAztB,QAAA,EAEA,OAAAA,EAAA,SAAAogB,EAAAtgB,GACA,OAAAA,EAAAE,GAAAytB,EAAA3tB,GAAAyjB,OAAA,MADA,MAKA4tC,SAAA,SAAAr5C,GACA,IAAAq5C,EAAAr5C,EAAAq5C,SACAjrD,EAAAirD,IAAAjrD,EAAA,KACAC,EAAAgrD,IAAAhrD,EAAA,KAEA,gBAAAia,GACA,OACAla,EAAA,OAAAA,EAAAka,EAAAla,IACAC,EAAA,OAAAA,EAAAia,EAAAja,QAOA,SAAAirD,GAAAztB,EAAAprB,EAAA6R,GACA,IAEArS,EAFA6L,EAAA+f,EAAAngB,QAAA,GACAxD,EAAA4D,EAAA5D,KAOA,QAJA/f,IAAA+f,IACAA,IAAA4D,EAAAvkB,kBAGA,IAAA2gB,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAIA,GADAjI,EAAA7D,WAAA8L,EAAA,IACA9G,SAAAnB,IAAArS,KAAAiB,MAAAoR,OAKA,MAJA,MAAAiI,EAAA,UAAAA,EAAA,KACAjI,EAAAQ,EAAAR,KAGAA,IAAAQ,GAAAR,EAAA,GAAAA,GAAAqS,IAIArS,EAGA,OAAAiI,GAEA,aACA,cACA,UACA,YACA,WACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,UAIA,SAAAqxC,GAAAv5C,GACA,IAIAgY,EAJAlM,EAAA9L,EAAA6rB,GAAAngB,QAAA,GACArP,EAAA2D,EAAA6rB,GAAAvK,QAAA,GACApZ,EAAAlI,EAAAkI,KACAjI,EAAA,KAGA,GAAAmB,SAAA8G,GACA,YAmBA,GAZA,UAAAA,EACAjI,OAAA9X,IAAA2jB,EAAA0tC,YAAAn9C,EAAA6K,OAAA4E,EAAA0tC,YACE,QAAAtxC,EACFjI,OAAA9X,IAAA2jB,EAAA2tC,SAAAp9C,EAAA2K,IAAA8E,EAAA2tC,cACEtxD,IAAA2jB,EAAA4tC,UACFz5C,EAAA6L,EAAA4tC,UACEr9C,EAAAg2C,gBACFpyC,EAAA5D,EAAAg2C,kBACEh2C,EAAA6d,eACFja,EAAA5D,EAAA6d,gBAGAja,QAAA,CACA,QAAA9X,IAAA8X,EAAA7R,QAAAjG,IAAA8X,EAAA5R,EACA,OAAA4R,EAGA,GAAAkL,GAAA/J,SAAAnB,GAEA,OACA7R,GAFA4pB,EAAA3b,EAAA8d,gBAEAla,EAAA,KACA5R,EAAA2pB,EAAA,KAAA/X,GAKA,YAGA,SAAA05C,GAAA72C,EAAArC,EAAAy4C,GACA,IAGAj5C,EAHAD,EAAA8C,EAAArC,GACAyH,EAAAlI,EAAAkI,KACA0xC,EAAA,CAAAn5C,GAGA,IAAAy4C,EACA,OAAAhxC,EAGA,UAAAA,IAAA,IAAA0xC,EAAAj2C,QAAAuE,IAAA,CACA,IAAA9G,SAAA8G,GACA,OAAAA,EAIA,KADAjI,EAAA6C,EAAAoF,IAEA,SAGA,GAAAjI,EAAAm5C,QACA,OAAAlxC,EAGA0xC,EAAA/wD,KAAAqf,GACAA,EAAAjI,EAAAiI,KAGA,SAGA,SAAA2xC,GAAA75C,GACA,IAAAkI,EAAAlI,EAAAkI,KACAnI,EAAA,UAEA,WAAAmI,EACA,MAGA9G,SAAA8G,KACAnI,EAAA,YAGAo5C,GAAAp5C,GAAAC,IAGA,SAAA85C,GAAAxxC,GACA,OAAAA,MAAA8N,KAGA,SAAA2jC,GAAA10D,EAAA20D,EAAAC,EAAAC,EAAAC,GACA,IAAAnyD,EAEA,GAAAkyD,GAAAC,EAAA,CAMA,IADA90D,EAAA8hB,OAAA6yC,EAAA,GAAA5rD,EAAA4rD,EAAA,GAAA3rD,GACArG,EAAA,EAAYA,EAAAkyD,IAAUlyD,EACtBmjB,GAAAhmB,OAAA6iB,OAAA3iB,EAAA20D,EAAAhyD,EAAA,GAAAgyD,EAAAhyD,IAOA,IAHA3C,EAAA2iB,OAAAiyC,EAAAE,EAAA,GAAA/rD,EAAA6rD,EAAAE,EAAA,GAAA9rD,GAGArG,EAAAmyD,EAAA,EAAmBnyD,EAAA,IAAOA,EAC1BmjB,GAAAhmB,OAAA6iB,OAAA3iB,EAAA40D,EAAAjyD,GAAAiyD,EAAAjyD,EAAA,QAiDA,IAAAoyD,GAAA,CACAl1D,GAAA,SAEAm1D,oBAAA,SAAA1zC,EAAAzjB,GACA,IAGAisB,EAAAnnB,EAAA6jC,EAAA7rB,EAHAsS,GAAA3L,EAAAzlB,KAAAgG,UAAA,IAAAgB,OACAgxD,EAAAh2D,EAAAg2D,UACAp2C,EAAA,GAGA,IAAA9a,EAAA,EAAaA,EAAAsqB,IAAWtqB,EACxBmnB,EAAAxI,EAAAiJ,eAAA5nB,GACA6jC,EAAA1c,EAAAE,QACArP,EAAA,KAEA6rB,KAAAngB,QAAAmgB,aAAApa,GAAA9pB,OACAqY,EAAA,CACAo5C,QAAAzyC,EAAAoU,iBAAA/yB,GACAkgB,KAAAoxC,GAAAztB,EAAA7jC,EAAAsqB,GACA3L,QACAklB,OAIA1c,EAAAmrC,QAAAt6C,EACA8C,EAAAja,KAAAmX,GAGA,IAAAhY,EAAA,EAAaA,EAAAsqB,IAAWtqB,GACxBgY,EAAA8C,EAAA9a,MAKAgY,EAAAkI,KAAAyxC,GAAA72C,EAAA9a,EAAAkxD,GACAl5C,EAAAq5C,SAAAE,GAAAv5C,GACAA,EAAAu6C,OAAAV,GAAA75C,KAIAw6C,kBAAA,SAAA7zC,EAAAhc,GACA,IAAAwkB,EAAAxkB,EAAAwkB,KAAAmrC,QACA,GAAAnrC,EAAA,CAIA,IAAA9pB,EAAAshB,EAAAthB,IACAwmC,EAAA1c,EAAA0c,GACA7f,EAAA6f,EAAApgB,MACAkK,EAAAkW,EAAAjW,WAAA,GACA2kC,EAAAprC,EAAAorC,OACAlZ,EAAAr1B,EAAAzkB,iBAAA4iB,GAAA1gB,OAAAmgB,aAEA2wC,GAAAlZ,GAAA1rB,EAAAztB,SACAijB,GAAAhmB,OAAAqjB,SAAAnjB,EAAAshB,EAAAqQ,WAlGA,SAAA3xB,EAAAswB,EAAA4kC,EAAAvuC,EAAAq1B,EAAAoZ,GACA,IAMAzyD,EAAAoa,EAAA3B,EAAAi6C,EAAAC,EAAAC,EAAAC,EANAvoC,EAAAqD,EAAAztB,OACA6sD,EAAA/oC,EAAA0J,SACAskC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAKA,IAFA90D,EAAA0iB,YAEA/f,EAAA,EAAAoa,EAAAkQ,IAAAmoC,EAAqCzyD,EAAAoa,IAAUpa,EAE/C0yD,EAAA/kC,EADAlV,EAAAzY,EAAAsqB,GACA7G,MACAkvC,EAAAJ,EAAAG,EAAAj6C,EAAAuL,GACA4uC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAAnxD,KAAA6xD,GACAP,EAAAF,EAAApxD,KAAA8xD,IACGT,GAAAC,IACHpF,GAMA6F,GACAZ,EAAAnxD,KAAA6xD,GAEAG,GACAZ,EAAApxD,KAAA8xD,KATAZ,GAAA10D,EAAA20D,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAYAF,GAAA10D,EAAA20D,EAAAC,EAAAC,EAAAC,GAEA90D,EAAAgiB,YACAhiB,EAAAuvB,UAAAysB,EACAh8C,EAAA6iB,OAyDA4yC,CAAAz1D,EAAAswB,EAAA4kC,EAAAvuC,EAAAq1B,EAAAxV,EAAA9V,OACA5K,GAAAhmB,OAAAwjB,WAAAtjB,OAKA01D,GAAA5vC,GAAAtK,KACAm6C,GAAA7vC,GAAA7J,eAoFA,SAAA25C,GAAAC,EAAAxwC,GACA,OAAAwwC,EAAAC,eAAAD,EAAAE,SAAA1wC,EACAA,EACAwwC,EAAAE,SArFAjxC,GAAAT,KAAA,UACAyU,OAAA,CACA2E,SAAA,EACA/F,SAAA,MACAoK,WAAA,EACAplB,SAAA,EACArC,OAAA,IAGA8e,QAAA,SAAAC,EAAAC,GACA,IAAAje,EAAAie,EAAA7P,aACAwsC,EAAAz5D,KAAA+kB,MACAwI,EAAAksC,EAAAzrC,eAAAnP,GAGA0O,EAAA5D,OAAA,OAAA4D,EAAA5D,QAAA8vC,EAAAn6D,KAAAgG,SAAAuZ,GAAA8K,OAAA,KAGA8vC,EAAAjrC,UAGA+qB,QAAA,KACAmgB,QAAA,KAEAt0D,OAAA,CACAo0D,SAAA,GACArkC,QAAA,GAYAqH,eAAA,SAAAzX,GACA,IAAAzlB,EAAAylB,EAAAzlB,KACA,OAAAiqB,GAAAnK,QAAA9f,EAAAgG,UAAAhG,EAAAgG,SAAAL,IAAA,SAAAwoB,EAAArnB,GACA,OACAmB,KAAAkmB,EAAApoB,MACA2tB,UAAAzJ,GAAAnK,QAAAqO,EAAA9nB,iBAAA8nB,EAAA9nB,gBAAA,GAAA8nB,EAAA9nB,gBACAgkB,QAAA5E,EAAAoU,iBAAA/yB,GACAguB,QAAA3G,EAAA6F,eACAqmC,SAAAlsC,EAAA8F,WACAe,eAAA7G,EAAA+F,iBACAN,SAAAzF,EAAAgG,gBACAR,UAAAxF,EAAA5nB,YACAstB,YAAA1F,EAAA7nB,YACAkvB,WAAArH,EAAAqH,WAGA7H,aAAA7mB,IAEKpG,MAAA,MAKLq8B,eAAA,SAAAtX,GACA,IAAAxd,EAAA,GACAA,EAAAN,KAAA,cAAA8d,EAAAzhB,GAAA,aACA,QAAA8C,EAAA,EAAiBA,EAAA2e,EAAAzlB,KAAAgG,SAAAgB,OAAgCF,IACjDmB,EAAAN,KAAA,qCAAA8d,EAAAzlB,KAAAgG,SAAAc,GAAAT,gBAAA,aACAof,EAAAzlB,KAAAgG,SAAAc,GAAAf,OACAkC,EAAAN,KAAA8d,EAAAzlB,KAAAgG,SAAAc,GAAAf,OAEAkC,EAAAN,KAAA,SAGA,OADAM,EAAAN,KAAA,SACAM,EAAA+0B,KAAA,OAmBA,IAAAs9B,GAAA/uC,GAAAzJ,OAAA,CAEArhB,WAAA,SAAA0sC,GACAljB,GAAAnI,OAAAphB,KAAAysC,GAGAzsC,KAAA65D,eAAA,GAKA75D,KAAA85D,aAAA,KAGA95D,KAAA+5D,cAAA,GAOA7Y,aAAAiY,GACA3qC,OAAA,SAAA2yB,EAAAC,EAAAC,GACA,IAAA7/B,EAAAxhB,KA0BA,OAvBAwhB,EAAA0/B,eAGA1/B,EAAA2/B,WACA3/B,EAAA4/B,YACA5/B,EAAA6/B,UAGA7/B,EAAAigC,sBACAjgC,EAAAkgC,gBACAlgC,EAAAmgC,qBAEAngC,EAAAw4C,oBACAx4C,EAAAy4C,cACAz4C,EAAA04C,mBAGA14C,EAAAghC,YACAhhC,EAAAihC,MACAjhC,EAAAkhC,WAEAlhC,EAAAmhC,cAEAnhC,EAAAic,SAEAklB,YAAAwW,GAIA1X,oBAAA0X,GACAzX,cAAA,WACA,IAAAlgC,EAAAxhB,KAEAwhB,EAAA+W,gBAEA/W,EAAA7d,MAAA6d,EAAA2/B,SACA3/B,EAAA2D,KAAA,EACA3D,EAAA6D,MAAA7D,EAAA7d,QAEA6d,EAAA3d,OAAA2d,EAAA4/B,UAGA5/B,EAAA4D,IAAA,EACA5D,EAAA8D,OAAA9D,EAAA3d,QAIA2d,EAAAq/B,YAAA,EACAr/B,EAAAs/B,WAAA,EACAt/B,EAAAu/B,aAAA,EACAv/B,EAAAw/B,cAAA,EAGAx/B,EAAAic,QAAA,CACA95B,MAAA,EACAE,OAAA,IAGA89C,mBAAAwX,GAIAa,kBAAAb,GACAc,YAAA,WACA,IAAAz4C,EAAAxhB,KACAs5D,EAAA93C,EAAAlgB,QAAA8D,QAAA,GACA+0D,EAAA5wC,GAAA1J,SAAAy5C,EAAA98B,eAAA,CAAAhb,EAAAuD,OAAAvD,IAAA,GAEA83C,EAAA54B,SACAy5B,IAAAz5B,OAAA,SAAAze,GACA,OAAAq3C,EAAA54B,OAAAze,EAAAT,EAAAuD,MAAAzlB,SAIAkiB,EAAAlgB,QAAA6e,SACAg6C,EAAAh6C,UAGAqB,EAAA24C,eAEAD,iBAAAf,GAIA3W,UAAA2W,GACA1W,IAAA,WACA,IAAAjhC,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACAg4D,EAAAx4D,EAAAsE,OACA87B,EAAApgC,EAAAogC,QAEAz9B,EAAA+d,EAAA/d,IAEA22D,EAAA7wC,GAAAjoB,QAAAsnB,WAAA0wC,GACAxwC,EAAAsxC,EAAAp0C,KAGAq0C,EAAA74C,EAAAq4C,eAAA,GAEAp8B,EAAAjc,EAAAic,QACAlF,EAAA/W,EAAA+W,eAWA,GATAA,GACAkF,EAAA95B,MAAA6d,EAAA2/B,SACA1jB,EAAA55B,OAAAq9B,EAAA,OAEAzD,EAAA95B,MAAAu9B,EAAA,KACAzD,EAAA55B,OAAA2d,EAAA4/B,WAIAlgB,EAGA,GAFAz9B,EAAAslB,KAAAqxC,EAAAhhD,OAEAmf,EAAA,CAIA,IAAA+hC,EAAA94C,EAAA84C,WAAA,IACAC,EAAA,EAEA92D,EAAAi0C,UAAA,OACAj0C,EAAAk0C,aAAA,MAEApuB,GAAAtJ,KAAAuB,EAAA24C,YAAA,SAAAr9B,EAAA12B,GACA,IAAAozD,EAAAH,GAAAC,EAAAxwC,GACAnlB,EAAA61D,EAAA1wC,EAAA,EAAArlB,EAAAyyC,YAAApZ,EAAAv1B,MAAA5D,OAEA,IAAAyC,GAAAk0D,IAAAh0D,OAAA,GAAA3C,EAAA21D,EAAAnkC,QAAAsI,EAAA95B,SACA42D,GAAAzxC,EAAAwwC,EAAAnkC,QACAmlC,IAAAh0D,QAAAF,EAAA,QAAAkzD,EAAAnkC,SAIAklC,EAAAj0D,GAAA,CACA+e,KAAA,EACAC,IAAA,EACAzhB,QACAE,OAAAilB,GAGAwxC,IAAAh0D,OAAA,IAAA3C,EAAA21D,EAAAnkC,UAGAsI,EAAA55B,QAAA02D,MAEI,CACJ,IAAAC,EAAAlB,EAAAnkC,QACAslC,EAAAj5C,EAAAi5C,aAAA,GACAC,EAAApB,EAAAnkC,QACAwlC,EAAA,EACAC,EAAA,EACAC,EAAA/xC,EAAA0xC,EAEAjxC,GAAAtJ,KAAAuB,EAAA24C,YAAA,SAAAr9B,EAAA12B,GACA,IAAAozD,EAAAH,GAAAC,EAAAxwC,GACAgyC,EAAAtB,EAAA1wC,EAAA,EAAArlB,EAAAyyC,YAAApZ,EAAAv1B,MAAA5D,MAGAyC,EAAA,GAAAw0D,EAAAC,EAAAp9B,EAAA55B,OAAA22D,IACAE,GAAAC,EAAArB,EAAAnkC,QACAslC,EAAAxzD,KAAA0zD,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAA3uD,KAAAC,IAAA0uD,EAAAG,GACAF,GAAAC,EAGAR,EAAAj0D,GAAA,CACA+e,KAAA,EACAC,IAAA,EACAzhB,MAAAm3D,EACAj3D,OAAAilB,KAIA4xC,GAAAC,EACAF,EAAAxzD,KAAA0zD,GACAl9B,EAAA95B,OAAA+2D,EAIAl5C,EAAA7d,MAAA85B,EAAA95B,MACA6d,EAAA3d,OAAA45B,EAAA55B,QAEA6+C,SAAAyW,GAGA5gC,aAAA,WACA,cAAAv4B,KAAAsB,QAAA65B,UAAA,WAAAn7B,KAAAsB,QAAA65B,UAIArL,KAAA,WACA,IAAAtO,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACAg4D,EAAAx4D,EAAAsE,OACAyjB,EAAAN,GAAA1gB,OACAmgB,EAAAa,EAAAb,aACA+yC,EAAAlyC,EAAAgH,SAAAwD,KACA2nC,EAAAx5C,EAAA7d,MACA22D,EAAA94C,EAAA84C,WAEA,GAAAx5D,EAAAogC,QAAA,CACA,IAIA+5B,EAJAx3D,EAAA+d,EAAA/d,IACA4iD,EAAA+S,GAAAE,EAAAjT,UAAAx9B,EAAAZ,kBACAmyC,EAAA7wC,GAAAjoB,QAAAsnB,WAAA0wC,GACAxwC,EAAAsxC,EAAAp0C,KAIAviB,EAAAi0C,UAAA,OACAj0C,EAAAk0C,aAAA,SACAl0C,EAAAwvB,UAAA,GACAxvB,EAAA0vB,YAAAkzB,EACA5iD,EAAAuvB,UAAAqzB,EACA5iD,EAAAslB,KAAAqxC,EAAAhhD,OAEA,IAAAogD,EAAAH,GAAAC,EAAAxwC,GACAuxC,EAAA74C,EAAAq4C,eA6DAthC,EAAA/W,EAAA+W,eAEA0iC,EADA1iC,EACA,CACA/rB,EAAAgV,EAAA2D,MAAA61C,EAAAV,EAAA,MAAAhB,EAAAnkC,QACA1oB,EAAA+U,EAAA4D,IAAAk0C,EAAAnkC,QACA9B,KAAA,GAGA,CACA7mB,EAAAgV,EAAA2D,KAAAm0C,EAAAnkC,QACA1oB,EAAA+U,EAAA4D,IAAAk0C,EAAAnkC,QACA9B,KAAA,GAIA,IAAAwnC,EAAA/xC,EAAAwwC,EAAAnkC,QACA5L,GAAAtJ,KAAAuB,EAAA24C,YAAA,SAAAr9B,EAAA12B,GACA,IAAA80D,EAAAz3D,EAAAyyC,YAAApZ,EAAAv1B,MAAA5D,MACAA,EAAA61D,EAAA1wC,EAAA,EAAAoyC,EACA1uD,EAAAyuD,EAAAzuD,EACAC,EAAAwuD,EAAAxuD,EAKA8rB,EACAnyB,EAAA,GAAAoG,EAAA7I,EAAA21D,EAAAnkC,QAAA3T,EAAA2D,KAAA3D,EAAAic,QAAA95B,QACA8I,EAAAwuD,EAAAxuD,GAAAouD,EACAI,EAAA5nC,OACA7mB,EAAAyuD,EAAAzuD,EAAAgV,EAAA2D,MAAA61C,EAAAV,EAAAW,EAAA5nC,OAAA,EAAAimC,EAAAnkC,SAEK/uB,EAAA,GAAAqG,EAAAouD,EAAAr5C,EAAA4D,IAAA5D,EAAAic,QAAA55B,SACL2I,EAAAyuD,EAAAzuD,IAAAgV,EAAAi5C,aAAAQ,EAAA5nC,MAAAimC,EAAAnkC,QACA1oB,EAAAwuD,EAAAxuD,EAAA+U,EAAA4D,IAAAk0C,EAAAnkC,QACA8lC,EAAA5nC,QA5FA,SAAA7mB,EAAAC,EAAAqwB,GACA,KAAAt7B,MAAAg4D,OAAA,IAKA/1D,EAAAojB,OAEA,IAAAoM,EAAAmmC,GAAAt8B,EAAA7J,UAAA8nC,EAAAl1D,aAaA,GAZApC,EAAAuvB,UAAAomC,GAAAt8B,EAAA9J,UAAAhL,GACAvkB,EAAA2wB,QAAAglC,GAAAt8B,EAAA1I,QAAA2mC,EAAAznC,gBACA7vB,EAAA6wB,eAAA8kC,GAAAt8B,EAAAxI,eAAAymC,EAAAvnC,kBACA/vB,EAAAyvB,SAAAkmC,GAAAt8B,EAAA5J,SAAA6nC,EAAAtnC,iBACAhwB,EAAAwvB,YACAxvB,EAAA0vB,YAAAimC,GAAAt8B,EAAA3J,YAAAnL,GAEAvkB,EAAA4wB,aAEA5wB,EAAA4wB,YAAA+kC,GAAAt8B,EAAA68B,SAAAoB,EAAAxnC,aAGAzyB,EAAAsE,QAAAtE,EAAAsE,OAAAm0D,cAAA,CAGA,IAAAr0C,EAAAs0C,EAAAxtD,KAAAmvD,MAAA,EACAx8B,EAAAnyB,EAAAgtD,EAAA,EACA56B,EAAAnyB,EAAAqc,EAAA,EAGAS,GAAAhmB,OAAAoiB,UAAAliB,EAAAq5B,EAAAhI,WAAA5P,EAAAyZ,EAAAC,QAGA,IAAA3L,GACAxvB,EAAA00C,WAAA3rC,EAAAC,EAAA+sD,EAAA1wC,GAEArlB,EAAAuzB,SAAAxqB,EAAAC,EAAA+sD,EAAA1wC,GAGArlB,EAAAujB,WAyDAo0C,CAAA5uD,EAAAC,EAAAqwB,GAEAu9B,EAAAj0D,GAAA+e,KAAA3Y,EACA6tD,EAAAj0D,GAAAgf,IAAA3Y,EA1DA,SAAAD,EAAAC,EAAAqwB,EAAAo+B,GACA,IAAAG,EAAAvyC,EAAA,EACAwyC,EAAA9B,EAAA6B,EAAA7uD,EACA+uD,EAAA9uD,EAAA4uD,EAEA53D,EAAAm0C,SAAA9a,EAAAv1B,KAAA+zD,EAAAC,GAEAz+B,EAAAnT,SAEAlmB,EAAA0iB,YACA1iB,EAAAwvB,UAAA,EACAxvB,EAAA8hB,OAAA+1C,EAAAC,GACA93D,EAAA2iB,OAAAk1C,EAAAJ,EAAAK,GACA93D,EAAA8iB,UAgDAqxB,CAAAprC,EAAAC,EAAAqwB,EAAAo+B,GAEA3iC,EACA0iC,EAAAzuD,GAAA7I,EAAA21D,EAAAnkC,QAEA8lC,EAAAxuD,GAAAouD,MAUAW,iBAAA,SAAAhvD,EAAAC,GACA,IACArG,EAAAq1D,EAAAC,EADAl6C,EAAAxhB,KAGA,GAAAwM,GAAAgV,EAAA2D,MAAA3Y,GAAAgV,EAAA6D,OAAA5Y,GAAA+U,EAAA4D,KAAA3Y,GAAA+U,EAAA8D,OAGA,IADAo2C,EAAAl6C,EAAAq4C,eACAzzD,EAAA,EAAcA,EAAAs1D,EAAAp1D,SAAeF,EAG7B,GAFAq1D,EAAAC,EAAAt1D,GAEAoG,GAAAivD,EAAAt2C,MAAA3Y,GAAAivD,EAAAt2C,KAAAs2C,EAAA93D,OAAA8I,GAAAgvD,EAAAr2C,KAAA3Y,GAAAgvD,EAAAr2C,IAAAq2C,EAAA53D,OAEA,OAAA2d,EAAA24C,YAAA/zD,GAKA,aAQAqyC,YAAA,SAAA5b,GACA,IAGA8+B,EAHAn6C,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACA6c,EAAA,YAAA0e,EAAA1e,KAAA,QAAA0e,EAAA1e,KAGA,iBAAAA,GACA,IAAArd,EAAAy4C,UAAAz4C,EAAA44D,QACA,WAEG,cAAAv7C,EAKH,OAJA,IAAArd,EAAA87B,QACA,OAOA++B,EAAAn6C,EAAAg6C,iBAAA3+B,EAAArwB,EAAAqwB,EAAApwB,GAEA,UAAA0R,EACAw9C,GAAA76D,EAAA87B,SAEA97B,EAAA87B,QAAA7kB,KAAAyJ,EAAAqb,EAAAsG,OAAAw4B,IAGA76D,EAAA44D,SAAAiC,IAAAn6C,EAAAs4C,eACAt4C,EAAAs4C,cACAh5D,EAAA44D,QAAA3hD,KAAAyJ,EAAAqb,EAAAsG,OAAA3hB,EAAAs4C,cAEAt4C,EAAAs4C,aAAA6B,GAGA76D,EAAAy4C,SAAAoiB,GAEA76D,EAAAy4C,QAAAxhC,KAAAyJ,EAAAqb,EAAAsG,OAAAw4B,OAMA,SAAAC,GAAA72C,EAAA82C,GACA,IAAAt/B,EAAA,IAAAq9B,GAAA,CACAn2D,IAAAshB,EAAAthB,IACAnC,QAAAu6D,EACA92C,UAGAsgB,GAAAK,UAAA3gB,EAAAwX,EAAAs/B,GACAx2B,GAAAC,OAAAvgB,EAAAwX,GACAxX,EAAAwX,SAGA,IAAAu/B,GAAA,CACAx4D,GAAA,SASAy4D,SAAAnC,GAEAoC,WAAA,SAAAj3C,GACA,IAAA82C,EAAA92C,EAAAzjB,QAAAi7B,OAEAs/B,GACAD,GAAA72C,EAAA82C,IAIA3a,aAAA,SAAAn8B,GACA,IAAA82C,EAAA92C,EAAAzjB,QAAAi7B,OACAA,EAAAxX,EAAAwX,OAEAs/B,GACAtyC,GAAAtI,QAAA46C,EAAAtzC,GAAA1gB,OAAA00B,QAEAA,GACA8I,GAAAK,UAAA3gB,EAAAwX,EAAAs/B,GACAt/B,EAAAj7B,QAAAu6D,GAEAD,GAAA72C,EAAA82C,IAEGt/B,IACH8I,GAAAG,UAAAzgB,EAAAwX,UACAxX,EAAAwX,SAIA0/B,WAAA,SAAAl3C,EAAA8X,GACA,IAAAN,EAAAxX,EAAAwX,OACAA,GACAA,EAAAkc,YAAA5b,KAKAq/B,GAAA3yC,GAAAtK,KAEAsJ,GAAAT,KAAA,UACAwT,MAAA,CACA4F,SAAA,EACA/X,UAAA,OACAoc,WAAA,EACApQ,QAAA,GACAgG,SAAA,MACA5zB,KAAA,GACAuW,OAAA,OAOA,IAAAq+C,GAAAtxC,GAAAzJ,OAAA,CACArhB,WAAA,SAAA0sC,GAEAljB,GAAAnI,OADAphB,KACAysC,GADAzsC,KAIA65D,eAAA,IAKA3Y,aAAAgb,GACA1tC,OAAA,SAAA2yB,EAAAC,EAAAC,GACA,IAAA7/B,EAAAxhB,KA0BA,OAvBAwhB,EAAA0/B,eAGA1/B,EAAA2/B,WACA3/B,EAAA4/B,YACA5/B,EAAA6/B,UAGA7/B,EAAAigC,sBACAjgC,EAAAkgC,gBACAlgC,EAAAmgC,qBAEAngC,EAAAw4C,oBACAx4C,EAAAy4C,cACAz4C,EAAA04C,mBAGA14C,EAAAghC,YACAhhC,EAAAihC,MACAjhC,EAAAkhC,WAEAlhC,EAAAmhC,cAEAnhC,EAAAic,SAGAklB,YAAAuZ,GAIAza,oBAAAya,GACAxa,cAAA,WACA,IAAAlgC,EAAAxhB,KAEAwhB,EAAA+W,gBAEA/W,EAAA7d,MAAA6d,EAAA2/B,SACA3/B,EAAA2D,KAAA,EACA3D,EAAA6D,MAAA7D,EAAA7d,QAEA6d,EAAA3d,OAAA2d,EAAA4/B,UAGA5/B,EAAA4D,IAAA,EACA5D,EAAA8D,OAAA9D,EAAA3d,QAIA2d,EAAAq/B,YAAA,EACAr/B,EAAAs/B,WAAA,EACAt/B,EAAAu/B,aAAA,EACAv/B,EAAAw/B,cAAA,EAGAx/B,EAAAic,QAAA,CACA95B,MAAA,EACAE,OAAA,IAGA89C,mBAAAua,GAIAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAIA1Z,UAAA0Z,GACAzZ,IAAA,WACA,IAAAjhC,EAAAxhB,KACAc,EAAA0gB,EAAAlgB,QACA4/B,EAAApgC,EAAAogC,QACAzD,EAAAjc,EAAAic,QACA2+B,EAAA7yC,GAAAnK,QAAAte,EAAAyG,MAAAzG,EAAAyG,KAAAjB,OAAA,EACA+1D,EAAA9yC,GAAAjoB,QAAAsnB,WAAA9nB,GACAstD,EAAAltB,EAAAk7B,EAAAC,EAAAnzC,WAAA,EAAApoB,EAAAq0B,QAAA,EAEA3T,EAAA+W,gBACAkF,EAAA95B,MAAA6d,EAAA2/B,SACA1jB,EAAA55B,OAAAuqD,IAEA3wB,EAAA95B,MAAAyqD,EACA3wB,EAAA55B,OAAA2d,EAAA4/B,WAGA5/B,EAAA7d,MAAA85B,EAAA95B,MACA6d,EAAA3d,OAAA45B,EAAA55B,QAGA6+C,SAAAwZ,GAGA3jC,aAAA,WACA,IAAA+U,EAAAttC,KAAAsB,QAAA65B,SACA,cAAAmS,GAAA,WAAAA,GAIAxd,KAAA,WACA,IAAAtO,EAAAxhB,KACAyD,EAAA+d,EAAA/d,IACA3C,EAAA0gB,EAAAlgB,QAEA,GAAAR,EAAAogC,QAAA,CACA,IAQAigB,EAAAmb,EAAAC,EARAF,EAAA9yC,GAAAjoB,QAAAsnB,WAAA9nB,GACAooB,EAAAmzC,EAAAnzC,WACAuO,EAAAvO,EAAA,EAAApoB,EAAAq0B,QACAtP,EAAA,EACAT,EAAA5D,EAAA4D,IACAD,EAAA3D,EAAA2D,KACAG,EAAA9D,EAAA8D,OACAD,EAAA7D,EAAA6D,MAGA5hB,EAAAuvB,UAAAzJ,GAAA7J,eAAA5e,EAAAulD,UAAA99B,GAAA1gB,OAAAogB,kBACAxkB,EAAAslB,KAAAszC,EAAAjjD,OAGAoI,EAAA+W,gBACA+jC,EAAAn3C,GAAAE,EAAAF,GAAA,EACAo3C,EAAAn3C,EAAAqS,EACA0pB,EAAA97B,EAAAF,IAEAm3C,EAAA,SAAAx7D,EAAAq6B,SAAAhW,EAAAsS,EAAApS,EAAAoS,EACA8kC,EAAAn3C,GAAAE,EAAAF,GAAA,EACA+7B,EAAA77B,EAAAF,EACAS,EAAA7Z,KAAAmC,IAAA,SAAArN,EAAAq6B,UAAA,QAGA13B,EAAAojB,OACApjB,EAAAwkD,UAAAqU,EAAAC,GACA94D,EAAAia,OAAAmI,GACApiB,EAAAi0C,UAAA,SACAj0C,EAAAk0C,aAAA,SAEA,IAAApwC,EAAAzG,EAAAyG,KACA,GAAAgiB,GAAAnK,QAAA7X,GAEA,IADA,IAAAkF,EAAA,EACArG,EAAA,EAAmBA,EAAAmB,EAAAjB,SAAiBF,EACpC3C,EAAAm0C,SAAArwC,EAAAnB,GAAA,EAAAqG,EAAA00C,GACA10C,GAAAyc,OAGAzlB,EAAAm0C,SAAArwC,EAAA,IAAA45C,GAGA19C,EAAAujB,cAKA,SAAAw1C,GAAAz3C,EAAA03C,GACA,IAAAnhC,EAAA,IAAA6gC,GAAA,CACA14D,IAAAshB,EAAAthB,IACAnC,QAAAm7D,EACA13C,UAGAsgB,GAAAK,UAAA3gB,EAAAuW,EAAAmhC,GACAp3B,GAAAC,OAAAvgB,EAAAuW,GACAvW,EAAA23C,WAAAphC,EAGA,IAwCAqS,GAAA,GACA0pB,GAAAmB,GACAj8B,GAAAu/B,GACAxgC,GA3CA,CACAh4B,GAAA,QASAy4D,SAAAI,GAEAH,WAAA,SAAAj3C,GACA,IAAA03C,EAAA13C,EAAAzjB,QAAAg6B,MAEAmhC,GACAD,GAAAz3C,EAAA03C,IAIAvb,aAAA,SAAAn8B,GACA,IAAA03C,EAAA13C,EAAAzjB,QAAAg6B,MACAohC,EAAA33C,EAAA23C,WAEAD,GACAlzC,GAAAtI,QAAAw7C,EAAAl0C,GAAA1gB,OAAAyzB,OAEAohC,GACAr3B,GAAAK,UAAA3gB,EAAA23C,EAAAD,GACAC,EAAAp7D,QAAAm7D,GAEAD,GAAAz3C,EAAA03C,IAEGC,IACHr3B,GAAAG,UAAAzgB,EAAA23C,UACA33C,EAAA23C,cAmDA,QAAAvwD,MA1CAwhC,GAAA0pB,UACA1pB,GAAApR,UACAoR,GAAArS,SAOAgiB,GAAAt+B,QAAAuK,GAtlKA,WAiZA,SAAAozC,EAAAC,EAAAlzB,EAAAmzB,GACA,IAAAC,EAYA,MAXA,iBAAAF,GACAE,EAAAviD,SAAAqiD,EAAA,KAEA,IAAAA,EAAA76C,QAAA,OAEA+6C,IAAA,IAAApzB,EAAAmB,WAAAgyB,KAGAC,EAAAF,EAGAE,EAOA,SAAAC,EAAA5hD,GACA,OAAAA,SAAA,SAAAA,EAUA,SAAA6hD,EAAAC,EAAAC,EAAAC,GACA,IAAA/yC,EAAAnpB,SAAAm8D,YACAvyB,EAAAthB,GAAA8zC,eAAAJ,GACAK,EAAAlzC,EAAAmzC,iBAAAN,GAAAC,GACAM,EAAApzC,EAAAmzC,iBAAA1yB,GAAAqyB,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAl+C,OAAAmkB,kBAEA,OAAA65B,GAAAC,EACA1xD,KAAAD,IACA0xD,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EACAD,EAAAf,EAAAa,EAAA3yB,EAAAsyB,GAAAQ,GAGA,OA3bAp0C,GAAAub,MAAA,SAAA84B,EAAAC,GACA,GAAAt0C,GAAAnK,QAAAw+C,IAAAhmD,MAAAC,UAAA6oB,OACA,OAAAk9B,EAAAl9B,OAAAm9B,GAEA,IAAAC,EAAA,GAQA,OANAv0C,GAAAtJ,KAAA29C,EAAA,SAAA37C,GACA47C,EAAA57C,IACA67C,EAAA72D,KAAAgb,KAIA67C,GAEAv0C,GAAA6C,UAAAxU,MAAAC,UAAAuU,UACA,SAAApK,EAAAnC,EAAAkI,GACA,OAAA/F,EAAAoK,UAAAvM,EAAAkI,IAEA,SAAA/F,EAAAnC,EAAAkI,GACAA,OAAAxhB,IAAAwhB,EAAA/F,EAAA+F,EACA,QAAA3hB,EAAA,EAAAoa,EAAAwB,EAAA1b,OAAuCF,EAAAoa,IAAUpa,EACjD,GAAAyZ,EAAA9H,KAAAgQ,EAAA/F,EAAA5b,KAAA4b,GACA,OAAA5b,EAGA,UAEAmjB,GAAAge,cAAA,SAAAw2B,EAAAF,EAAAG,GAEAz0C,GAAApK,cAAA6+C,KACAA,GAAA,GAEA,QAAA53D,EAAA43D,EAAA,EAA8B53D,EAAA23D,EAAAz3D,OAA0BF,IAAA,CACxD,IAAA63D,EAAAF,EAAA33D,GACA,GAAAy3D,EAAAI,GACA,OAAAA,IAIA10C,GAAA20C,kBAAA,SAAAH,EAAAF,EAAAG,GAEAz0C,GAAApK,cAAA6+C,KACAA,EAAAD,EAAAz3D,QAEA,QAAAF,EAAA43D,EAAA,EAA8B53D,GAAA,EAAQA,IAAA,CACtC,IAAA63D,EAAAF,EAAA33D,GACA,GAAAy3D,EAAAI,GACA,OAAAA,IAMA10C,GAAAqB,SAAA,SAAArd,GACA,OAAA/L,MAAAgZ,WAAAjN,KAAAiS,SAAAjS,IAEAgc,GAAA+hC,aAAA,SAAA9+C,EAAAC,EAAA0xD,GACA,OAAAnyD,KAAA4oB,IAAApoB,EAAAC,GAAA0xD,GAEA50C,GAAA8hC,YAAA,SAAA7+C,EAAA2xD,GACA,IAAAC,EAAApyD,KAAAqM,MAAA7L,GACA,OAAA4xD,EAAAD,EAAA3xD,GAAA4xD,EAAAD,EAAA3xD,GAEA+c,GAAAtd,IAAA,SAAA+V,GACA,OAAAA,EAAA6zB,OAAA,SAAA5pC,EAAAkP,GACA,OAAA3Z,MAAA2Z,GAGAlP,EAFAD,KAAAC,MAAAkP,IAGGsE,OAAAgvC,oBAEHllC,GAAAxd,IAAA,SAAAiW,GACA,OAAAA,EAAA6zB,OAAA,SAAA9pC,EAAAoP,GACA,OAAA3Z,MAAA2Z,GAGApP,EAFAC,KAAAD,MAAAoP,IAGGsE,OAAAmkB,oBAEHra,GAAAmgC,KAAA19C,KAAA09C,KACA,SAAAl9C,GACA,OAAAR,KAAA09C,KAAAl9C,IAEA,SAAAA,GAEA,WADAA,OACAhL,MAAAgL,GACAA,EAEAA,EAAA,QAEA+c,GAAAo1B,MAAA3yC,KAAA2yC,MACA,SAAAnyC,GACA,OAAAR,KAAA2yC,MAAAnyC,IAEA,SAAAA,GACA,IAAA6xD,EAAAryD,KAAAsyD,IAAA9xD,GAAAR,KAAAuyD,OAGAC,EAAAxyD,KAAAqM,MAAAgmD,GACAI,EAAAjyD,IAAAR,KAAAO,IAAA,GAAAiyD,GAEA,OAAAC,EAAAD,EAAAH,GAEA90C,GAAA85B,UAAA,SAAA1lC,GACA,OAAAA,GAAA3R,KAAAmC,GAAA,MAEAob,GAAA0lC,UAAA,SAAAyP,GACA,OAAAA,GAAA,IAAA1yD,KAAAmC,KAUAob,GAAA6hC,eAAA,SAAA5+C,GACA,GAAA+c,GAAA/J,SAAAhT,GAAA,CAKA,IAFA,IAAAqwB,EAAA,EACA1vB,EAAA,EACAnB,KAAAqM,MAAA7L,EAAAqwB,OAAArwB,GACAqwB,GAAA,GACA1vB,IAEA,OAAAA,IAIAoc,GAAAsI,kBAAA,SAAA8sC,EAAAC,GACA,IAAAC,EAAAD,EAAApyD,EAAAmyD,EAAAnyD,EACAsyD,EAAAF,EAAAnyD,EAAAkyD,EAAAlyD,EACAsyD,EAAA/yD,KAAAoC,KAAAywD,IAAAC,KAEAhtC,EAAA9lB,KAAAkC,MAAA4wD,EAAAD,GAMA,OAJA/sC,GAAA,GAAA9lB,KAAAmC,KACA2jB,GAAA,EAAA9lB,KAAAmC,IAGA,CACA2jB,QACAC,SAAAgtC,IAGAx1C,GAAAsoB,sBAAA,SAAA5N,EAAAC,GACA,OAAAl4B,KAAAoC,KAAApC,KAAAO,IAAA23B,EAAA13B,EAAAy3B,EAAAz3B,EAAA,GAAAR,KAAAO,IAAA23B,EAAAz3B,EAAAw3B,EAAAx3B,EAAA,KASA8c,GAAAy1C,WAAA,SAAAC,GACA,OAAAA,EAAA,WAWA11C,GAAAu9B,YAAA,SAAA/hC,EAAA8/B,EAAAlhD,GACA,IAAAo2C,EAAAh1B,EAAAm6C,wBACAC,EAAAx7D,EAAA,EACA,OAAAqI,KAAAqM,OAAAwsC,EAAAsa,GAAAplB,KAAAolB,GAGA51C,GAAAsX,YAAA,SAAAu+B,EAAAC,EAAAC,EAAAjyD,GAMA,IAAA4Z,EAAAm4C,EAAA5qC,KAAA6qC,EAAAD,EACAxrC,EAAAyrC,EACA9kC,EAAA+kC,EAAA9qC,KAAA6qC,EAAAC,EAEAC,EAAAvzD,KAAAoC,KAAApC,KAAAO,IAAAqnB,EAAApnB,EAAAya,EAAAza,EAAA,GAAAR,KAAAO,IAAAqnB,EAAAnnB,EAAAwa,EAAAxa,EAAA,IACA+yD,EAAAxzD,KAAAoC,KAAApC,KAAAO,IAAAguB,EAAA/tB,EAAAonB,EAAApnB,EAAA,GAAAR,KAAAO,IAAAguB,EAAA9tB,EAAAmnB,EAAAnnB,EAAA,IAEAgzD,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAGAC,EAAAj+D,MAAAi+D,GAAA,EAAAA,EACAC,EAAAl+D,MAAAk+D,GAAA,EAAAA,EAEA,IAAAC,EAAAtyD,EAAAoyD,EACAG,EAAAvyD,EAAAqyD,EAEA,OACAz4C,SAAA,CACAza,EAAAonB,EAAApnB,EAAAmzD,GAAAplC,EAAA/tB,EAAAya,EAAAza,GACAC,EAAAmnB,EAAAnnB,EAAAkzD,GAAAplC,EAAA9tB,EAAAwa,EAAAxa,IAEA8tB,KAAA,CACA/tB,EAAAonB,EAAApnB,EAAAozD,GAAArlC,EAAA/tB,EAAAya,EAAAza,GACAC,EAAAmnB,EAAAnnB,EAAAmzD,GAAArlC,EAAA9tB,EAAAwa,EAAAxa,MAIA8c,GAAAs2C,QAAApgD,OAAAogD,SAAA,MACAt2C,GAAAqX,oBAAA,SAAA7M,GAMA,IAUA3tB,EAAA05D,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BAj8B,EAhEAk8B,GAAAtsC,GAAA,IAAA9uB,IAAA,SAAAyhB,GACA,OACAwD,MAAAxD,EAAAoD,OACAw2C,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAA/5D,OAEA,IAAAF,EAAA,EAAaA,EAAAo6D,IAAep6D,EAE5B,KADA25D,EAAAM,EAAAj6D,IACA8jB,MAAAsK,KAAA,CAMA,GAFAsrC,EAAA15D,EAAA,EAAAi6D,EAAAj6D,EAAA,SACA45D,EAAA55D,EAAAo6D,EAAA,EAAAH,EAAAj6D,EAAA,WACA45D,EAAA91C,MAAAsK,KAAA,CACA,IAAAisC,EAAAT,EAAA91C,MAAA1d,EAAAuzD,EAAA71C,MAAA1d,EAGAuzD,EAAAO,OAAA,IAAAG,GAAAT,EAAA91C,MAAAzd,EAAAszD,EAAA71C,MAAAzd,GAAAg0D,EAAA,GAGAX,KAAA51C,MAAAsK,KACAurC,EAAAQ,GAAAR,EAAAO,QACIN,KAAA91C,MAAAsK,KACJurC,EAAAQ,GAAAT,EAAAQ,OACItgE,KAAA0pD,KAAAoW,EAAAQ,UAAAtgE,KAAA0pD,KAAAqW,EAAAO,QACJP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAAl6D,EAAA,EAAaA,EAAAo6D,EAAA,IAAmBp6D,EAChC25D,EAAAM,EAAAj6D,GACA45D,EAAAK,EAAAj6D,EAAA,GACA25D,EAAA71C,MAAAsK,MAAAwrC,EAAA91C,MAAAsK,OAIAjL,GAAA+hC,aAAAyU,EAAAO,OAAA,EAAAtgE,KAAA6/D,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAAp0D,KAAAO,IAAA0zD,EAAA,GAAAj0D,KAAAO,IAAA2zD,EAAA,KACA,IAIAC,EAAA,EAAAn0D,KAAAoC,KAAAgyD,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAAl6D,EAAA,EAAaA,EAAAo6D,IAAep6D,GAC5B25D,EAAAM,EAAAj6D,IACA8jB,MAAAsK,OAIAsrC,EAAA15D,EAAA,EAAAi6D,EAAAj6D,EAAA,QACA45D,EAAA55D,EAAAo6D,EAAA,EAAAH,EAAAj6D,EAAA,QACA05D,MAAA51C,MAAAsK,OACA2P,GAAA47B,EAAA71C,MAAA1d,EAAAszD,EAAA51C,MAAA1d,GAAA,EACAuzD,EAAA71C,MAAA1C,sBAAAu4C,EAAA71C,MAAA1d,EAAA23B,EACA47B,EAAA71C,MAAAxC,sBAAAq4C,EAAA71C,MAAAzd,EAAA03B,EAAA47B,EAAAQ,IAEAP,MAAA91C,MAAAsK,OACA2P,GAAA67B,EAAA91C,MAAA1d,EAAAuzD,EAAA71C,MAAA1d,GAAA,EACAuzD,EAAA71C,MAAAzC,kBAAAs4C,EAAA71C,MAAA1d,EAAA23B,EACA47B,EAAA71C,MAAAvC,kBAAAo4C,EAAA71C,MAAAzd,EAAA03B,EAAA47B,EAAAQ,MAIAh3C,GAAAuX,SAAA,SAAA88B,EAAA/+C,EAAAg6C,GACA,OAAAA,EACAh6C,GAAA++C,EAAAt3D,OAAA,EAAAs3D,EAAA,GAAAA,EAAA/+C,EAAA,GAEAA,GAAA++C,EAAAt3D,OAAA,EAAAs3D,IAAAt3D,OAAA,GAAAs3D,EAAA/+C,EAAA,IAEA0K,GAAAgL,aAAA,SAAAqpC,EAAA/+C,EAAAg6C,GACA,OAAAA,EACAh6C,GAAA,EAAA++C,IAAAt3D,OAAA,GAAAs3D,EAAA/+C,EAAA,GAEAA,GAAA,EAAA++C,EAAA,GAAAA,EAAA/+C,EAAA,IAGA0K,GAAA4hC,QAAA,SAAA7wB,EAAAjiB,GACA,IAAAgmD,EAAAryD,KAAAiB,MAAAsc,GAAAo1B,MAAArkB,IACAomC,EAAApmC,EAAAtuB,KAAAO,IAAA,GAAA8xD,GAuBA,OApBAhmD,EACAqoD,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,IAGA10D,KAAAO,IAAA,GAAA8xD,IAGA90C,GAAA+C,iBACA,oBAAA5tB,OACA,SAAAmhB,GACAA,KAGAnhB,OAAAwtB,uBACAxtB,OAAAiiE,6BACAjiE,OAAAkiE,0BACAliE,OAAAmiE,wBACAniE,OAAAoiE,yBACA,SAAAjhD,GACA,OAAAnhB,OAAA2D,WAAAwd,EAAA,SAIA0J,GAAA2Z,oBAAA,SAAA69B,EAAAh8C,GACA,IAAAuM,EAAA0D,EACA6H,EAAAkkC,EAAAC,eAAAD,EACAx9D,EAAAw9D,EAAA1iD,QAAA0iD,EAAAE,WACAC,EAAA39D,EAAA49D,wBAEAC,EAAAvkC,EAAAukC,QACAA,KAAA96D,OAAA,GACAgrB,EAAA8vC,EAAA,GAAAC,QACArsC,EAAAosC,EAAA,GAAAE,UAGAhwC,EAAAuL,EAAAwkC,QACArsC,EAAA6H,EAAAykC,SAMA,IAAAzgB,EAAArmC,WAAA+O,GAAA6f,SAAA7lC,EAAA,iBACAu9C,EAAAtmC,WAAA+O,GAAA6f,SAAA7lC,EAAA,gBACAw9C,EAAAvmC,WAAA+O,GAAA6f,SAAA7lC,EAAA,kBACAy9C,EAAAxmC,WAAA+O,GAAA6f,SAAA7lC,EAAA,mBACAI,EAAAu9D,EAAA77C,MAAA67C,EAAA/7C,KAAA07B,EAAAE,EACAl9C,EAAAq9D,EAAA57C,OAAA47C,EAAA97C,IAAA07B,EAAAE,EAOA,OAHA1vB,EAAAtlB,KAAAqM,OAAAiZ,EAAA4vC,EAAA/7C,KAAA07B,GAAA,EAAAt9C,EAAAI,MAAAohB,EAAAm6C,yBACAlqC,EAAAhpB,KAAAqM,OAAA2c,EAAAksC,EAAA97C,IAAA07B,GAAA,EAAAv9C,EAAAM,OAAAkhB,EAAAm6C,yBAEA,CACA1yD,EAAA8kB,EACA7kB,EAAAuoB,IAuDAzL,GAAAg4C,mBAAA,SAAAtE,GACA,OAAAD,EAAAC,EAAA,4BAGA1zC,GAAAi4C,oBAAA,SAAAvE,GACA,OAAAD,EAAAC,EAAA,8BAKA1zC,GAAAk4C,kBAAA,SAAAzgE,EAAAm0B,EAAAusC,GAGA,OAFAvsC,EAAA5L,GAAA6f,SAAApoC,EAAAm0B,IAEApT,QAAA,QAAA2/C,EAAAnnD,SAAA4a,EAAA,QAAA5a,SAAA4a,EAAA,KAKA5L,GAAA8zC,eAAA,SAAAJ,GACA,IAAA0E,EAAA1E,EAAApyB,WAIA,OAHA82B,GAAA,wBAAAA,EAAA/mD,aACA+mD,IAAAC,MAEAD,GAEAp4C,GAAA8wB,gBAAA,SAAA4iB,GACA,IAAAj8D,EAAAuoB,GAAA8zC,eAAAJ,GACA,IAAAj8D,EACA,OAAAi8D,EAAAnyB,YAGA,IAAAA,EAAA9pC,EAAA8pC,YACA+V,EAAAt3B,GAAAk4C,kBAAAzgE,EAAA,eAAA8pC,GACAiW,EAAAx3B,GAAAk4C,kBAAAzgE,EAAA,gBAAA8pC,GAEA5+B,EAAA4+B,EAAA+V,EAAAE,EACA8gB,EAAAt4C,GAAAg4C,mBAAAtE,GACA,OAAAz7D,MAAAqgE,GAAA31D,EAAAF,KAAAD,IAAAG,EAAA21D,IAEAt4C,GAAAgxB,iBAAA,SAAA0iB,GACA,IAAAj8D,EAAAuoB,GAAA8zC,eAAAJ,GACA,IAAAj8D,EACA,OAAAi8D,EAAA6E,aAGA,IAAAA,EAAA9gE,EAAA8gE,aACAhhB,EAAAv3B,GAAAk4C,kBAAAzgE,EAAA,cAAA8gE,GACA9gB,EAAAz3B,GAAAk4C,kBAAAzgE,EAAA,iBAAA8gE,GAEA14D,EAAA04D,EAAAhhB,EAAAE,EACA+gB,EAAAx4C,GAAAi4C,oBAAAvE,GACA,OAAAz7D,MAAAugE,GAAA34D,EAAA4C,KAAAD,IAAA3C,EAAA24D,IAEAx4C,GAAA6f,SAAA,SAAAa,EAAAd,GACA,OAAAc,EAAA+3B,aACA/3B,EAAA+3B,aAAA74B,GACAloC,SAAAm8D,YAAAG,iBAAAtzB,EAAA,MAAAg4B,iBAAA94B,IAEA5f,GAAAuwB,YAAA,SAAA/0B,EAAAm9C,GACA,IAAAC,EAAAp9C,EAAAm6C,wBAAAgD,GAAA,oBAAAxjE,eAAAq7C,kBAAA,EACA,OAAAooB,EAAA,CAIA,IAAA5+D,EAAAwhB,EAAAxhB,OACAM,EAAAkhB,EAAAlhB,OACAF,EAAAohB,EAAAphB,MAEAJ,EAAAM,SAAAs+D,EACA5+D,EAAAI,QAAAw+D,EACAp9C,EAAAthB,IAAAgX,MAAA0nD,KAKA5+D,EAAAqiB,MAAA/hB,QAAAN,EAAAqiB,MAAAjiB,QACAJ,EAAAqiB,MAAA/hB,SAAA,KACAN,EAAAqiB,MAAAjiB,QAAA,QAIA4lB,GAAA4sB,WAAA,SAAAisB,EAAAj5C,EAAAF,GACA,OAAAE,EAAA,IAAAi5C,EAAA,MAAAn5C,GAEAM,GAAAi2B,YAAA,SAAA/7C,EAAAslB,EAAAs5C,EAAA7zB,GAEA,IAAAlvC,GADAkvC,KAAA,IACAlvC,KAAAkvC,EAAAlvC,MAAA,GACAgjE,EAAA9zB,EAAA+zB,eAAA/zB,EAAA+zB,gBAAA,GAEA/zB,EAAAzlB,WACAzpB,EAAAkvC,EAAAlvC,KAAA,GACAgjE,EAAA9zB,EAAA+zB,eAAA,GACA/zB,EAAAzlB,QAGAtlB,EAAAslB,OACA,IAAAy5C,EAAA,EACAj5C,GAAAtJ,KAAAoiD,EAAA,SAAAI,GAEAA,UAAA,IAAAl5C,GAAAnK,QAAAqjD,GACAD,EAAAj5C,GAAA2sB,YAAAzyC,EAAAnE,EAAAgjE,EAAAE,EAAAC,GACIl5C,GAAAnK,QAAAqjD,IAGJl5C,GAAAtJ,KAAAwiD,EAAA,SAAAC,GAEAA,SAAAn5C,GAAAnK,QAAAsjD,KACAF,EAAAj5C,GAAA2sB,YAAAzyC,EAAAnE,EAAAgjE,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAAh8D,OAAA,EACA,GAAAq8D,EAAAN,EAAA/7D,OAAA,CACA,QAAAF,EAAA,EAAkBA,EAAAu8D,EAAWv8D,WAC7B9G,EAAAgjE,EAAAl8D,IAEAk8D,EAAAj2C,OAAA,EAAAs2C,GAEA,OAAAH,GAEAj5C,GAAA2sB,YAAA,SAAAzyC,EAAAnE,EAAAgjE,EAAAE,EAAAppD,GACA,IAAA8hD,EAAA57D,EAAA8Z,GAQA,OAPA8hD,IACAA,EAAA57D,EAAA8Z,GAAA3V,EAAAyyC,YAAA98B,GAAAzV,MACA2+D,EAAAr7D,KAAAmS,IAEA8hD,EAAAsH,IACAA,EAAAtH,GAEAsH,GAEAj5C,GAAAy6B,mBAAA,SAAAqe,GACA,IAAAO,EAAA,EAQA,OAPAr5C,GAAAtJ,KAAAoiD,EAAA,SAAAI,GACAl5C,GAAAnK,QAAAqjD,IACAA,EAAAn8D,OAAAs8D,IACAA,EAAAH,EAAAn8D,UAIAs8D,GAGAr5C,GAAAk2B,MAAA1gC,EAKA,SAAA5D,GAMA,OAJAA,aAAA0nD,iBACA1nD,EAAAoN,GAAA1gB,OAAAmgB,cAGAjJ,EAAA5D,IAVA,SAAAA,GAEA,OADAzU,QAAAC,MAAA,uBACAwU,GAWAoO,GAAA4G,cAAA,SAAA2yC,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eACAC,EACAv5C,GAAAk2B,MAAAqjB,GAAA3lD,SAAA,IAAAD,OAAA,IAAAtD,aAo/IAopD,GAEA1lB,GAAA2lB,UAAA5kB,GACAf,GAAA4lB,UAAA93C,GACAkyB,GAAA6lB,iBAAAz3C,GACA4xB,GAAA3a,eACA2a,GAAAtwB,kBAAAkE,GACAosB,GAAA11C,SAAA2gB,GACA+0B,GAAA7zB,QAAAoB,GACAyyB,GAAAztB,YACAytB,GAAA8lB,YAAA7+B,GACA+Y,GAAA+lB,QAAAh+B,GACAiY,GAAArR,YACAqR,GAAA3P,QAAAC,GACA0P,GAAAgmB,MAAA1iB,GACAtD,GAAAimB,aAAA50B,GACA2O,GAAAkmB,MAAAjlB,GACAjB,GAAAmmB,QAAA7qB,GAIA0E,GAAAt+B,QAAAiB,KAAA2N,GAAA,SAAAnT,EAAA0D,GACAm/B,GAAAimB,aAAA10B,kBAAA1wB,EAAA1D,IAAA6uC,aAQA3b,GACAA,GAAAtlC,eAAA8D,KACAmxC,GAAA3P,QAAAI,SAAAJ,GAAAxhC,KAIAmxC,GAAArR,SAAAlsC,aAEA,IAAA2jE,GAAApmB,GAyGA,MAxGA,oBAAA5+C,SACAA,OAAAoH,MAAAw3C,IAYAA,GAAAx3C,MAAAw3C,GASAA,GAAAsc,OAAAjsB,GAAApR,OAAAw/B,SASAze,GAAA6e,MAAAxuB,GAAArS,MAAAygC,SASAze,GAAAqmB,cAAArmB,GAAA3P,QAUA2P,GAAAsmB,WAAAtmB,GAAA7zB,QAAArI,OAAA,IASAk8B,GAAAumB,cAAAvmB,GAAAt+B,QAAAzb,OASA+5C,GAAAwmB,cAAAxmB,GAAA+lB,QASA/lB,GAAAymB,gBAAAxa,GAQAjM,GAAAt+B,QAAAiB,KACA,CACA,MACA,SACA,WACA,OACA,YACA,QACA,WAEA,SAAA+jD,GACA1mB,GAAA0mB,GAAA,SAAAvgE,EAAAwgE,GACA,WAAA3mB,GAAA75C,EAAA65C,GAAAt+B,QAAA+B,MAAAkjD,GAAA,GAA0E,CAC1E9lD,KAAA6lD,EAAAvlD,OAAA,GAAAylD,cAAAF,EAAAlsD,MAAA,SAMA4rD,GA90c4DS,CAAA,WAAwC,IAAM,OAAQC,EAAQ,QAAY,MAAAvnC,KAA1E,wBCP5D,SAAAwnC,EAAAC,GACA,IAAAznC,EAAA,IAAAp7B,MAAA,uBAAA6iE,EAAA,KAEA,MADAznC,EAAA0nC,KAAA,mBACA1nC,EAEAwnC,EAAAjkD,KAAA,WAAuC,UACvCikD,EAAAphE,QAAAohE,EACAn8D,EAAAC,QAAAk8D,EACAA,EAAA/gE,GAAA,2BCRA4E,EAAAC,QAAA,SAAAD,GAoBA,OAnBAA,EAAAs8D,kBACAt8D,EAAAu8D,UAAA,aACAv8D,EAAAw8D,MAAA,GAEAx8D,EAAAy8D,WAAAz8D,EAAAy8D,SAAA,IACAtlD,OAAAgM,eAAAnjB,EAAA,UACAonB,YAAA,EACAvuB,IAAA,WACA,OAAAmH,EAAAoB,KAGA+V,OAAAgM,eAAAnjB,EAAA,MACAonB,YAAA,EACAvuB,IAAA,WACA,OAAAmH,EAAA9B,KAGA8B,EAAAs8D,gBAAA,GAEAt8D,4BCpBA,SAAAA,GAGgEA,EAAAC,QAG/D,WAAqB,aAEtB,IAAAy8D,EA6GAC,EA3GA,SAAAC,IACA,OAAAF,EAAA5kD,MAAA,KAAAhI,WASA,SAAAoH,EAAAi0C,GACA,OAAAA,aAAAz7C,OAAA,mBAAAyH,OAAAxH,UAAA+C,SAAA7C,KAAAs7C,GAGA,SAAA9zC,EAAA8zC,GAGA,aAAAA,GAAA,oBAAAh0C,OAAAxH,UAAA+C,SAAA7C,KAAAs7C,GAiBA,SAAA0R,EAAA1R,GACA,gBAAAA,EAGA,SAAAzoC,EAAAyoC,GACA,uBAAAA,GAAA,oBAAAh0C,OAAAxH,UAAA+C,SAAA7C,KAAAs7C,GAGA,SAAA2R,EAAA3R,GACA,OAAAA,aAAArnC,MAAA,kBAAA3M,OAAAxH,UAAA+C,SAAA7C,KAAAs7C,GAGA,SAAApuD,EAAAggE,EAAAnlD,GACA,IAAA1Z,EAAAqpB,EAAA,GACA,IAAArpB,EAAA,EAAmBA,EAAA6+D,EAAA3+D,SAAgBF,EACnCqpB,EAAAxoB,KAAA6Y,EAAAmlD,EAAA7+D,OAEA,OAAAqpB,EAGA,SAAAy1C,EAAAl3D,EAAAlC,GACA,OAAAuT,OAAAxH,UAAAxP,eAAA0P,KAAA/J,EAAAlC,GAGA,SAAAsV,EAAApT,EAAAlC,GACA,QAAA1F,KAAA0F,EACAo5D,EAAAp5D,EAAA1F,KACA4H,EAAA5H,GAAA0F,EAAA1F,IAYA,OARA8+D,EAAAp5D,EAAA,cACAkC,EAAA4M,SAAA9O,EAAA8O,UAGAsqD,EAAAp5D,EAAA,aACAkC,EAAAkpD,QAAAprD,EAAAorD,SAGAlpD,EAGA,SAAAm3D,EAAA9R,EAAAzuD,EAAAwgE,EAAAC,GACA,OAAAC,GAAAjS,EAAAzuD,EAAAwgE,EAAAC,GAAA,GAAAE,MAuBA,SAAAC,EAAA33D,GAIA,OAHA,MAAAA,EAAA43D,MACA53D,EAAA43D,IApBA,CACAC,OAAA,EACAC,aAAA,GACAC,YAAA,GACAC,UAAA,EACAC,cAAA,EACAC,WAAA,EACAC,aAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,KAAA,EACAC,gBAAA,GACAC,SAAA,KACAC,SAAA,EACAC,iBAAA,IAQA14D,EAAA43D,IAqBA,SAAApqD,EAAAxN,GACA,SAAAA,EAAA24D,SAAA,CACA,IAAAC,EAAAjB,EAAA33D,GACA64D,EAAA7B,EAAA9sD,KAAA0uD,EAAAL,gBAAA,SAAAhgE,GACA,aAAAA,IAEAugE,GAAAnlE,MAAAqM,EAAA+4D,GAAAC,YACAJ,EAAAZ,SAAA,IACAY,EAAAf,QACAe,EAAAT,eACAS,EAAAK,iBACAL,EAAAF,kBACAE,EAAAV,YACAU,EAAAR,gBACAQ,EAAAP,mBACAO,EAAAJ,UAAAI,EAAAJ,UAAAK,GASA,GAPA74D,EAAAk5D,UACAJ,KACA,IAAAF,EAAAX,eACA,IAAAW,EAAAd,aAAAr/D,aACAC,IAAAkgE,EAAAO,SAGA,MAAA3nD,OAAA4nD,UAAA5nD,OAAA4nD,SAAAp5D,GAIA,OAAA84D,EAHA94D,EAAA24D,SAAAG,EAMA,OAAA94D,EAAA24D,SAGA,SAAAU,EAAAT,GACA,IAAA54D,EAAAs3D,EAAAppC,KAQA,OAPA,MAAA0qC,EACArlD,EAAAokD,EAAA33D,GAAA44D,GAGAjB,EAAA33D,GAAAq4D,iBAAA,EAGAr4D,EA3DAg3D,EADAjtD,MAAAC,UAAAgtD,KACAjtD,MAAAC,UAAAgtD,KAEA,SAAAsC,GAIA,IAHA,IAAA95D,EAAAgS,OAAArf,MACAqG,EAAAgH,EAAA/G,SAAA,EAEAF,EAAA,EAA2BA,EAAAC,EAASD,IACpC,GAAAA,KAAAiH,GAAA85D,EAAApvD,KAAA/X,KAAAqN,EAAAjH,KAAAiH,GACA,SAIA,UAoDA,IAAA+5D,EAAAtC,EAAAsC,iBAAA,GAEA,SAAAC,EAAAjvD,EAAAD,GACA,IAAA/R,EAAAkY,EAAAvR,EAiCA,GA/BAg4D,EAAA5sD,EAAAmvD,oBACAlvD,EAAAkvD,iBAAAnvD,EAAAmvD,kBAEAvC,EAAA5sD,EAAAovD,MACAnvD,EAAAmvD,GAAApvD,EAAAovD,IAEAxC,EAAA5sD,EAAAqvD,MACApvD,EAAAovD,GAAArvD,EAAAqvD,IAEAzC,EAAA5sD,EAAAsvD,MACArvD,EAAAqvD,GAAAtvD,EAAAsvD,IAEA1C,EAAA5sD,EAAA4uD,WACA3uD,EAAA2uD,QAAA5uD,EAAA4uD,SAEAhC,EAAA5sD,EAAAuvD,QACAtvD,EAAAsvD,KAAAvvD,EAAAuvD,MAEA3C,EAAA5sD,EAAAwvD,UACAvvD,EAAAuvD,OAAAxvD,EAAAwvD,QAEA5C,EAAA5sD,EAAAyvD,WACAxvD,EAAAwvD,QAAAzvD,EAAAyvD,SAEA7C,EAAA5sD,EAAAstD,OACArtD,EAAAqtD,IAAAD,EAAArtD,IAEA4sD,EAAA5sD,EAAA0vD,WACAzvD,EAAAyvD,QAAA1vD,EAAA0vD,SAGAT,EAAA9gE,OAAA,EACA,IAAAF,EAAA,EAAuBA,EAAAghE,EAAA9gE,OAA6BF,IACpDkY,EAAA8oD,EAAAhhE,GAEA2+D,EADAh4D,EAAAoL,EAAAmG,MAEAlG,EAAAkG,GAAAvR,GAKA,OAAAqL,EAGA,IAAA0vD,GAAA,EAGA,SAAAC,EAAAt7B,GACA46B,EAAArnE,KAAAysC,GACAzsC,KAAA4mE,GAAA,IAAA56C,KAAA,MAAAygB,EAAAm6B,GAAAn6B,EAAAm6B,GAAAC,UAAA9qC,KACA/7B,KAAAqb,YACArb,KAAA4mE,GAAA,IAAA56C,KAAA+P,OAIA,IAAA+rC,IACAA,GAAA,EACAhD,EAAAkD,aAAAhoE,MACA8nE,GAAA,GAIA,SAAAG,EAAAjtD,GACA,OAAAA,aAAA+sD,GAAA,MAAA/sD,GAAA,MAAAA,EAAAssD,iBAGA,SAAAY,EAAAC,GACA,OAAAA,EAAA,EAEAn8D,KAAAk+C,KAAAie,IAAA,EAEAn8D,KAAAiB,MAAAk7D,GAIA,SAAAC,EAAAC,GACA,IAAAC,GAAAD,EACAltD,EAAA,EAMA,OAJA,IAAAmtD,GAAA9oD,SAAA8oD,KACAntD,EAAA+sD,EAAAI,IAGAntD,EAIA,SAAAotD,EAAAC,EAAAC,EAAAC,GACA,IAGAtiE,EAHAC,EAAA2F,KAAAD,IAAAy8D,EAAAliE,OAAAmiE,EAAAniE,QACAqiE,EAAA38D,KAAA4oB,IAAA4zC,EAAAliE,OAAAmiE,EAAAniE,QACAsiE,EAAA,EAEA,IAAAxiE,EAAA,EAAmBA,EAAAC,EAASD,KAC5BsiE,GAAAF,EAAApiE,KAAAqiE,EAAAriE,KACAsiE,GAAAN,EAAAI,EAAApiE,MAAAgiE,EAAAK,EAAAriE,MACAwiE,IAGA,OAAAA,EAAAD,EAGA,SAAAjU,EAAAmU,IACA,IAAA/D,EAAAgE,6BACA,oBAAApiE,iBAAAguD,MACAhuD,QAAAguD,KAAA,wBAAAmU,GAIA,SAAApE,EAAAoE,EAAA/oD,GACA,IAAAipD,GAAA,EAEA,OAAA3nD,EAAA,WAIA,GAHA,MAAA0jD,EAAAkE,oBACAlE,EAAAkE,mBAAA,KAAAH,GAEAE,EAAA,CAGA,IAFA,IACApxD,EADA5O,EAAA,GAEA3C,EAAA,EAA+BA,EAAA4R,UAAA1R,OAAsBF,IAAA,CAErD,GADAuR,EAAA,GACA,iBAAAK,UAAA5R,GAAA,CAEA,QAAAmR,KADAI,GAAA,MAAAvR,EAAA,KACA4R,UAAA,GACAL,GAAAJ,EAAA,KAAAS,UAAA,GAAAT,GAAA,KAEAI,IAAAG,MAAA,WAEAH,EAAAK,UAAA5R,GAEA2C,EAAA9B,KAAA0Q,GAEA+8C,EAAAmU,EAAA,gBAAAjxD,MAAAC,UAAAC,MAAAC,KAAAhP,GAAAuzB,KAAA,cAAA76B,OAAAmF,OACAmiE,GAAA,EAEA,OAAAjpD,EAAAE,MAAAhgB,KAAAgY,YACS8H,GAGT,IAsEAM,EAtEA6oD,EAAA,GAEA,SAAAC,EAAApuD,EAAA+tD,GACA,MAAA/D,EAAAkE,oBACAlE,EAAAkE,mBAAAluD,EAAA+tD,GAEAI,EAAAnuD,KACA45C,EAAAmU,GACAI,EAAAnuD,IAAA,GAOA,SAAAquD,EAAA9V,GACA,OAAAA,aAAA+V,UAAA,sBAAA/pD,OAAAxH,UAAA+C,SAAA7C,KAAAs7C,GAsBA,SAAAgW,EAAAC,EAAAC,GACA,IAA2BjrD,EAA3BmR,EAAArO,EAAA,GAA2BkoD,GAC3B,IAAAhrD,KAAAirD,EACArE,EAAAqE,EAAAjrD,KACAiB,EAAA+pD,EAAAhrD,KAAAiB,EAAAgqD,EAAAjrD,KACAmR,EAAAnR,GAAA,GACA8C,EAAAqO,EAAAnR,GAAAgrD,EAAAhrD,IACA8C,EAAAqO,EAAAnR,GAAAirD,EAAAjrD,KACiB,MAAAirD,EAAAjrD,GACjBmR,EAAAnR,GAAAirD,EAAAjrD,UAEAmR,EAAAnR,IAIA,IAAAA,KAAAgrD,EACApE,EAAAoE,EAAAhrD,KACA4mD,EAAAqE,EAAAjrD,IACAiB,EAAA+pD,EAAAhrD,MAEAmR,EAAAnR,GAAA8C,EAAA,GAAqCqO,EAAAnR,KAGrC,OAAAmR,EAGA,SAAA+5C,EAAA/8B,GACA,MAAAA,GACAzsC,KAAAuE,IAAAkoC,GAtDAq4B,EAAAgE,6BAAA,EACAhE,EAAAkE,mBAAA,KA4DA5oD,EADAf,OAAAe,KACAf,OAAAe,KAEA,SAAApF,GACA,IAAA5U,EAAAqpB,EAAA,GACA,IAAArpB,KAAA4U,EACAkqD,EAAAlqD,EAAA5U,IACAqpB,EAAAxoB,KAAAb,GAGA,OAAAqpB,GAoFA,IAAAg6C,EAAA,GAEA,SAAAC,EAAA5e,EAAA6e,GACA,IAAAC,EAAA9e,EAAAoZ,cACAuF,EAAAG,GAAAH,EAAAG,EAAA,KAAAH,EAAAE,GAAA7e,EAGA,SAAA+e,EAAAC,GACA,uBAAAA,EAAAL,EAAAK,IAAAL,EAAAK,EAAA5F,oBAAA39D,EAGA,SAAAwjE,EAAAC,GACA,IACAC,EACA3rD,EAFA4rD,EAAA,GAIA,IAAA5rD,KAAA0rD,EACA9E,EAAA8E,EAAA1rD,KACA2rD,EAAAJ,EAAAvrD,MAEA4rD,EAAAD,GAAAD,EAAA1rD,IAKA,OAAA4rD,EAGA,IAAAC,EAAA,GAEA,SAAAC,EAAAtf,EAAAuf,GACAF,EAAArf,GAAAuf,EAcA,SAAAC,EAAAnC,EAAAoC,EAAAC,GACA,IAAAC,EAAA,GAAAz+D,KAAA4oB,IAAAuzC,GACAuC,EAAAH,EAAAE,EAAAnkE,OACAojD,EAAAye,GAAA,EACA,OAAAze,EAAA8gB,EAAA,YACAx+D,KAAAO,IAAA,GAAAP,KAAAC,IAAA,EAAAy+D,IAAA9vD,WAAA0E,OAAA,GAAAmrD,EAGA,IAAAE,EAAA,uLAEAC,EAAA,6CAEAC,EAAA,GAEAC,EAAA,GAMA,SAAAC,EAAAC,EAAAC,EAAAC,EAAArrD,GACA,IAAAnI,EAAAmI,EACA,iBAAAA,IACAnI,EAAA,WACA,OAAA1X,KAAA6f,OAGAmrD,IACAF,EAAAE,GAAAtzD,GAEAuzD,IACAH,EAAAG,EAAA,eACA,OAAAX,EAAA5yD,EAAAsI,MAAAhgB,KAAAgY,WAAAizD,EAAA,GAAAA,EAAA,MAGAC,IACAJ,EAAAI,GAAA,WACA,OAAAlrE,KAAAmrE,aAAAD,QAAAxzD,EAAAsI,MAAAhgB,KAAAgY,WAAAgzD,KAiCA,SAAAI,EAAAv9D,EAAAjJ,GACA,OAAAiJ,EAAAwN,WAIAzW,EAAAymE,EAAAzmE,EAAAiJ,EAAAs9D,cACAN,EAAAjmE,GAAAimE,EAAAjmE,IA3BA,SAAAA,GACA,IAAAwB,EAAAE,EARA+sD,EAQArxC,EAAApd,EAAAyV,MAAAswD,GAEA,IAAAvkE,EAAA,EAAAE,EAAA0b,EAAA1b,OAA0CF,EAAAE,EAAYF,IACtD0kE,EAAA9oD,EAAA5b,IACA4b,EAAA5b,GAAA0kE,EAAA9oD,EAAA5b,IAEA4b,EAAA5b,IAdAitD,EAcArxC,EAAA5b,IAbAiU,MAAA,YACAg5C,EAAA/uD,QAAA,eAEA+uD,EAAA/uD,QAAA,UAcA,gBAAAgnE,GACA,IAAAllE,EAAAmlE,EAAA,GACA,IAAAnlE,EAAA,EAAuBA,EAAAE,EAAYF,IACnCmlE,GAAApC,EAAAnnD,EAAA5b,IAAA4b,EAAA5b,GAAA2R,KAAAuzD,EAAA1mE,GAAAod,EAAA5b,GAEA,OAAAmlE,GAWAC,CAAA5mE,GAEAimE,EAAAjmE,GAAAiJ,IANAA,EAAAs9D,aAAAM,cASA,SAAAJ,EAAAzmE,EAAAwgE,GACA,IAAAh/D,EAAA,EAEA,SAAAslE,EAAArY,GACA,OAAA+R,EAAAuG,eAAAtY,MAIA,IADAuX,EAAAgB,UAAA,EACAxlE,GAAA,GAAAwkE,EAAAiB,KAAAjnE,IACAA,IAAAN,QAAAsmE,EAAAc,GACAd,EAAAgB,UAAA,EACAxlE,GAAA,EAGA,OAAAxB,EAGA,IAAAknE,EAAA,KACAC,EAAA,OACAC,EAAA,QACAC,EAAA,QACAC,EAAA,aACAC,EAAA,QACAC,EAAA,YACAC,GAAA,gBACAC,GAAA,UACAC,GAAA,UACAC,GAAA,eAEAC,GAAA,MACAC,GAAA,WAEAC,GAAA,qBACAC,GAAA,0BAMAC,GAAA,wJAEAC,GAAA,GAEA,SAAAC,GAAA/B,EAAAgC,EAAAC,GACAH,GAAA9B,GAAA7B,EAAA6D,KAAA,SAAAE,EAAA/B,GACA,OAAA+B,GAAAD,IAAAD,GAIA,SAAAG,GAAAnC,EAAAv+B,GACA,OAAAy4B,EAAA4H,GAAA9B,GAIA8B,GAAA9B,GAAAv+B,EAAAs6B,QAAAt6B,EAAAo7B,SAHA,IAAAuF,OAQAC,GARArC,EAQA1mE,QAAA,SAAAA,QAAA,+CAAAgpE,EAAAvU,EAAAwU,EAAAC,EAAAC,GACA,OAAA1U,GAAAwU,GAAAC,GAAAC,MAIA,SAAAJ,GAAAhkE,GACA,OAAAA,EAAA/E,QAAA,yBAA8C,QAG9C,IAAAopE,GAAA,GAEA,SAAAC,GAAA3C,EAAAnrD,GACA,IAAAzZ,EAAAsR,EAAAmI,EASA,IARA,iBAAAmrD,IACAA,EAAA,CAAAA,IAEApgD,EAAA/K,KACAnI,EAAA,SAAA27C,EAAArxC,GACAA,EAAAnC,GAAAuoD,EAAA/U,KAGAjtD,EAAA,EAAmBA,EAAA4kE,EAAA1kE,OAAkBF,IACrCsnE,GAAA1C,EAAA5kE,IAAAsR,EAIA,SAAAk2D,GAAA5C,EAAAnrD,GACA8tD,GAAA3C,EAAA,SAAA3X,EAAArxC,EAAAyqB,EAAAu+B,GACAv+B,EAAAohC,GAAAphC,EAAAohC,IAAA,GACAhuD,EAAAwzC,EAAA5mB,EAAAohC,GAAAphC,EAAAu+B,KAIA,SAAA8C,GAAA9C,EAAA3X,EAAA5mB,GACA,MAAA4mB,GAAA6R,EAAAwI,GAAA1C,IACA0C,GAAA1C,GAAA3X,EAAA5mB,EAAAshC,GAAAthC,EAAAu+B,GAIA,IAAAgD,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EA8CA,SAAAC,GAAArc,GACA,OAAAsc,GAAAtc,GAAA,QAGA,SAAAsc,GAAAtc,GACA,OAAAA,EAAA,MAAAA,EAAA,QAAAA,EAAA,OA/CA2Y,EAAA,mBACA,IAAAt+D,EAAAzM,KAAAoyD,OACA,OAAA3lD,GAAA,QAAAA,EAAA,IAAAA,IAGAs+D,EAAA,wBACA,OAAA/qE,KAAAoyD,OAAA,MAGA2Y,EAAA,uBACAA,EAAA,wBACAA,EAAA,4BAIArB,EAAA,YAIAU,EAAA,UAIA2C,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,SAAAP,GAAAN,GAEAyB,GAAA,mBAAAK,IACAL,GAAA,gBAAAta,EAAArxC,GACAA,EAAAgsD,IAAA,IAAA3a,EAAA/sD,OAAAw+D,EAAA6J,kBAAAtb,GAAA+U,EAAA/U,KAEAsa,GAAA,cAAAta,EAAArxC,GACAA,EAAAgsD,IAAAlJ,EAAA6J,kBAAAtb,KAEAsa,GAAA,aAAAta,EAAArxC,GACAA,EAAAgsD,IAAAzzD,SAAA84C,EAAA,MAeAyR,EAAA6J,kBAAA,SAAAtb,GACA,OAAA+U,EAAA/U,IAAA+U,EAAA/U,GAAA,cAKA,IAiEAtxC,GAjEA6sD,GAAAC,GAAA,eAMA,SAAAA,GAAA/jB,EAAAgkB,GACA,gBAAA3zD,GACA,aAAAA,GACA4zD,GAAA/uE,KAAA8qD,EAAA3vC,GACA2pD,EAAAkD,aAAAhoE,KAAA8uE,GACA9uE,MAEAe,GAAAf,KAAA8qD,IAKA,SAAA/pD,GAAAuqE,EAAAxgB,GACA,OAAAwgB,EAAAjwD,UACAiwD,EAAA1E,GAAA,OAAA0E,EAAA3D,OAAA,UAAA7c,KAAA/uB,IAGA,SAAAgzC,GAAAzD,EAAAxgB,EAAA3vC,GACAmwD,EAAAjwD,YAAA7Z,MAAA2Z,KACA,aAAA2vC,GAAA4jB,GAAApD,EAAAlZ,SAAA,IAAAkZ,EAAAplE,SAAA,KAAAolE,EAAArlE,OACAqlE,EAAA1E,GAAA,OAAA0E,EAAA3D,OAAA,UAAA7c,GAAA3vC,EAAAmwD,EAAAplE,QAAA8oE,GAAA7zD,EAAAmwD,EAAAplE,UAGAolE,EAAA1E,GAAA,OAAA0E,EAAA3D,OAAA,UAAA7c,GAAA3vC,IAqDA,SAAA6zD,GAAA5c,EAAAlsD,GACA,GAAA1E,MAAA4wD,IAAA5wD,MAAA0E,GACA,OAAA61B,IAEA,IAzBAvvB,EAyBAyiE,GAAA/oE,GAzBAsG,EAyBA,IAxBAA,KA0BA,OADA4lD,IAAAlsD,EAAA+oE,GAAA,GACA,IAAAA,EAAAP,GAAAtc,GAAA,SAAA6c,EAAA,IApBAltD,GADAnK,MAAAC,UAAAkK,QACAnK,MAAAC,UAAAkK,QAEA,SAAAmtD,GAEA,IAAA9oE,EACA,IAAAA,EAAA,EAAuBA,EAAApG,KAAAsG,SAAiBF,EACxC,GAAApG,KAAAoG,KAAA8oE,EACA,OAAA9oE,EAGA,UAeA2kE,EAAA,6BACA,OAAA/qE,KAAAkG,QAAA,IAGA6kE,EAAA,mBAAAnmE,GACA,OAAA5E,KAAAmrE,aAAAgE,YAAAnvE,KAAA4E,KAGAmmE,EAAA,oBAAAnmE,GACA,OAAA5E,KAAAmrE,aAAAiE,OAAApvE,KAAA4E,KAKA8kE,EAAA,aAIAU,EAAA,WAIA2C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,eAAAG,EAAA9H,GACA,OAAAA,EAAAiK,iBAAAnC,KAEAH,GAAA,gBAAAG,EAAA9H,GACA,OAAAA,EAAAkK,YAAApC,KAGAS,GAAA,oBAAAta,EAAArxC,GACAA,EAAAisD,IAAA7F,EAAA/U,GAAA,IAGAsa,GAAA,wBAAAta,EAAArxC,EAAAyqB,EAAAu+B,GACA,IAAA9kE,EAAAumC,EAAAo7B,QAAA0H,YAAAlc,EAAA2X,EAAAv+B,EAAAs6B,SAEA,MAAA7gE,EACA8b,EAAAisD,IAAA/nE,EAEAs/D,EAAA/4B,GAAAu5B,aAAA3S,IAMA,IAAAmc,GAAA,gCACAC,GAAA,wFAAAt9B,MAAA,KAUAu9B,GAAA,kDAAAv9B,MAAA,KA2FA,SAAAw9B,GAAArE,EAAAnwD,GACA,IAAAy0D,EAEA,IAAAtE,EAAAjwD,UAEA,OAAAiwD,EAGA,oBAAAnwD,EACA,WAAA0wD,KAAA1wD,GACAA,EAAAitD,EAAAjtD,QAIA,IAAAyP,EAFAzP,EAAAmwD,EAAAH,aAAAoE,YAAAp0D,IAGA,OAAAmwD,EAOA,OAFAsE,EAAA5jE,KAAAD,IAAAu/D,EAAArlE,OAAA+oE,GAAA1D,EAAAlZ,OAAAj3C,IACAmwD,EAAA1E,GAAA,OAAA0E,EAAA3D,OAAA,mBAAAxsD,EAAAy0D,GACAtE,EAGA,SAAAuE,GAAA10D,GACA,aAAAA,GACAw0D,GAAA3vE,KAAAmb,GACA2pD,EAAAkD,aAAAhoE,MAAA,GACAA,MAEAe,GAAAf,KAAA,SAQA,IAAA8vE,GAAAjD,GAoBAkD,GAAAlD,GAoBA,SAAAmD,KACA,SAAAC,EAAAjiE,EAAAlC,GACA,OAAAA,EAAAxF,OAAA0H,EAAA1H,OAGA,IACAF,EAAAklE,EADA4E,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAEA,IAAAhqE,EAAA,EAAmBA,EAAA,GAAQA,IAE3BklE,EAAAnG,EAAA,KAAA/+D,IACA8pE,EAAAjpE,KAAAjH,KAAAmvE,YAAA7D,EAAA,KACA6E,EAAAlpE,KAAAjH,KAAAovE,OAAA9D,EAAA,KACA8E,EAAAnpE,KAAAjH,KAAAovE,OAAA9D,EAAA,KACA8E,EAAAnpE,KAAAjH,KAAAmvE,YAAA7D,EAAA,KAOA,IAHA4E,EAAAppE,KAAAmpE,GACAE,EAAArpE,KAAAmpE,GACAG,EAAAtpE,KAAAmpE,GACA7pE,EAAA,EAAmBA,EAAA,GAAQA,IAC3B8pE,EAAA9pE,GAAAinE,GAAA6C,EAAA9pE,IACA+pE,EAAA/pE,GAAAinE,GAAA8C,EAAA/pE,IAEA,IAAAA,EAAA,EAAmBA,EAAA,GAAQA,IAC3BgqE,EAAAhqE,GAAAinE,GAAA+C,EAAAhqE,IAGApG,KAAAqwE,aAAA,IAAAjD,OAAA,KAAAgD,EAAA9zC,KAAA,cACAt8B,KAAAswE,kBAAAtwE,KAAAqwE,aACArwE,KAAAuwE,mBAAA,IAAAnD,OAAA,KAAA+C,EAAA7zC,KAAA,cACAt8B,KAAAwwE,wBAAA,IAAApD,OAAA,KAAA8C,EAAA5zC,KAAA,cAqBA,SAAAm0C,GAAAhkE,GACA,IAAAxG,EAEA,GAAAwG,EAAA,KAAAA,GAAA,GACA,IAAA1D,EAAA6O,MAAAC,UAAAC,MAAAC,KAAAC,WAEAjP,EAAA,GAAA0D,EAAA,IACAxG,EAAA,IAAA+lB,UAAA0kD,IAAA1wD,MAAA,KAAAjX,IACAyW,SAAAvZ,EAAA0qE,mBACA1qE,EAAA2qE,eAAAnkE,QAGAxG,EAAA,IAAA+lB,UAAA0kD,IAAA1wD,MAAA,KAAAhI,YAGA,OAAA/R,EAIA,SAAA4qE,GAAAze,EAAA0e,EAAAC,GACA,IACAC,EAAA,EAAAF,EAAAC,EAEAE,GAAA,EAAAR,GAAAre,EAAA,EAAA4e,GAAAE,YAAAJ,GAAA,EAEA,OAAAG,EAAAD,EAAA,EAIA,SAAAG,GAAA/e,EAAAF,EAAAgC,EAAA4c,EAAAC,GACA,IAGAK,EAAAC,EAHAC,GAAA,EAAApd,EAAA4c,GAAA,EACAS,EAAAV,GAAAze,EAAA0e,EAAAC,GACAS,EAAA,KAAAtf,EAAA,GAAAof,EAAAC,EAcA,OAXAC,GAAA,EAEAH,EAAA5C,GADA2C,EAAAhf,EAAA,GACAof,EACSA,EAAA/C,GAAArc,IACTgf,EAAAhf,EAAA,EACAif,EAAAG,EAAA/C,GAAArc,KAEAgf,EAAAhf,EACAif,EAAAG,GAGA,CACApf,KAAAgf,EACAI,UAAAH,GAIA,SAAAI,GAAAnG,EAAAwF,EAAAC,GACA,IAEAW,EAAAN,EAFAG,EAAAV,GAAAvF,EAAAlZ,OAAA0e,EAAAC,GACA7e,EAAAlmD,KAAAiB,OAAAq+D,EAAAkG,YAAAD,EAAA,QAcA,OAXArf,EAAA,GACAkf,EAAA9F,EAAAlZ,OAAA,EACAsf,EAAAxf,EAAAyf,GAAAP,EAAAN,EAAAC,IACS7e,EAAAyf,GAAArG,EAAAlZ,OAAA0e,EAAAC,IACTW,EAAAxf,EAAAyf,GAAArG,EAAAlZ,OAAA0e,EAAAC,GACAK,EAAA9F,EAAAlZ,OAAA,IAEAgf,EAAA9F,EAAAlZ,OACAsf,EAAAxf,GAGA,CACAA,KAAAwf,EACAtf,KAAAgf,GAIA,SAAAO,GAAAvf,EAAA0e,EAAAC,GACA,IAAAQ,EAAAV,GAAAze,EAAA0e,EAAAC,GACAa,EAAAf,GAAAze,EAAA,EAAA0e,EAAAC,GACA,OAAAtC,GAAArc,GAAAmf,EAAAK,GAAA,EAoJA,SAAAC,GAAAC,EAAAvkE,GACA,OAAAukE,EAAAh6D,MAAAvK,EAAA,GAAAoO,OAAAm2D,EAAAh6D,MAAA,EAAAvK,IAhJAw9D,EAAA,0BACAA,EAAA,6BAIArB,EAAA,YACAA,EAAA,eAIAU,EAAA,UACAA,EAAA,aAIA2C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GAEA6B,GAAA,6BAAAva,EAAAnB,EAAAzlB,EAAAu+B,GACA9Y,EAAA8Y,EAAA1rD,OAAA,MAAA8oD,EAAA/U,KAsCA0X,EAAA,kBAEAA,EAAA,kBAAAnmE,GACA,OAAA5E,KAAAmrE,aAAA4G,YAAA/xE,KAAA4E,KAGAmmE,EAAA,mBAAAnmE,GACA,OAAA5E,KAAAmrE,aAAA6G,cAAAhyE,KAAA4E,KAGAmmE,EAAA,oBAAAnmE,GACA,OAAA5E,KAAAmrE,aAAA8G,SAAAjyE,KAAA4E,KAGAmmE,EAAA,mBACAA,EAAA,sBAIArB,EAAA,WACAA,EAAA,eACAA,EAAA,kBAGAU,EAAA,UACAA,EAAA,cACAA,EAAA,iBAIA2C,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,cAAAG,EAAA9H,GACA,OAAAA,EAAA8M,iBAAAhF,KAEAH,GAAA,eAAAG,EAAA9H,GACA,OAAAA,EAAA+M,mBAAAjF,KAEAH,GAAA,gBAAAG,EAAA9H,GACA,OAAAA,EAAAgN,cAAAlF,KAGAU,GAAA,6BAAAva,EAAAnB,EAAAzlB,EAAAu+B,GACA,IAAA9W,EAAAznB,EAAAo7B,QAAAwK,cAAAhf,EAAA2X,EAAAv+B,EAAAs6B,SAEA,MAAA7S,EACAhC,EAAAtgB,EAAAsiB,EAEAsR,EAAA/4B,GAAAq6B,eAAAzT,IAIAua,GAAA,uBAAAva,EAAAnB,EAAAzlB,EAAAu+B,GACA9Y,EAAA8Y,GAAA5C,EAAA/U,KAkCA,IAAAif,GAAA,2DAAAngC,MAAA,KAQAogC,GAAA,8BAAApgC,MAAA,KAMAqgC,GAAA,uBAAArgC,MAAA,KAsJAsgC,GAAA5F,GAoBA6F,GAAA7F,GAoBA8F,GAAA9F,GAqBA,SAAA+F,KACA,SAAA3C,EAAAjiE,EAAAlC,GACA,OAAAA,EAAAxF,OAAA0H,EAAA1H,OAGA,IACAF,EAAAklE,EAAAuH,EAAAC,EAAAC,EADAC,EAAA,GAAA9C,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAEA,IAAAhqE,EAAA,EAAmBA,EAAA,EAAOA,IAE1BklE,EAAAnG,EAAA,SAAAxgE,IAAAyB,GACAysE,EAAA7yE,KAAA+xE,YAAAzG,EAAA,IACAwH,EAAA9yE,KAAAgyE,cAAA1G,EAAA,IACAyH,EAAA/yE,KAAAiyE,SAAA3G,EAAA,IACA0H,EAAA/rE,KAAA4rE,GACA3C,EAAAjpE,KAAA6rE,GACA3C,EAAAlpE,KAAA8rE,GACA3C,EAAAnpE,KAAA4rE,GACAzC,EAAAnpE,KAAA6rE,GACA1C,EAAAnpE,KAAA8rE,GAQA,IAJAC,EAAAlsE,KAAAmpE,GACAC,EAAAppE,KAAAmpE,GACAE,EAAArpE,KAAAmpE,GACAG,EAAAtpE,KAAAmpE,GACA7pE,EAAA,EAAmBA,EAAA,EAAOA,IAC1B8pE,EAAA9pE,GAAAinE,GAAA6C,EAAA9pE,IACA+pE,EAAA/pE,GAAAinE,GAAA8C,EAAA/pE,IACAgqE,EAAAhqE,GAAAinE,GAAA+C,EAAAhqE,IAGApG,KAAAizE,eAAA,IAAA7F,OAAA,KAAAgD,EAAA9zC,KAAA,cACAt8B,KAAAkzE,oBAAAlzE,KAAAizE,eACAjzE,KAAAmzE,kBAAAnzE,KAAAizE,eAEAjzE,KAAAozE,qBAAA,IAAAhG,OAAA,KAAA+C,EAAA7zC,KAAA,cACAt8B,KAAAqzE,0BAAA,IAAAjG,OAAA,KAAA8C,EAAA5zC,KAAA,cACAt8B,KAAAszE,wBAAA,IAAAlG,OAAA,KAAA4F,EAAA12C,KAAA,cAKA,SAAAi3C,KACA,OAAAvzE,KAAAwzE,QAAA,OA6BA,SAAAnN,GAAA2E,EAAAyI,GACA1I,EAAAC,EAAA,eACA,OAAAhrE,KAAAmrE,aAAA9E,SAAArmE,KAAAwzE,QAAAxzE,KAAA0zE,UAAAD,KAgBA,SAAAE,GAAAzG,EAAA9H,GACA,OAAAA,EAAAwO,eAzCA7I,EAAA,uBACAA,EAAA,eAAAwI,IACAxI,EAAA,eANA,WACA,OAAA/qE,KAAAwzE,SAAA,KAOAzI,EAAA,qBACA,SAAAwI,GAAAvzD,MAAAhgB,MAAAsqE,EAAAtqE,KAAA0zE,UAAA,KAGA3I,EAAA,uBACA,SAAAwI,GAAAvzD,MAAAhgB,MAAAsqE,EAAAtqE,KAAA0zE,UAAA,GACApJ,EAAAtqE,KAAA6zE,UAAA,KAGA9I,EAAA,qBACA,SAAA/qE,KAAAwzE,QAAAlJ,EAAAtqE,KAAA0zE,UAAA,KAGA3I,EAAA,uBACA,SAAA/qE,KAAAwzE,QAAAlJ,EAAAtqE,KAAA0zE,UAAA,GACApJ,EAAAtqE,KAAA6zE,UAAA,KASAxN,GAAA,QACAA,GAAA,QAIAqD,EAAA,YAGAU,EAAA,WAQA2C,GAAA,IAAA4G,IACA5G,GAAA,IAAA4G,IACA5G,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GAEAgB,GAAA,MAAAX,GACAW,GAAA,QAAAV,IACAU,GAAA,MAAAX,GACAW,GAAA,QAAAV,IAEAsB,GAAA,WAAAQ,IACAR,GAAA,oBAAAta,EAAArxC,EAAAyqB,GACA,IAAAqnC,EAAA1L,EAAA/U,GACArxC,EAAAmsD,IAAA,KAAA2F,EAAA,EAAAA,IAEAnG,GAAA,mBAAAta,EAAArxC,EAAAyqB,GACAA,EAAAsnC,MAAAtnC,EAAAo7B,QAAAmM,KAAA3gB,GACA5mB,EAAAwnC,UAAA5gB,IAEAsa,GAAA,oBAAAta,EAAArxC,EAAAyqB,GACAzqB,EAAAmsD,IAAA/F,EAAA/U,GACAmS,EAAA/4B,GAAAu6B,SAAA,IAEA2G,GAAA,eAAAta,EAAArxC,EAAAyqB,GACA,IAAAa,EAAA+lB,EAAA/sD,OAAA,EACA0b,EAAAmsD,IAAA/F,EAAA/U,EAAA/zC,OAAA,EAAAguB,IACAtrB,EAAAosD,IAAAhG,EAAA/U,EAAA/zC,OAAAguB,IACAk4B,EAAA/4B,GAAAu6B,SAAA,IAEA2G,GAAA,iBAAAta,EAAArxC,EAAAyqB,GACA,IAAAynC,EAAA7gB,EAAA/sD,OAAA,EACA6tE,EAAA9gB,EAAA/sD,OAAA,EACA0b,EAAAmsD,IAAA/F,EAAA/U,EAAA/zC,OAAA,EAAA40D,IACAlyD,EAAAosD,IAAAhG,EAAA/U,EAAA/zC,OAAA40D,EAAA,IACAlyD,EAAAqsD,IAAAjG,EAAA/U,EAAA/zC,OAAA60D,IACA3O,EAAA/4B,GAAAu6B,SAAA,IAEA2G,GAAA,eAAAta,EAAArxC,EAAAyqB,GACA,IAAAa,EAAA+lB,EAAA/sD,OAAA,EACA0b,EAAAmsD,IAAA/F,EAAA/U,EAAA/zC,OAAA,EAAAguB,IACAtrB,EAAAosD,IAAAhG,EAAA/U,EAAA/zC,OAAAguB,MAEAqgC,GAAA,iBAAAta,EAAArxC,EAAAyqB,GACA,IAAAynC,EAAA7gB,EAAA/sD,OAAA,EACA6tE,EAAA9gB,EAAA/sD,OAAA,EACA0b,EAAAmsD,IAAA/F,EAAA/U,EAAA/zC,OAAA,EAAA40D,IACAlyD,EAAAosD,IAAAhG,EAAA/U,EAAA/zC,OAAA40D,EAAA,IACAlyD,EAAAqsD,IAAAjG,EAAA/U,EAAA/zC,OAAA60D,MA2BA,IAyBAC,GAzBAC,GAAAxF,GAAA,YAEAyF,GAAA,CACAC,SAj2CA,CACAC,QAAA,gBACAC,QAAA,mBACAC,SAAA,eACAC,QAAA,oBACAhyE,SAAA,sBACAiyE,SAAA,KA41CAjJ,eAp1CA,CACAkJ,IAAA,YACAC,GAAA,SACAC,EAAA,aACAC,GAAA,eACAC,IAAA,sBACAC,KAAA,6BA+0CAzJ,YA7zCA,eA8zCAP,QAxzCA,KAyzCAiK,uBAxzCA,UAyzCAC,aAnzCA,CACAC,OAAA,QACAC,KAAA,SACAjsE,EAAA,gBACAksE,GAAA,aACA1nE,EAAA,WACA2nE,GAAA,aACApsE,EAAA,UACAqsE,GAAA,WACA7jC,EAAA,QACA8jC,GAAA,UACAC,EAAA,UACAC,GAAA,YACAnpE,EAAA,SACAopE,GAAA,YAuyCAzG,OAAAK,GACAN,YAAAO,GAEAxd,KA9gBA,CACA4e,IAAA,EACAC,IAAA,GA8gBAkB,SAAAK,GACAP,YAAAS,GACAR,cAAAO,GAEAuD,cAnCA,iBAuCAC,GAAA,GACAC,GAAA,GAGA,SAAAC,GAAA1+D,GACA,OAAAA,IAAA2sD,cAAA5/D,QAAA,SAAAiT,EA8BA,SAAA2+D,GAAAp7D,GACA,IAAAq7D,EAAA,KAEA,IAAAJ,GAAAj7D,SAAA,IAAA5S,GACAA,KAAAC,QACA,IACAguE,EAAA/B,GAAAgC,MAEgBhS,EAAA,OAAAA,CAAe,KAAWtpD,GAC1Cu7D,GAAAF,GACa,MAAAt5C,IAEb,OAAAk5C,GAAAj7D,GAMA,SAAAu7D,GAAA9+D,EAAAkB,GACA,IAAAnZ,EAqBA,OApBAiY,KAEAjY,EADAylE,EAAAtsD,GACA69D,GAAA/+D,GAGAg/D,GAAAh/D,EAAAkB,IAKA27D,GAAA90E,EAGA,oBAAAoH,iBAAAguD,MAEAhuD,QAAAguD,KAAA,UAAAn9C,EAAA,2CAKA68D,GAAAgC,MAGA,SAAAG,GAAAz7D,EAAA2xB,GACA,UAAAA,EAAA,CACA,IAAA24B,EAAAkE,EAAAgL,GAEA,GADA7nC,EAAA+pC,KAAA17D,EACA,MAAAi7D,GAAAj7D,GACAouD,EAAA,uBACA,2OAIAI,EAAAyM,GAAAj7D,GAAA27D,aACa,SAAAhqC,EAAAiqC,aACb,SAAAX,GAAAtpC,EAAAiqC,cACApN,EAAAyM,GAAAtpC,EAAAiqC,cAAAD,YACiB,CAEjB,UADArR,EAAA8Q,GAAAzpC,EAAAiqC,eAWA,OAPAV,GAAAvpC,EAAAiqC,gBACAV,GAAAvpC,EAAAiqC,cAAA,IAEAV,GAAAvpC,EAAAiqC,cAAAzvE,KAAA,CACA6T,OACA2xB,WAEA,KATA68B,EAAAlE,EAAAqR,QA2BA,OAdAV,GAAAj7D,GAAA,IAAA0uD,EAAAH,EAAAC,EAAA78B,IAEAupC,GAAAl7D,IACAk7D,GAAAl7D,GAAA9T,QAAA,SAAAwF,GACA+pE,GAAA/pE,EAAAsO,KAAAtO,EAAAigC,UAOA4pC,GAAAv7D,GAGAi7D,GAAAj7D,GAIA,cADAi7D,GAAAj7D,GACA,KAiCA,SAAAw7D,GAAA/+D,GACA,IAAA6tD,EAMA,GAJA7tD,KAAAswD,SAAAtwD,EAAAswD,QAAAuO,QACA7+D,IAAAswD,QAAAuO,QAGA7+D,EACA,OAAA68D,GAGA,IAAAh1D,EAAA7H,GAAA,CAGA,GADA6tD,EAAA8Q,GAAA3+D,GAEA,OAAA6tD,EAEA7tD,EAAA,CAAAA,GAGA,OAxKA,SAAAo/D,GAGA,IAFA,IAAAr5C,EAAA/C,EAAA6qC,EAAAjzB,EAAA/rC,EAAA,EAEAA,EAAAuwE,EAAArwE,QAAA,CAKA,IAJA6rC,EAAA8jC,GAAAU,EAAAvwE,IAAA+rC,MAAA,KACA7U,EAAA6U,EAAA7rC,OAEAi0B,GADAA,EAAA07C,GAAAU,EAAAvwE,EAAA,KACAm0B,EAAA4X,MAAA,UACA7U,EAAA,IAEA,GADA8nC,EAAA8Q,GAAA/jC,EAAAr6B,MAAA,EAAAwlB,GAAAhB,KAAA,MAEA,OAAA8oC,EAEA,GAAA7qC,KAAAj0B,QAAAg3B,GAAAirC,EAAAp2B,EAAA5X,GAAA,IAAA+C,EAAA,EAEA,MAEAA,IAEAl3B,IAEA,OAAAguE,GAmJAwC,CAAAr/D,GAOA,SAAAs/D,GAAAhpE,GACA,IAAAg4D,EACA73D,EAAAH,EAAAkgE,GAyBA,OAvBA//D,IAAA,IAAAw3D,EAAA33D,GAAAg4D,WACAA,EACA73D,EAAAigE,IAAA,GAAAjgE,EAAAigE,IAAA,GAAAA,GACAjgE,EAAAkgE,IAAA,GAAAlgE,EAAAkgE,IAAAc,GAAAhhE,EAAAggE,IAAAhgE,EAAAigE,KAAAC,GACAlgE,EAAAmgE,IAAA,GAAAngE,EAAAmgE,IAAA,SAAAngE,EAAAmgE,MAAA,IAAAngE,EAAAogE,KAAA,IAAApgE,EAAAqgE,KAAA,IAAArgE,EAAAsgE,KAAAH,GACAngE,EAAAogE,IAAA,GAAApgE,EAAAogE,IAAA,GAAAA,GACApgE,EAAAqgE,IAAA,GAAArgE,EAAAqgE,IAAA,GAAAA,GACArgE,EAAAsgE,IAAA,GAAAtgE,EAAAsgE,IAAA,IAAAA,IACA,EAEA9I,EAAA33D,GAAAipE,qBAAAjR,EAAAmI,IAAAnI,EAAAqI,MACArI,EAAAqI,IAEA1I,EAAA33D,GAAAkpE,iBAAA,IAAAlR,IACAA,EAAA0I,IAEA/I,EAAA33D,GAAAmpE,mBAAA,IAAAnR,IACAA,EAAA2I,IAGAhJ,EAAA33D,GAAAg4D,YAGAh4D,EAIA,SAAAjG,GAAAoG,EAAAlC,EAAA8B,GACA,aAAAI,EACAA,EAEA,MAAAlC,EACAA,EAEA8B,EAgBA,SAAAqpE,GAAAxqC,GACA,IAAArmC,EAAAH,EAAAixE,EAAAC,EAAAC,EAAA/jB,EAAA,GAEA,IAAA5mB,EAAAm6B,GAAA,CA6BA,IAzBAsQ,EApBA,SAAAzqC,GAEA,IAAA4qC,EAAA,IAAArrD,KAAA84C,EAAAriE,OACA,OAAAgqC,EAAA6qC,QACA,CAAAD,EAAA1G,iBAAA0G,EAAAE,cAAAF,EAAAG,cAEA,CAAAH,EAAAI,cAAAJ,EAAAK,WAAAL,EAAAM,WAcAC,CAAAnrC,GAGAA,EAAAohC,IAAA,MAAAphC,EAAAshC,GAAAG,KAAA,MAAAzhC,EAAAshC,GAAAE,KA2DA,SAAAxhC,GACA,IAAAvgC,EAAA2rE,EAAA3lB,EAAAgC,EAAA4c,EAAAC,EAAA+G,EAAAC,EAGA,UADA7rE,EAAAugC,EAAAohC,IACAmK,IAAA,MAAA9rE,EAAA+rE,GAAA,MAAA/rE,EAAAgsE,EACApH,EAAA,EACAC,EAAA,EAMA8G,EAAAjwE,GAAAsE,EAAA8rE,GAAAvrC,EAAAshC,GAAAC,IAAAyD,GAAA0G,KAAA,KAAA/lB,MACAF,EAAAtqD,GAAAsE,EAAA+rE,EAAA,KACA/jB,EAAAtsD,GAAAsE,EAAAgsE,EAAA,IACA,GAAAhkB,EAAA,KACA6jB,GAAA,OAES,CACTjH,EAAArkC,EAAAo7B,QAAAuQ,MAAAtH,IACAC,EAAAtkC,EAAAo7B,QAAAuQ,MAAArH,IAEA,IAAAsH,EAAA5G,GAAA0G,KAAArH,EAAAC,GAEA8G,EAAAjwE,GAAAsE,EAAAosE,GAAA7rC,EAAAshC,GAAAC,IAAAqK,EAAAjmB,MAGAF,EAAAtqD,GAAAsE,IAAAmsE,EAAAnmB,MAEA,MAAAhmD,EAAA0lC,IAEAsiB,EAAAhoD,EAAA0lC,GACA,GAAAsiB,EAAA,KACA6jB,GAAA,GAEa,MAAA7rE,EAAA2wB,GAEbq3B,EAAAhoD,EAAA2wB,EAAAi0C,GACA5kE,EAAA2wB,EAAA,GAAA3wB,EAAA2wB,EAAA,KACAk7C,GAAA,IAIA7jB,EAAA4c,EAGA5e,EAAA,GAAAA,EAAAyf,GAAAkG,EAAA/G,EAAAC,GACAvL,EAAA/4B,GAAAsqC,gBAAA,EACS,MAAAgB,EACTvS,EAAA/4B,GAAAuqC,kBAAA,GAEAc,EAAA3G,GAAA0G,EAAA3lB,EAAAgC,EAAA4c,EAAAC,GACAtkC,EAAAshC,GAAAC,IAAA8J,EAAA1lB,KACA3lB,EAAA8rC,WAAAT,EAAAtG,WA/GAgH,CAAA/rC,GAIA,MAAAA,EAAA8rC,aACAnB,EAAAxvE,GAAA6kC,EAAAshC,GAAAC,IAAAkJ,EAAAlJ,MAEAvhC,EAAA8rC,WAAA9J,GAAA2I,IAAA,IAAA3qC,EAAA8rC,cACA/S,EAAA/4B,GAAAqqC,oBAAA,GAGA7wE,EAAAwqE,GAAA2G,EAAA,EAAA3qC,EAAA8rC,YACA9rC,EAAAshC,GAAAE,IAAAhoE,EAAAsxE,cACA9qC,EAAAshC,GAAAG,IAAAjoE,EAAAuxE,cAQApxE,EAAA,EAAmBA,EAAA,SAAAqmC,EAAAshC,GAAA3nE,KAA+BA,EAClDqmC,EAAAshC,GAAA3nE,GAAAitD,EAAAjtD,GAAA8wE,EAAA9wE,GAIA,KAAcA,EAAA,EAAOA,IACrBqmC,EAAAshC,GAAA3nE,GAAAitD,EAAAjtD,GAAA,MAAAqmC,EAAAshC,GAAA3nE,GAAA,IAAAA,EAAA,IAAAqmC,EAAAshC,GAAA3nE,GAIA,KAAAqmC,EAAAshC,GAAAI,KACA,IAAA1hC,EAAAshC,GAAAK,KACA,IAAA3hC,EAAAshC,GAAAM,KACA,IAAA5hC,EAAAshC,GAAAO,MACA7hC,EAAAgsC,UAAA,EACAhsC,EAAAshC,GAAAI,IAAA,GAGA1hC,EAAAm6B,IAAAn6B,EAAA6qC,QAAA7G,GA97BA,SAAAhkE,EAAAoB,EAAA+jC,EAAAxoC,EAAAusE,EAAAtsE,EAAAqvE,GAGA,IAAAzyE,EAYA,OAVAwG,EAAA,KAAAA,GAAA,GAEAxG,EAAA,IAAA+lB,KAAAvf,EAAA,IAAAoB,EAAA+jC,EAAAxoC,EAAAusE,EAAAtsE,EAAAqvE,GACAl5D,SAAAvZ,EAAAwxE,gBACAxxE,EAAA0yE,YAAAlsE,IAGAxG,EAAA,IAAA+lB,KAAAvf,EAAAoB,EAAA+jC,EAAAxoC,EAAAusE,EAAAtsE,EAAAqvE,GAGAzyE,IA+6BA+Z,MAAA,KAAAqzC,GACA8jB,EAAA1qC,EAAA6qC,QAAA7qC,EAAAm6B,GAAAsK,YAAAzkC,EAAAm6B,GAAAgS,SAIA,MAAAnsC,EAAAi7B,MACAj7B,EAAAm6B,GAAAiS,cAAApsC,EAAAm6B,GAAAkS,gBAAArsC,EAAAi7B,MAGAj7B,EAAAgsC,WACAhsC,EAAAshC,GAAAI,IAAA,IAIA1hC,EAAAohC,SAAA,IAAAphC,EAAAohC,GAAAj8B,GAAAnF,EAAAohC,GAAAj8B,IAAAulC,IACA3R,EAAA/4B,GAAA85B,iBAAA,IA+DA,IAAAwS,GAAA,mJACAC,GAAA,8IAEAC,GAAA,wBAEAC,GAAA,CACA,uCACA,iCACA,kCACA,6BAA6B,GAC7B,2BACA,yBAA0B,GAC1B,4BACA,qBAEA,6BACA,4BAAkC,GAClC,qBAIAC,GAAA,CACA,wCACA,uCACA,8BACA,sBACA,oCACA,mCACA,0BACA,oBACA,eAGAC,GAAA,sBAGA,SAAAC,GAAA5sC,GACA,IAAArmC,EAAAkD,EAGAgwE,EAAAC,EAAAC,EAAAC,EAFArgE,EAAAqzB,EAAA86B,GACAltD,EAAA0+D,GAAA7gE,KAAAkB,IAAA4/D,GAAA9gE,KAAAkB,GAGA,GAAAiB,EAAA,CAGA,IAFAmrD,EAAA/4B,GAAA05B,KAAA,EAEA//D,EAAA,EAAAkD,EAAA4vE,GAAA5yE,OAA4CF,EAAAkD,EAAOlD,IACnD,GAAA8yE,GAAA9yE,GAAA,GAAA8R,KAAAmC,EAAA,KACAk/D,EAAAL,GAAA9yE,GAAA,GACAkzE,GAAA,IAAAJ,GAAA9yE,GAAA,GACA,MAGA,SAAAmzE,EAEA,YADA9sC,EAAA+5B,UAAA,GAGA,GAAAnsD,EAAA,IACA,IAAAjU,EAAA,EAAAkD,EAAA6vE,GAAA7yE,OAAgDF,EAAAkD,EAAOlD,IACvD,GAAA+yE,GAAA/yE,GAAA,GAAA8R,KAAAmC,EAAA,KAEAm/D,GAAAn/D,EAAA,SAAA8+D,GAAA/yE,GAAA,GACA,MAGA,SAAAozE,EAEA,YADA/sC,EAAA+5B,UAAA,GAIA,IAAA8S,GAAA,MAAAE,EAEA,YADA/sC,EAAA+5B,UAAA,GAGA,GAAAnsD,EAAA,IACA,IAAA4+D,GAAA/gE,KAAAmC,EAAA,IAIA,YADAoyB,EAAA+5B,UAAA,GAFAiT,EAAA,IAMAhtC,EAAA+6B,GAAA+R,GAAAC,GAAA,KAAAC,GAAA,IACAC,GAAAjtC,QAEAA,EAAA+5B,UAAA,EAKA,IAAAF,GAAA,0LAkBA,SAAAqT,GAAAC,GACA,IAAAxnB,EAAA73C,SAAAq/D,EAAA,IACA,OAAAxnB,GAAA,GACA,IAAAA,EACSA,GAAA,IACT,KAAAA,EAEAA,EAsBA,IAAAynB,GAAA,CACAC,GAAA,EACAC,IAAA,EACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,KAiBA,SAAAC,GAAA/tC,GACA,IAzEAmtC,EAAAa,EAAAC,EAAAC,EAAAC,EAAAC,EACA94E,EAwEAsY,EAAAisD,GAAApuD,KAAAu0B,EAAA86B,GA7CAjjE,QAAA,yBAAAA,QAAA,gBAAAA,QAAA,aAAAA,QAAA,cA8CA,GAAA+V,EAAA,CACA,IAAAygE,GA3EAlB,EA2EAv/D,EAAA,GA3EAogE,EA2EApgE,EAAA,GA3EAqgE,EA2EArgE,EAAA,GA3EAsgE,EA2EAtgE,EAAA,GA3EAugE,EA2EAvgE,EAAA,GA3EAwgE,EA2EAxgE,EAAA,GA1EAtY,EAAA,CACA43E,GAAAC,GACAlK,GAAA3tD,QAAA04D,GACAlgE,SAAAmgE,EAAA,IACAngE,SAAAogE,EAAA,IACApgE,SAAAqgE,EAAA,KAGAC,GACA94E,EAAAkF,KAAAsT,SAAAsgE,EAAA,KAGA94E,GA+DA,IA7CA,SAAAg5E,EAAAC,EAAAvuC,GACA,GAAAsuC,EAAA,CAEA,IAAAE,EAAA1I,GAAAxwD,QAAAg5D,GACAG,EAAA,IAAAlvD,KAAAgvD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAApC,SACA,GAAAqC,IAAAC,EAGA,OAFA1V,EAAA/4B,GAAA85B,iBAAA,EACA95B,EAAA+5B,UAAA,GACA,EAGA,SAkCA2U,CAAA9gE,EAAA,GAAAygE,EAAAruC,GACA,OAGAA,EAAAshC,GAAA+M,EACAruC,EAAAi7B,KAvBA,SAAA0T,EAAAC,EAAAC,GACA,GAAAF,EACA,OAAAvB,GAAAuB,GACS,GAAAC,EAET,SAEA,IAAAE,EAAAhhE,SAAA+gE,EAAA,IACAztE,EAAA0tE,EAAA,IAAAnyE,GAAAmyE,EAAA1tE,GAAA,IACA,UAAAzE,EAAAyE,EAcA2tE,CAAAnhE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAoyB,EAAAm6B,GAAA6J,GAAAzwD,MAAA,KAAAysB,EAAAshC,IACAthC,EAAAm6B,GAAAiS,cAAApsC,EAAAm6B,GAAAkS,gBAAArsC,EAAAi7B,MAEAlC,EAAA/4B,GAAA65B,SAAA,OAEA75B,EAAA+5B,UAAA,EAgDA,SAAAkT,GAAAjtC,GAEA,GAAAA,EAAA+6B,KAAA1C,EAAA2W,SAIA,GAAAhvC,EAAA+6B,KAAA1C,EAAA4W,SAAA,CAIAjvC,EAAAshC,GAAA,GACAvI,EAAA/4B,GAAAi5B,OAAA,EAGA,IACAt/D,EAAA40E,EAAAtN,EAAA1C,EAAA2Q,EADAviE,EAAA,GAAAqzB,EAAA86B,GAEAqU,EAAAxiE,EAAA9S,OACAu1E,EAAA,EAIA,IAFAnO,EAAArC,EAAA5+B,EAAA+6B,GAAA/6B,EAAAo7B,SAAAxtD,MAAAswD,IAAA,GAEAvkE,EAAA,EAAmBA,EAAAsnE,EAAApnE,OAAmBF,IACtC4kE,EAAA0C,EAAAtnE,IACA40E,GAAA5hE,EAAAiB,MAAA8yD,GAAAnC,EAAAv+B,KAAA,WAIAkvC,EAAAviE,EAAAkG,OAAA,EAAAlG,EAAA2I,QAAAi5D,KACA10E,OAAA,GACAk/D,EAAA/4B,GAAAm5B,YAAA3+D,KAAA00E,GAEAviE,IAAAtB,MAAAsB,EAAA2I,QAAAi5D,KAAA10E,QACAu1E,GAAAb,EAAA10E,QAGAwkE,EAAAE,IACAgQ,EACAxV,EAAA/4B,GAAAi5B,OAAA,EAGAF,EAAA/4B,GAAAk5B,aAAA1+D,KAAA+jE,GAEA8C,GAAA9C,EAAAgQ,EAAAvuC,IAEAA,EAAAs6B,UAAAiU,GACAxV,EAAA/4B,GAAAk5B,aAAA1+D,KAAA+jE,GAKAxF,EAAA/4B,GAAAq5B,cAAA8V,EAAAC,EACAziE,EAAA9S,OAAA,GACAk/D,EAAA/4B,GAAAm5B,YAAA3+D,KAAAmS,GAIAqzB,EAAAshC,GAAAI,KAAA,KACA,IAAA3I,EAAA/4B,GAAAu6B,SACAv6B,EAAAshC,GAAAI,IAAA,IACA3I,EAAA/4B,GAAAu6B,aAAAzgE,GAGAi/D,EAAA/4B,GAAA25B,gBAAA35B,EAAAshC,GAAAj2D,MAAA,GACA0tD,EAAA/4B,GAAA45B,SAAA55B,EAAAwnC,UAEAxnC,EAAAshC,GAAAI,IAOA,SAAA/I,EAAAnT,EAAAoU,GACA,IAAAyV,EAEA,aAAAzV,EAEApU,EAEA,MAAAmT,EAAA2W,aACA3W,EAAA2W,aAAA9pB,EAAAoU,GACS,MAAAjB,EAAA4O,OAET8H,EAAA1W,EAAA4O,KAAA3N,KACApU,EAAA,KACAA,GAAA,IAEA6pB,GAAA,KAAA7pB,IACAA,EAAA,GAEAA,GAGAA,EA5BA+pB,CAAAvvC,EAAAo7B,QAAAp7B,EAAAshC,GAAAI,IAAA1hC,EAAAwnC,WAEAgD,GAAAxqC,GACAoqC,GAAApqC,QA7DA+tC,GAAA/tC,QAJA4sC,GAAA5sC,GAmKA,SAAAwvC,GAAAxvC,GACA,IAAA4mB,EAAA5mB,EAAA86B,GACA3iE,EAAA6nC,EAAA+6B,GAIA,OAFA/6B,EAAAo7B,QAAAp7B,EAAAo7B,SAAAyO,GAAA7pC,EAAAg7B,IAEA,OAAApU,QAAA9sD,IAAA3B,GAAA,KAAAyuD,EACA6T,EAAA,CAAkCnB,WAAA,KAGlC,iBAAA1S,IACA5mB,EAAA86B,GAAAlU,EAAA5mB,EAAAo7B,QAAAqU,SAAA7oB,IAGA4U,EAAA5U,GACA,IAAA0U,EAAA8O,GAAAxjB,KACS2R,EAAA3R,GACT5mB,EAAAm6B,GAAAvT,EACSj0C,EAAAxa,GAtFT,SAAA6nC,GACA,IAAA0vC,EACAC,EAEAC,EACAj2E,EACAk2E,EAEA,OAAA7vC,EAAA+6B,GAAAlhE,OAGA,OAFAk/D,EAAA/4B,GAAAw5B,eAAA,OACAx5B,EAAAm6B,GAAA,IAAA56C,KAAA+P,MAIA,IAAA31B,EAAA,EAAmBA,EAAAqmC,EAAA+6B,GAAAlhE,OAAsBF,IACzCk2E,EAAA,EACAH,EAAA9U,EAAA,GAAsC56B,GACtC,MAAAA,EAAA6qC,UACA6E,EAAA7E,QAAA7qC,EAAA6qC,SAEA6E,EAAA3U,GAAA/6B,EAAA+6B,GAAAphE,GACAszE,GAAAyC,GAEA9gE,EAAA8gE,KAKAG,GAAA9W,EAAA2W,GAAArW,cAGAwW,GAAA,GAAA9W,EAAA2W,GAAAxW,aAAAr/D,OAEAk/D,EAAA2W,GAAAI,MAAAD,GAEA,MAAAD,GAAAC,EAAAD,KACAA,EAAAC,EACAF,EAAAD,IAIA/6D,EAAAqrB,EAAA2vC,GAAAD,GA8CAK,CAAA/vC,GACS7nC,EACT80E,GAAAjtC,GAYA,SAAAA,GACA,IAAA4mB,EAAA5mB,EAAA86B,GACAxC,EAAA1R,GACA5mB,EAAAm6B,GAAA,IAAA56C,KAAA84C,EAAAriE,OACSuiE,EAAA3R,GACT5mB,EAAAm6B,GAAA,IAAA56C,KAAAqnC,EAAA6D,WACS,iBAAA7D,EAxPT,SAAA5mB,GACA,IAAA6gC,EAAA8L,GAAAlhE,KAAAu0B,EAAA86B,IAEA,OAAA+F,GAKA+L,GAAA5sC,IACA,IAAAA,EAAA+5B,kBACA/5B,EAAA+5B,SAKAgU,GAAA/tC,IACA,IAAAA,EAAA+5B,kBACA/5B,EAAA+5B,SAMA1B,EAAA2X,wBAAAhwC,MAnBAA,EAAAm6B,GAAA,IAAA56C,MAAAshD,EAAA,IAqPAoP,CAAAjwC,GACSrtB,EAAAi0C,IACT5mB,EAAAshC,GAAA9oE,EAAAouD,EAAAv7C,MAAA,YAAAkD,GACA,OAAAT,SAAAS,EAAA,MAEAi8D,GAAAxqC,IACSltB,EAAA8zC,GAtET,SAAA5mB,GACA,IAAAA,EAAAm6B,GAAA,CAIA,IAAAxgE,EAAA2jE,EAAAt9B,EAAA86B,IACA96B,EAAAshC,GAAA9oE,EAAA,CAAAmB,EAAAgsD,KAAAhsD,EAAAF,MAAAE,EAAAzB,KAAAyB,EAAAH,KAAAG,EAAA6rD,KAAA7rD,EAAA4rD,OAAA5rD,EAAA2rD,OAAA3rD,EAAAwrD,aAAA,SAAA52C,GACA,OAAAA,GAAAT,SAAAS,EAAA,MAGAi8D,GAAAxqC,IA6DAkwC,CAAAlwC,GACS7hB,EAAAyoC,GAET5mB,EAAAm6B,GAAA,IAAA56C,KAAAqnC,GAEAyR,EAAA2X,wBAAAhwC,GA7BAmwC,CAAAnwC,GAGApxB,EAAAoxB,KACAA,EAAAm6B,GAAA,MAGAn6B,IA0BA,SAAA64B,GAAAjS,EAAAzuD,EAAAwgE,EAAAC,EAAAwX,GACA,IAnEAptD,EAmEA7hB,EAAA,GAoBA,OAlBA,IAAAw3D,IAAA,IAAAA,IACAC,EAAAD,EACAA,OAAA7+D,IAGAgZ,EAAA8zC,IA5iFA,SAAAr4C,GACA,GAAAqE,OAAAy9D,oBACA,WAAAz9D,OAAAy9D,oBAAA9hE,GAAA1U,OAEA,IAAA6F,EACA,IAAAA,KAAA6O,EACA,GAAAA,EAAA3S,eAAA8D,GACA,SAGA,SAkiFA4wE,CAAA1pB,IACAj0C,EAAAi0C,IAAA,IAAAA,EAAA/sD,UACA+sD,OAAA9sD,GAIAqH,EAAA05D,kBAAA,EACA15D,EAAA0pE,QAAA1pE,EAAA+5D,OAAAkV,EACAjvE,EAAA65D,GAAArC,EACAx3D,EAAA25D,GAAAlU,EACAzlD,EAAA45D,GAAA5iE,EACAgJ,EAAAm5D,QAAA1B,GArFA51C,EAAA,IAAAs4C,EAAA8O,GAAAoF,GAuFAruE,MAtFA6qE,WAEAhpD,EAAA4b,IAAA,OACA5b,EAAAgpD,cAAAlyE,GAGAkpB,EAmFA,SAAA0oD,GAAA9kB,EAAAzuD,EAAAwgE,EAAAC,GACA,OAAAC,GAAAjS,EAAAzuD,EAAAwgE,EAAAC,GAAA,GAxQAP,EAAA2X,wBAAAhY,EACA,iVAIA,SAAAh4B,GACAA,EAAAm6B,GAAA,IAAA56C,KAAAygB,EAAA86B,IAAA96B,EAAA6qC,QAAA,cAKAxS,EAAA2W,SAAA,aAGA3W,EAAA4W,SAAA,aA6PA,IAAAsB,GAAAvY,EACA,qGACA,WACA,IAAAwY,EAAA9E,GAAAn4D,MAAA,KAAAhI,WACA,OAAAhY,KAAAqb,WAAA4hE,EAAA5hE,UACA4hE,EAAAj9E,UAAAi9E,EAEA/V,MAKAgW,GAAAzY,EACA,qGACA,WACA,IAAAwY,EAAA9E,GAAAn4D,MAAA,KAAAhI,WACA,OAAAhY,KAAAqb,WAAA4hE,EAAA5hE,UACA4hE,EAAAj9E,UAAAi9E,EAEA/V,MAUA,SAAAiW,GAAAr9D,EAAAs9D,GACA,IAAA3tD,EAAArpB,EAIA,GAHA,IAAAg3E,EAAA92E,QAAA8Y,EAAAg+D,EAAA,MACAA,IAAA,KAEAA,EAAA92E,OACA,OAAA6xE,KAGA,IADA1oD,EAAA2tD,EAAA,GACAh3E,EAAA,EAAmBA,EAAAg3E,EAAA92E,SAAoBF,EACvCg3E,EAAAh3E,GAAAiV,YAAA+hE,EAAAh3E,GAAA0Z,GAAA2P,KACAA,EAAA2tD,EAAAh3E,IAGA,OAAAqpB,EAgBA,IAIA4tD,GAAA,+EAgCA,SAAAC,GAAA/xD,GACA,IAAA2+C,EAAAH,EAAAx+C,GACAgyD,EAAArT,EAAA9X,MAAA,EACAorB,EAAAtT,EAAA/X,SAAA,EACAid,EAAAlF,EAAAhkE,OAAA,EACAu3E,EAAAvT,EAAAhY,MAAAgY,EAAAwT,SAAA,EACAC,EAAAzT,EAAAvlE,KAAA,EACA6uE,EAAAtJ,EAAAjY,MAAA,EACAyhB,EAAAxJ,EAAAlY,QAAA,EACA6hB,EAAA3J,EAAAnY,QAAA,EACAuC,EAAA4V,EAAAtY,aAAA,EAEA5xD,KAAAwmE,SA1CA,SAAA34D,GACA,QAAA0J,KAAA1J,EACA,QAAAkU,GAAAhK,KAAAslE,GAAA9lE,IAAA,MAAA1J,EAAA0J,IAAA/V,MAAAqM,EAAA0J,IACA,SAKA,IADA,IAAAqmE,GAAA,EACAx3E,EAAA,EAAuBA,EAAAi3E,GAAA/2E,SAAqBF,EAC5C,GAAAyH,EAAAwvE,GAAAj3E,IAAA,CACA,GAAAw3E,EACA,SAEApjE,WAAA3M,EAAAwvE,GAAAj3E,OAAAgiE,EAAAv6D,EAAAwvE,GAAAj3E,OACAw3E,GAAA,GAKA,SAuBAC,CAAA3T,GAGAlqE,KAAA89E,eAAAxpB,EACA,IAAAuf,EACA,IAAAH,EACA,IAAAF,EAAA,MAGAxzE,KAAA+9E,OAAAJ,EACA,EAAAF,EAIAz9E,KAAAg+E,SAAA5O,EACA,EAAAoO,EACA,GAAAD,EAEAv9E,KAAA0uB,MAAA,GAEA1uB,KAAA6nE,QAAAyO,KAEAt2E,KAAAi+E,UAGA,SAAAC,GAAAljE,GACA,OAAAA,aAAAsiE,GAGA,SAAAa,GAAAhW,GACA,OAAAA,EAAA,GACA,EAAAn8D,KAAAqM,OAAA,EAAA8vD,GAEAn8D,KAAAqM,MAAA8vD,GAMA,SAAA1wC,GAAAuzC,EAAAoT,GACArT,EAAAC,EAAA,eACA,IAAAvzC,EAAAz3B,KAAAq+E,YACA30B,EAAA,IAKA,OAJAjyB,EAAA,IACAA,KACAiyB,EAAA,KAEAA,EAAA4gB,KAAA7yC,EAAA,OAAA2mD,EAAA9T,IAAA,UAIA7yC,GAAA,SACAA,GAAA,SAIAs1C,GAAA,IAAAH,IACAG,GAAA,KAAAH,IACAe,GAAA,oBAAAta,EAAArxC,EAAAyqB,GACAA,EAAA6qC,SAAA,EACA7qC,EAAAi7B,KAAA4W,GAAA1R,GAAAvZ,KAQA,IAAAkrB,GAAA,kBAEA,SAAAD,GAAAE,EAAAplE,GACA,IAAAsP,GAAAtP,GAAA,IAAAiB,MAAAmkE,GAEA,UAAA91D,EACA,YAGA,IAAA+R,EAAA/R,IAAApiB,OAAA,OACAm4E,GAAAhkD,EAAA,IAAApgB,MAAAkkE,KAAA,UACA7K,EAAA,GAAA+K,EAAA,GAAArW,EAAAqW,EAAA,IAEA,WAAA/K,EACA,EACA,MAAA+K,EAAA,GAAA/K,KAIA,SAAAgL,GAAArrB,EAAAnpC,GACA,IAAAuF,EAAAsuB,EACA,OAAA7zB,EAAAy9C,QACAl4C,EAAAvF,EAAAhM,QACA6/B,GAAAkqB,EAAA5U,IAAA2R,EAAA3R,KAAA6D,UAAAihB,GAAA9kB,GAAA6D,WAAAznC,EAAAynC,UAEAznC,EAAAm3C,GAAA+X,QAAAlvD,EAAAm3C,GAAA1P,UAAAnZ,GACA+mB,EAAAkD,aAAAv4C,GAAA,GACAA,GAEA0oD,GAAA9kB,GAAAurB,QAIA,SAAAC,GAAAhxE,GAGA,WAAA7B,KAAAqM,MAAAxK,EAAA+4D,GAAAkY,oBAAA,IAqJA,SAAAC,KACA,QAAA/+E,KAAAqb,WAAArb,KAAA2nE,QAAA,IAAA3nE,KAAA4nE,QA/IA9C,EAAAkD,aAAA,aAmJA,IAAAgX,GAAA,2DAKAC,GAAA,sKAEA,SAAAC,GAAA7rB,EAAA97C,GACA,IAGAmyC,EACAy1B,EACAC,EAiFA5vD,EAAAytD,EACAxtD,EAvFAlE,EAAA8nC,EAEAh5C,EAAA,KAuDA,OAlDA6jE,GAAA7qB,GACA9nC,EAAA,CACAmtD,GAAArlB,EAAAyqB,cACAlsC,EAAAyhB,EAAA0qB,MACApI,EAAAtiB,EAAA2qB,SAESpzD,EAAAyoC,IACT9nC,EAAA,GACAhU,EACAgU,EAAAhU,GAAA87C,EAEA9nC,EAAA+oC,aAAAjB,IAESh5C,EAAA2kE,GAAA9mE,KAAAm7C,KACT3J,EAAA,MAAArvC,EAAA,QACAkR,EAAA,CACA9e,EAAA,EACAmlC,EAAAw2B,EAAA/tD,EAAA6zD,KAAAxkB,EACAtgD,EAAAg/D,EAAA/tD,EAAA8zD,KAAAzkB,EACA77C,EAAAu6D,EAAA/tD,EAAA+zD,KAAA1kB,EACArgD,EAAA++D,EAAA/tD,EAAAg0D,KAAA3kB,EACAgvB,GAAAtQ,EAAA+V,GAAA,IAAA9jE,EAAAi0D,MAAA5kB,KAESrvC,EAAA4kE,GAAA/mE,KAAAm7C,KACT3J,EAAA,MAAArvC,EAAA,QACAkR,EAAA,CACA9e,EAAA4yE,GAAAhlE,EAAA,GAAAqvC,GACAisB,EAAA0J,GAAAhlE,EAAA,GAAAqvC,GACAx9C,EAAAmzE,GAAAhlE,EAAA,GAAAqvC,GACA9X,EAAAytC,GAAAhlE,EAAA,GAAAqvC,GACAtgD,EAAAi2E,GAAAhlE,EAAA,GAAAqvC,GACA77C,EAAAwxE,GAAAhlE,EAAA,GAAAqvC,GACArgD,EAAAg2E,GAAAhlE,EAAA,GAAAqvC,KAES,MAAAn+B,EACTA,EAAA,GACS,iBAAAA,IAAA,SAAAA,GAAA,OAAAA,KA2CTiE,EA1CA2oD,GAAA5sD,EAAApT,MA0CA8kE,EA1CA9E,GAAA5sD,EAAAnT,IAAAgnE,EA4CA5vD,EAAAnU,WAAA4hE,EAAA5hE,WAIA4hE,EAAAyB,GAAAzB,EAAAztD,GACAA,EAAA8vD,SAAArC,GACAxtD,EAAA8vD,GAAA/vD,EAAAytD,KAEAxtD,EAAA8vD,GAAAtC,EAAAztD,IACA8kC,cAAA7kC,EAAA6kC,aACA7kC,EAAA2/C,QAAA3/C,EAAA2/C,QAGA3/C,GAZA,CAAoB6kC,aAAA,EAAA8a,OAAA,IA3CpB7jD,EAAA,IACAmtD,GAAA0G,EAAA9qB,aACA/oC,EAAAoqD,EAAAyJ,EAAAhQ,QAGA+P,EAAA,IAAA7B,GAAA/xD,GAEA2yD,GAAA7qB,IAAA6R,EAAA7R,EAAA,aACA8rB,EAAAtX,QAAAxU,EAAAwU,SAGAsX,EAMA,SAAAE,GAAAG,EAAA91B,GAIA,IAAAj6B,EAAA+vD,GAAAhlE,WAAAglE,EAAAl7E,QAAA,UAEA,OAAA9C,MAAAiuB,GAAA,EAAAA,GAAAi6B,EAGA,SAAA61B,GAAA/vD,EAAAytD,GACA,IAAAxtD,EAAA,GAUA,OARAA,EAAA2/C,OAAA6N,EAAA/2E,QAAAspB,EAAAtpB,QACA,IAAA+2E,EAAA7qB,OAAA5iC,EAAA4iC,QACA5iC,EAAAtR,QAAAmtB,IAAA5b,EAAA2/C,OAAA,KAAAqQ,QAAAxC,MACAxtD,EAAA2/C,OAGA3/C,EAAA6kC,cAAA2oB,GAAAztD,EAAAtR,QAAAmtB,IAAA5b,EAAA2/C,OAAA,KAEA3/C,EAsBA,SAAAiwD,GAAAC,EAAA7kE,GACA,gBAAA/N,EAAA6yE,GACA,IAAApoC,EAWA,OATA,OAAAooC,GAAAp+E,OAAAo+E,KACA1W,EAAApuD,EAAA,YAAAA,EAAA,uDAAAA,EAAA,kGAEA08B,EAAAzqC,EAA0BA,EAAA6yE,EAAcA,EAAApoC,GAKxCqoC,GAAA7/E,KADAk/E,GADAnyE,EAAA,iBAAAA,OACA6yE,GACAD,GACA3/E,MAIA,SAAA6/E,GAAAvU,EAAA//C,EAAAu0D,EAAA9X,GACA,IAAA1T,EAAA/oC,EAAAuyD,cACAH,EAAAQ,GAAA5yD,EAAAwyD,OACA3O,EAAA+O,GAAA5yD,EAAAyyD,SAEA1S,EAAAjwD,YAKA2sD,EAAA,MAAAA,KAEAoH,GACAO,GAAArE,EAAAvqE,GAAAuqE,EAAA,SAAA8D,EAAA0Q,GAEAnC,GACA5O,GAAAzD,EAAA,OAAAvqE,GAAAuqE,EAAA,QAAAqS,EAAAmC,GAEAxrB,GACAgX,EAAA1E,GAAA+X,QAAArT,EAAA1E,GAAA1P,UAAA5C,EAAAwrB,GAEA9X,GACAlD,EAAAkD,aAAAsD,EAAAqS,GAAAvO,IApFA8P,GAAAp/D,GAAAw9D,GAAAzlE,UACAqnE,GAAAa,QAvVA,WACA,OAAAb,GAAAnjD,MA6aA,IAAAsP,GAAAq0C,GAAA,SACAh7E,GAAAg7E,IAAA,cA0HA,SAAAM,GAAAhyE,EAAAlC,GAEA,IAGAm0E,EAAAC,EAHAC,EAAA,IAAAr0E,EAAAsmD,OAAApkD,EAAAokD,SAAAtmD,EAAA5F,QAAA8H,EAAA9H,SAEAk6E,EAAApyE,EAAAkQ,QAAAmtB,IAAA80C,EAAA,UAcA,OAXAr0E,EAAAs0E,EAAA,GACAH,EAAAjyE,EAAAkQ,QAAAmtB,IAAA80C,EAAA,YAEAD,GAAAp0E,EAAAs0E,MAAAH,KAEAA,EAAAjyE,EAAAkQ,QAAAmtB,IAAA80C,EAAA,YAEAD,GAAAp0E,EAAAs0E,IAAAH,EAAAG,MAIAD,EAAAD,IAAA,EA6FA,SAAA9a,GAAA7tD,GACA,IAAA8oE,EAEA,YAAA95E,IAAAgR,EACAvX,KAAA6nE,QAAAuO,OAGA,OADAiK,EAAA/J,GAAA/+D,MAEAvX,KAAA6nE,QAAAwY,GAEArgF,MApGA8kE,EAAAwb,cAAA,uBACAxb,EAAAyb,iBAAA,yBAuGA,IAAAC,GAAA/b,EACA,kJACA,SAAAltD,GACA,YAAAhR,IAAAgR,EACAvX,KAAAmrE,aAEAnrE,KAAAolE,OAAA7tD,KAKA,SAAA4zD,KACA,OAAAnrE,KAAA6nE,QAGA,IAAA4Y,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,QAAAD,GAGA,SAAAE,GAAAC,EAAAC,GACA,OAAAD,EAAAC,OAGA,SAAAC,GAAAv0E,EAAAoB,EAAA+jC,GAEA,OAAAnlC,EAAA,KAAAA,GAAA,EAEA,IAAAuf,KAAAvf,EAAA,IAAAoB,EAAA+jC,GAAAgvC,GAEA,IAAA50D,KAAAvf,EAAAoB,EAAA+jC,GAAAslB,UAIA,SAAA+pB,GAAAx0E,EAAAoB,EAAA+jC,GAEA,OAAAnlC,EAAA,KAAAA,GAAA,EAEAuf,KAAA0kD,IAAAjkE,EAAA,IAAAoB,EAAA+jC,GAAAgvC,GAEA50D,KAAA0kD,IAAAjkE,EAAAoB,EAAA+jC,GAuKA,SAAAsvC,GAAAlW,EAAAmW,GACApW,EAAA,GAAAC,IAAA1kE,QAAA,EAAA66E,GA+DA,SAAAC,GAAA/tB,EAAAnB,EAAAgC,EAAA4c,EAAAC,GACA,IAAAsQ,EACA,aAAAhuB,EACAoe,GAAAzxE,KAAA8wE,EAAAC,GAAA3e,MAEAivB,EAAA1P,GAAAte,EAAAyd,EAAAC,GACA7e,EAAAmvB,IACAnvB,EAAAmvB,GAMA,SAAAxJ,EAAA3lB,EAAAgC,EAAA4c,EAAAC,GACA,IAAAuQ,EAAAnQ,GAAA0G,EAAA3lB,EAAAgC,EAAA4c,EAAAC,GACA9qE,EAAAwqE,GAAA6Q,EAAAlvB,KAAA,EAAAkvB,EAAA9P,WAKA,OAHAxxE,KAAAoyD,KAAAnsD,EAAA0qE,kBACA3wE,KAAAkG,MAAAD,EAAAsxE,eACAv3E,KAAAiG,OAAAuxE,cACAx3E,MAXA+X,KAAA/X,KAAAqzD,EAAAnB,EAAAgC,EAAA4c,EAAAC,IAjFAhG,EAAA,wBACA,OAAA/qE,KAAA63E,WAAA,MAGA9M,EAAA,wBACA,OAAA/qE,KAAAuhF,cAAA,MAOAL,GAAA,mBACAA,GAAA,oBACAA,GAAA,sBACAA,GAAA,uBAIAxX,EAAA,iBACAA,EAAA,oBAIAU,EAAA,cACAA,EAAA,iBAKA2C,GAAA,IAAAL,IACAK,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,QAAAP,GAAAN,GAEA0B,GAAA,yCAAAva,EAAAnB,EAAAzlB,EAAAu+B,GACA9Y,EAAA8Y,EAAA1rD,OAAA,MAAA8oD,EAAA/U,KAGAua,GAAA,qBAAAva,EAAAnB,EAAAzlB,EAAAu+B,GACA9Y,EAAA8Y,GAAAlG,EAAA6J,kBAAAtb,KAqDA0X,EAAA,sBAIArB,EAAA,eAIAU,EAAA,aAIA2C,GAAA,IAAAjB,GACA6B,GAAA,aAAAta,EAAArxC,GACAA,EAAAisD,IAAA,GAAA7F,EAAA/U,GAAA,KAWA0X,EAAA,0BAIArB,EAAA,YAGAU,EAAA,UAIA2C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,cAAAG,EAAA9H,GAEA,OAAA8H,EACA9H,EAAAoc,yBAAApc,EAAAqc,cACArc,EAAAsc,iCAGA/T,GAAA,WAAAO,IACAP,GAAA,cAAAta,EAAArxC,GACAA,EAAAksD,IAAA9F,EAAA/U,EAAAh5C,MAAA8xD,GAAA,MAKA,IAAAwV,GAAA9S,GAAA,WAIA9D,EAAA,qCAIArB,EAAA,mBAGAU,EAAA,eAIA2C,GAAA,MAAAT,IACAS,GAAA,OAAAf,GACA2B,GAAA,wBAAAta,EAAArxC,EAAAyqB,GACAA,EAAA8rC,WAAAnQ,EAAA/U,KAcA0X,EAAA,yBAIArB,EAAA,cAIAU,EAAA,aAIA2C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,WAAAS,IAIA,IAAAwT,GAAA/S,GAAA,cAIA9D,EAAA,yBAIArB,EAAA,cAIAU,EAAA,aAIA2C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,WAAAU,IAIA,IA+CArD,GA/CA6W,GAAAhT,GAAA,cAgDA,IA5CA9D,EAAA,mBACA,SAAA/qE,KAAA4xD,cAAA,OAGAmZ,EAAA,wBACA,SAAA/qE,KAAA4xD,cAAA,MAGAmZ,EAAA,6BACAA,EAAA,0BACA,UAAA/qE,KAAA4xD,gBAEAmZ,EAAA,2BACA,WAAA/qE,KAAA4xD,gBAEAmZ,EAAA,4BACA,WAAA/qE,KAAA4xD,gBAEAmZ,EAAA,6BACA,WAAA/qE,KAAA4xD,gBAEAmZ,EAAA,8BACA,WAAA/qE,KAAA4xD,gBAEAmZ,EAAA,+BACA,WAAA/qE,KAAA4xD,gBAMA8X,EAAA,oBAIAU,EAAA,kBAIA2C,GAAA,IAAAT,GAAAR,GACAiB,GAAA,KAAAT,GAAAP,GACAgB,GAAA,MAAAT,GAAAN,GAGAhB,GAAA,OAAwBA,GAAA1kE,QAAA,EAAmB0kE,IAAA,IAC3C+B,GAAA/B,GAAAyB,IAGA,SAAAqV,GAAAzuB,EAAArxC,GACAA,EAAAssD,IAAAlG,EAAA,UAAA/U,IAGA,IAAA2X,GAAA,IAAqBA,GAAA1kE,QAAA,EAAmB0kE,IAAA,IACxC2C,GAAA3C,GAAA8W,IAIA,IAAAC,GAAAlT,GAAA,mBAIA9D,EAAA,oBACAA,EAAA,qBAYA,IAAAiX,GAAAja,EAAAlwD,UAsFA,SAAAoqE,GAAA7oE,GACA,OAAAA,EArFA4oE,GAAA32C,OACA22C,GAAAzN,SAjuBA,SAAA/gB,EAAA3V,GAGA,IAAAp7C,EAAA+wD,GAAA2kB,KACA+J,EAAAxD,GAAAj8E,EAAAzC,MAAAg+C,QAAA,OACAp5C,EAAAkgE,EAAAqd,eAAAniF,KAAAkiF,IAAA,WAEA3W,EAAA1tB,IAAAsrB,EAAAtrB,EAAAj5C,IAAAi5C,EAAAj5C,GAAAmT,KAAA/X,KAAAyC,GAAAo7C,EAAAj5C,IAEA,OAAA5E,KAAA4E,OAAA2mE,GAAAvrE,KAAAmrE,aAAAoJ,SAAA3vE,EAAA5E,KAAAm4E,GAAA11E,MAytBAu/E,GAAA9jE,MAttBA,WACA,WAAA6pD,EAAA/nE,OAstBAgiF,GAAAjkC,KAvpBA,SAAAsV,EAAAyW,EAAAsY,GACA,IAAAC,EACAC,EACA/W,EAEA,IAAAvrE,KAAAqb,UACA,OAAA0gB,IAKA,KAFAsmD,EAAA3D,GAAArrB,EAAArzD,OAEAqb,UACA,OAAA0gB,IAOA,OAJAumD,EAAA,KAAAD,EAAAhE,YAAAr+E,KAAAq+E,aAEAvU,EAAAD,EAAAC,IAGA,WAAAyB,EAAAyU,GAAAhgF,KAAAqiF,GAAA,GAA6D,MAC7D,YAAA9W,EAAAyU,GAAAhgF,KAAAqiF,GAAyD,MACzD,cAAA9W,EAAAyU,GAAAhgF,KAAAqiF,GAAA,EAA+D,MAC/D,aAAA9W,GAAAvrE,KAAAqiF,GAAA,IAAwD,MACxD,aAAA9W,GAAAvrE,KAAAqiF,GAAA,IAAwD,MACxD,WAAA9W,GAAAvrE,KAAAqiF,GAAA,KAAuD,MACvD,UAAA9W,GAAAvrE,KAAAqiF,EAAAC,GAAA,MAAmE,MACnE,WAAA/W,GAAAvrE,KAAAqiF,EAAAC,GAAA,OAAqE,MACrE,QAAA/W,EAAAvrE,KAAAqiF,EAGA,OAAAD,EAAA7W,EAAArD,EAAAqD,IAynBAyW,GAAA/jC,MA5ZA,SAAA6rB,GACA,IAAAtW,EAEA,QAAAjtD,KADAujE,EAAAD,EAAAC,KACA,gBAAAA,IAAA9pE,KAAAqb,UACA,OAAArb,KAGA,IAAAuiF,EAAAviF,KAAA2nE,OAAAsZ,GAAAD,GAEA,OAAAlX,GACA,WACAtW,EAAA+uB,EAAAviF,KAAAoyD,OAAA,SACA,MACA,cACAoB,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAkG,QAAA,SACA,MACA,YACAstD,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAA,OACA,MACA,WACAstD,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAiG,OAAAjG,KAAAk0D,UAAA,KACA,MACA,cACAV,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAiG,QAAAjG,KAAAm0D,aAAA,QACA,MACA,UACA,WACAX,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAiG,OAAA,KACA,MACA,WACAutD,EAAAxzD,KAAA4mE,GAAA1P,UACA1D,GAAAmtB,GAAAE,GAAArtB,GAAAxzD,KAAA2nE,OAAA,EAAA3nE,KAAAq+E,YAAAqC,IAAAC,IAAA,EACA,MACA,aACAntB,EAAAxzD,KAAA4mE,GAAA1P,UACA1D,GAAAktB,GAAAG,GAAArtB,EAAAktB,IAAA,EACA,MACA,aACAltB,EAAAxzD,KAAA4mE,GAAA1P,UACA1D,GAAAitB,GAAAI,GAAArtB,EAAAitB,IAAA,EAMA,OAFAzgF,KAAA4mE,GAAA+X,QAAAnrB,GACAsR,EAAAkD,aAAAhoE,MAAA,GACAA,MAgXAgiF,GAAAp9E,OA/iBA,SAAA49E,GACAA,IACAA,EAAAxiF,KAAA++E,QAAAja,EAAAyb,iBAAAzb,EAAAwb,eAEA,IAAA/U,EAAAH,EAAAprE,KAAAwiF,GACA,OAAAxiF,KAAAmrE,aAAAsX,WAAAlX,IA2iBAyW,GAAA7pE,KAxiBA,SAAAq7C,EAAAkvB,GACA,OAAA1iF,KAAAqb,YACA4sD,EAAAzU,MAAAn4C,WACA88D,GAAA3kB,GAAAn4C,WACA6jE,GAAA,CAAmC9mE,GAAApY,KAAAmY,KAAAq7C,IAAqB4R,OAAAplE,KAAAolE,UAAAud,UAAAD,GAExD1iF,KAAAmrE,aAAAM,eAmiBAuW,GAAAY,QA/hBA,SAAAF,GACA,OAAA1iF,KAAAmY,KAAAggE,KAAAuK,IA+hBAV,GAAA5pE,GA5hBA,SAAAo7C,EAAAkvB,GACA,OAAA1iF,KAAAqb,YACA4sD,EAAAzU,MAAAn4C,WACA88D,GAAA3kB,GAAAn4C,WACA6jE,GAAA,CAAmC/mE,KAAAnY,KAAAoY,GAAAo7C,IAAqB4R,OAAAplE,KAAAolE,UAAAud,UAAAD,GAExD1iF,KAAAmrE,aAAAM,eAuhBAuW,GAAAa,MAnhBA,SAAAH,GACA,OAAA1iF,KAAAoY,GAAA+/D,KAAAuK,IAmhBAV,GAAAjhF,IAxiGA,SAAA+oE,GAEA,OAAAX,EAAAnpE,KADA8pE,EAAAD,EAAAC,KAEA9pE,KAAA8pE,KAEA9pE,MAoiGAgiF,GAAAc,UAxUA,WACA,OAAAtd,EAAAxlE,MAAA6lE,UAwUAmc,GAAAvC,QA5tBA,SAAApsB,EAAAyW,GACA,IAAAiZ,EAAA9a,EAAA5U,KAAA8kB,GAAA9kB,GACA,SAAArzD,KAAAqb,YAAA0nE,EAAA1nE,aAIA,iBADAyuD,EAAAD,EAAAC,IAAA,eAEA9pE,KAAAk3D,UAAA6rB,EAAA7rB,UAEA6rB,EAAA7rB,UAAAl3D,KAAAke,QAAA8/B,QAAA8rB,GAAA5S,YAotBA8qB,GAAA1C,SAhtBA,SAAAjsB,EAAAyW,GACA,IAAAiZ,EAAA9a,EAAA5U,KAAA8kB,GAAA9kB,GACA,SAAArzD,KAAAqb,YAAA0nE,EAAA1nE,aAIA,iBADAyuD,EAAAD,EAAAC,IAAA,eAEA9pE,KAAAk3D,UAAA6rB,EAAA7rB,UAEAl3D,KAAAke,QAAA+/B,MAAA6rB,GAAA5S,UAAA6rB,EAAA7rB,YAwsBA8qB,GAAAgB,UApsBA,SAAA7qE,EAAAC,EAAA0xD,EAAAmZ,GACA,IAAAC,EAAAjb,EAAA9vD,KAAAggE,GAAAhgE,GACAgrE,EAAAlb,EAAA7vD,KAAA+/D,GAAA//D,GACA,SAAApY,KAAAqb,WAAA6nE,EAAA7nE,WAAA8nE,EAAA9nE,cAIA,OADA4nE,KAAA,MACA,GAAAjjF,KAAAy/E,QAAAyD,EAAApZ,IAAA9pE,KAAAs/E,SAAA4D,EAAApZ,MACA,MAAAmZ,EAAA,GAAAjjF,KAAAs/E,SAAA6D,EAAArZ,IAAA9pE,KAAAy/E,QAAA0D,EAAArZ,MA6rBAkY,GAAAoB,OA1rBA,SAAA/vB,EAAAyW,GACA,IACAuZ,EADAN,EAAA9a,EAAA5U,KAAA8kB,GAAA9kB,GAEA,SAAArzD,KAAAqb,YAAA0nE,EAAA1nE,aAIA,iBADAyuD,EAAAD,EAAAC,IAAA,eAEA9pE,KAAAk3D,YAAA6rB,EAAA7rB,WAEAmsB,EAAAN,EAAA7rB,UACAl3D,KAAAke,QAAA8/B,QAAA8rB,GAAA5S,WAAAmsB,MAAArjF,KAAAke,QAAA+/B,MAAA6rB,GAAA5S,aAgrBA8qB,GAAAsB,cA5qBA,SAAAjwB,EAAAyW,GACA,OAAA9pE,KAAAojF,OAAA/vB,EAAAyW,IAAA9pE,KAAAy/E,QAAApsB,EAAAyW,IA4qBAkY,GAAAuB,eAzqBA,SAAAlwB,EAAAyW,GACA,OAAA9pE,KAAAojF,OAAA/vB,EAAAyW,IAAA9pE,KAAAs/E,SAAAjsB,EAAAyW,IAyqBAkY,GAAA3mE,QAvVA,WACA,OAAAA,EAAArb,OAuVAgiF,GAAAxB,QACAwB,GAAA5c,UACA4c,GAAA7W,cACA6W,GAAA/1E,IAAAixE,GACA8E,GAAAj2E,IAAAixE,GACAgF,GAAAwB,aAzVA,WACA,OAAApiE,EAAA,GAAwBokD,EAAAxlE,QAyVxBgiF,GAAAz9E,IA9iGA,SAAAulE,EAAA3uD,GACA,oBAAA2uD,EAGA,IADA,IAAA2Z,EApTA,SAAAC,GACA,IAAA5Z,EAAA,GACA,QAAA6Z,KAAAD,EACA5Z,EAAA7iE,KAAA,CAAwB6jD,KAAA64B,EAAAtZ,SAAAF,EAAAwZ,KAKxB,OAHA7Z,EAAAhjE,KAAA,SAAAkH,EAAAlC,GACA,OAAAkC,EAAAq8D,SAAAv+D,EAAAu+D,WAEAP,EA4SA8Z,CADA9Z,EAAAC,EAAAD,IAEA1jE,EAAA,EAA2BA,EAAAq9E,EAAAn9E,OAAwBF,IACnDpG,KAAAyjF,EAAAr9E,GAAA0kD,MAAAgf,EAAA2Z,EAAAr9E,GAAA0kD,YAIA,GAAAqe,EAAAnpE,KADA8pE,EAAAD,EAAAC,KAEA,OAAA9pE,KAAA8pE,GAAA3uD,GAGA,OAAAnb,MAkiGAgiF,GAAAhkC,QAleA,SAAA8rB,GACA,IAAAtW,EAEA,QAAAjtD,KADAujE,EAAAD,EAAAC,KACA,gBAAAA,IAAA9pE,KAAAqb,UACA,OAAArb,KAGA,IAAAuiF,EAAAviF,KAAA2nE,OAAAsZ,GAAAD,GAEA,OAAAlX,GACA,WACAtW,EAAA+uB,EAAAviF,KAAAoyD,OAAA,KACA,MACA,cACAoB,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAkG,QAAA,KACA,MACA,YACAstD,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAA,GACA,MACA,WACAstD,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAiG,OAAAjG,KAAAk0D,WACA,MACA,cACAV,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAiG,QAAAjG,KAAAm0D,aAAA,IACA,MACA,UACA,WACAX,EAAA+uB,EAAAviF,KAAAoyD,OAAApyD,KAAAkG,QAAAlG,KAAAiG,QACA,MACA,WACAutD,EAAAxzD,KAAA4mE,GAAA1P,UACA1D,GAAAqtB,GAAArtB,GAAAxzD,KAAA2nE,OAAA,EAAA3nE,KAAAq+E,YAAAqC,IAAAC,IACA,MACA,aACAntB,EAAAxzD,KAAA4mE,GAAA1P,UACA1D,GAAAqtB,GAAArtB,EAAAktB,IACA,MACA,aACAltB,EAAAxzD,KAAA4mE,GAAA1P,UACA1D,GAAAqtB,GAAArtB,EAAAitB,IAMA,OAFAzgF,KAAA4mE,GAAA+X,QAAAnrB,GACAsR,EAAAkD,aAAAhoE,MAAA,GACAA,MAsbAgiF,GAAAt9E,YACAs9E,GAAA6B,QAxXA,WACA,IAAAh2E,EAAA7N,KACA,OAAA6N,EAAAukD,OAAAvkD,EAAA3H,QAAA2H,EAAA5H,OAAA4H,EAAAokD,OAAApkD,EAAAmkD,SAAAnkD,EAAAkkD,SAAAlkD,EAAA+jD,gBAuXAowB,GAAA8B,SApXA,WACA,IAAAj2E,EAAA7N,KACA,OACAu9E,MAAA1vE,EAAAukD,OACAgd,OAAAvhE,EAAA3H,QACAD,KAAA4H,EAAA5H,OACAutE,MAAA3lE,EAAA2lE,QACAE,QAAA7lE,EAAA6lE,UACAG,QAAAhmE,EAAAgmE,UACAvf,aAAAzmD,EAAAymD,iBA4WA0tB,GAAA+B,OA9XA,WACA,WAAA/3D,KAAAhsB,KAAAk3D,YA8XA8qB,GAAAgC,YArnBA,SAAAC,GACA,IAAAjkF,KAAAqb,UACA,YAEA,IAAAkqD,GAAA,IAAA0e,EACAp2E,EAAA03D,EAAAvlE,KAAAke,QAAAqnD,MAAAvlE,KACA,OAAA6N,EAAAukD,OAAA,GAAAvkD,EAAAukD,OAAA,KACAgZ,EAAAv9D,EAAA03D,EAAA,iEAEA4D,EAAAn9C,KAAAnU,UAAAmsE,aAEAze,EACAvlE,KAAA+jF,SAAAC,cAEA,IAAAh4D,KAAAhsB,KAAAk3D,UAAA,GAAAl3D,KAAAq+E,YAAA,KAAA2F,cAAA1/E,QAAA,IAAA8mE,EAAAv9D,EAAA,MAGAu9D,EAAAv9D,EAAA03D,EAAA,8DAqmBAyc,GAAAkC,QA5lBA,WACA,IAAAlkF,KAAAqb,UACA,2BAAArb,KAAAunE,GAAA,OAEA,IAAA7vD,EAAA,SACAysE,EAAA,GACAnkF,KAAAokF,YACA1sE,EAAA,IAAA1X,KAAAq+E,YAAA,gCACA8F,EAAA,KAEA,IAAAE,EAAA,IAAA3sE,EAAA,MACA06C,EAAA,GAAApyD,KAAAoyD,QAAApyD,KAAAoyD,QAAA,qBAEAkyB,EAAAH,EAAA,OAEA,OAAAnkF,KAAA4E,OAAAy/E,EAAAjyB,EAHA,wBAGAkyB,IA8kBAtC,GAAA/jE,OA3WA,WAEA,OAAAje,KAAAqb,UAAArb,KAAAgkF,cAAA,MA0WAhC,GAAApnE,SA5nBA,WACA,OAAA5a,KAAAke,QAAAknD,OAAA,MAAAxgE,OAAA,qCA4nBAo9E,GAAAuC,KAvYA,WACA,OAAAv4E,KAAAiB,MAAAjN,KAAAk3D,UAAA,MAuYA8qB,GAAA9qB,QA5YA,WACA,OAAAl3D,KAAA4mE,GAAA1P,UAAA,KAAAl3D,KAAA4nE,SAAA,IA4YAoa,GAAAwC,aA9VA,WACA,OACAnxB,MAAArzD,KAAAunE,GACA3iE,OAAA5E,KAAAwnE,GACApC,OAAAplE,KAAA6nE,QACAgV,MAAA78E,KAAA2nE,OACAtC,OAAArlE,KAAA+mE,UAyVAib,GAAA5vB,KAAAwc,GACAoT,GAAAtT,WAvmGA,WACA,OAAAA,GAAA1uE,KAAAoyD,SAumGA4vB,GAAAnK,SApSA,SAAAxkB,GACA,OAAA+tB,GAAArpE,KAAA/X,KACAqzD,EACArzD,KAAAkyD,OACAlyD,KAAAk0D,UACAl0D,KAAAmrE,aAAAiN,MAAAtH,IACA9wE,KAAAmrE,aAAAiN,MAAArH,MA+RAiR,GAAAT,YA5RA,SAAAluB,GACA,OAAA+tB,GAAArpE,KAAA/X,KACAqzD,EAAArzD,KAAA09E,UAAA19E,KAAAm0D,aAAA,MA2RA6tB,GAAA7vB,QAAA6vB,GAAAxE,SAnOA,SAAAnqB,GACA,aAAAA,EAAArnD,KAAAk+C,MAAAlqD,KAAAkG,QAAA,MAAAlG,KAAAkG,MAAA,GAAAmtD,EAAA,GAAArzD,KAAAkG,QAAA,IAmOA87E,GAAA97E,MAAA2pE,GACAmS,GAAAhT,YAz1FA,WACA,OAAAA,GAAAhvE,KAAAoyD,OAAApyD,KAAAkG,UAy1FA87E,GAAA9vB,KAAA8vB,GAAAvE,MAznFA,SAAApqB,GACA,IAAAnB,EAAAlyD,KAAAmrE,aAAAjZ,KAAAlyD,MACA,aAAAqzD,EAAAnB,EAAAlyD,KAAAqrC,IAAA,GAAAgoB,EAAAnB,GAAA,MAwnFA8vB,GAAAtE,QAAAsE,GAAAyC,SArnFA,SAAApxB,GACA,IAAAnB,EAAAuf,GAAAzxE,KAAA,KAAAkyD,KACA,aAAAmB,EAAAnB,EAAAlyD,KAAAqrC,IAAA,GAAAgoB,EAAAnB,GAAA,MAonFA8vB,GAAArQ,YAzRA,WACA,IAAA+S,EAAA1kF,KAAAmrE,aAAAiN,MACA,OAAAzG,GAAA3xE,KAAAoyD,OAAAsyB,EAAA5T,IAAA4T,EAAA3T,MAwRAiR,GAAA2C,eA9RA,WACA,OAAAhT,GAAA3xE,KAAAoyD,OAAA,MA8RA4vB,GAAA/7E,KAAA07E,GACAK,GAAAr9E,IAAAq9E,GAAArE,KA55EA,SAAAtqB,GACA,IAAArzD,KAAAqb,UACA,aAAAg4C,EAAArzD,KAAA+7B,IAEA,IAAAp3B,EAAA3E,KAAA2nE,OAAA3nE,KAAA4mE,GAAAsK,YAAAlxE,KAAA4mE,GAAAgS,SACA,aAAAvlB,GACAA,EAjKA,SAAAA,EAAA+R,GACA,uBAAA/R,EACAA,EAGA7xD,MAAA6xD,GAKA,iBADAA,EAAA+R,EAAAiN,cAAAhf,IAEAA,EAGA,KARA94C,SAAA84C,EAAA,IA2JAuxB,CAAAvxB,EAAArzD,KAAAmrE,cACAnrE,KAAAqrC,IAAAgoB,EAAA1uD,EAAA,MAEAA,GAo5EAq9E,GAAA9tB,QAh5EA,SAAAb,GACA,IAAArzD,KAAAqb,UACA,aAAAg4C,EAAArzD,KAAA+7B,IAEA,IAAAm4B,GAAAl0D,KAAA2E,MAAA,EAAA3E,KAAAmrE,aAAAiN,MAAAtH,KAAA,EACA,aAAAzd,EAAAa,EAAAl0D,KAAAqrC,IAAAgoB,EAAAa,EAAA,MA44EA8tB,GAAA7tB,WAz4EA,SAAAd,GACA,IAAArzD,KAAAqb,UACA,aAAAg4C,EAAArzD,KAAA+7B,IAOA,SAAAs3B,EAAA,CACA,IAAAa,EAzKA,SAAAb,EAAA+R,GACA,uBAAA/R,EACA+R,EAAAiN,cAAAhf,GAAA,KAEA7xD,MAAA6xD,GAAA,KAAAA,EAqKAwxB,CAAAxxB,EAAArzD,KAAAmrE,cACA,OAAAnrE,KAAA2E,IAAA3E,KAAA2E,MAAA,EAAAuvD,IAAA,GAEA,OAAAl0D,KAAA2E,OAAA,GA63EAq9E,GAAAxQ,UApLA,SAAAne,GACA,IAAAme,EAAAxlE,KAAAqM,OAAArY,KAAAke,QAAA8/B,QAAA,OAAAh+C,KAAAke,QAAA8/B,QAAA,kBACA,aAAAqV,EAAAme,EAAAxxE,KAAAqrC,IAAAgoB,EAAAme,EAAA,MAmLAwQ,GAAA/vB,KAAA+vB,GAAAxO,MAAAa,GACA2N,GAAAhwB,OAAAgwB,GAAAtO,QAAAkO,GACAI,GAAAjwB,OAAAiwB,GAAAnO,QAAAgO,GACAG,GAAApwB,YAAAowB,GAAA1tB,aAAAytB,GACAC,GAAA3D,UAxkCA,SAAAhrB,EAAAyxB,EAAAC,GACA,IACAC,EADAvtD,EAAAz3B,KAAA4nE,SAAA,EAEA,IAAA5nE,KAAAqb,UACA,aAAAg4C,EAAArzD,KAAA+7B,IAEA,SAAAs3B,EAAA,CACA,oBAAAA,GAEA,WADAA,EAAAirB,GAAA1R,GAAAvZ,IAEA,OAAArzD,UAEagM,KAAA4oB,IAAAy+B,GAAA,KAAA0xB,IACb1xB,GAAA,IAmBA,OAjBArzD,KAAA2nE,QAAAmd,IACAE,EAAAnG,GAAA7+E,OAEAA,KAAA4nE,QAAAvU,EACArzD,KAAA2nE,QAAA,EACA,MAAAqd,GACAhlF,KAAAqrC,IAAA25C,EAAA,KAEAvtD,IAAA47B,KACAyxB,GAAA9kF,KAAAilF,kBACApF,GAAA7/E,KAAAk/E,GAAA7rB,EAAA57B,EAAA,WACiBz3B,KAAAilF,oBACjBjlF,KAAAilF,mBAAA,EACAngB,EAAAkD,aAAAhoE,MAAA,GACAA,KAAAilF,kBAAA,OAGAjlF,KAEA,OAAAA,KAAA2nE,OAAAlwC,EAAAonD,GAAA7+E,OAuiCAgiF,GAAAzc,IArhCA,SAAAuf,GACA,OAAA9kF,KAAAq+E,UAAA,EAAAyG,IAqhCA9C,GAAApD,MAlhCA,SAAAkG,GASA,OARA9kF,KAAA2nE,SACA3nE,KAAAq+E,UAAA,EAAAyG,GACA9kF,KAAA2nE,QAAA,EAEAmd,GACA9kF,KAAA0E,SAAAm6E,GAAA7+E,MAAA,MAGAA,MA0gCAgiF,GAAAkD,UAvgCA,WACA,SAAAllF,KAAA0nE,KACA1nE,KAAAq+E,UAAAr+E,KAAA0nE,MAAA,WACS,oBAAA1nE,KAAAunE,GAAA,CACT,IAAA4d,EAAA7G,GAAA3R,GAAA3sE,KAAAunE,IACA,MAAA4d,EACAnlF,KAAAq+E,UAAA8G,GAGAnlF,KAAAq+E,UAAA,MAGA,OAAAr+E,MA4/BAgiF,GAAAoD,qBAz/BA,SAAA/xB,GACA,QAAArzD,KAAAqb,YAGAg4C,IAAA8kB,GAAA9kB,GAAAgrB,YAAA,GAEAr+E,KAAAq+E,YAAAhrB,GAAA,QAo/BA2uB,GAAAqD,MAj/BA,WACA,OACArlF,KAAAq+E,YAAAr+E,KAAAke,QAAAhY,MAAA,GAAAm4E,aACAr+E,KAAAq+E,YAAAr+E,KAAAke,QAAAhY,MAAA,GAAAm4E,aA++BA2D,GAAAoC,QAt9BA,WACA,QAAApkF,KAAAqb,YAAArb,KAAA2nE,QAs9BAqa,GAAAsD,YAn9BA,WACA,QAAAtlF,KAAAqb,WAAArb,KAAA2nE,QAm9BAqa,GAAAjD,SACAiD,GAAAnF,MAAAkC,GACAiD,GAAAuD,SA9EA,WACA,OAAAvlF,KAAA2nE,OAAA,UA8EAqa,GAAAwD,SA3EA,WACA,OAAAxlF,KAAA2nE,OAAA,iCA2EAqa,GAAAyD,MAAAhhB,EAAA,kDAAAkd,IACAK,GAAA5S,OAAA3K,EAAA,mDAAAoL,IACAmS,GAAAzE,MAAA9Y,EAAA,iDAAAmK,IACAoT,GAAAmC,KAAA1f,EAAA,2GAjjCA,SAAApR,EAAAyxB,GACA,aAAAzxB,GACA,iBAAAA,IACAA,MAGArzD,KAAAq+E,UAAAhrB,EAAAyxB,GAEA9kF,OAEAA,KAAAq+E,cAwiCA2D,GAAA0D,aAAAjhB,EAAA,0GAr/BA,WACA,IAAAM,EAAA/kE,KAAA2lF,eACA,OAAA3lF,KAAA2lF,cAGA,IAAA/3E,EAAA,GAKA,GAHAy5D,EAAAz5D,EAAA5N,OACA4N,EAAAquE,GAAAruE,IAEAmgE,GAAA,CACA,IAAAkP,EAAArvE,EAAA+5D,OAAAxC,EAAAv3D,EAAAmgE,IAAAoK,GAAAvqE,EAAAmgE,IACA/tE,KAAA2lF,cAAA3lF,KAAAqb,WACAktD,EAAA36D,EAAAmgE,GAAAkP,EAAA4G,WAAA,OAEA7jF,KAAA2lF,eAAA,EAGA,OAAA3lF,KAAA2lF,gBAi/BA,IAAAC,GAAApc,EAAA3xD,UAiCA,SAAAguE,GAAAjhF,EAAAia,EAAAinE,EAAAC,GACA,IAAA3gB,EAAAkR,KACA/Q,EAAAJ,IAAA5gE,IAAAwhF,EAAAlnE,GACA,OAAAumD,EAAA0gB,GAAAvgB,EAAA3gE,GAGA,SAAAohF,GAAAphF,EAAAia,EAAAinE,GAQA,GAPAl7D,EAAAhmB,KACAia,EAAAja,EACAA,OAAA2B,GAGA3B,KAAA,GAEA,MAAAia,EACA,OAAAgnE,GAAAjhF,EAAAia,EAAAinE,EAAA,SAGA,IAAA1/E,EACAqsD,EAAA,GACA,IAAArsD,EAAA,EAAmBA,EAAA,GAAQA,IAC3BqsD,EAAArsD,GAAAy/E,GAAAjhF,EAAAwB,EAAA0/E,EAAA,SAEA,OAAArzB,EAWA,SAAAwzB,GAAAC,EAAAthF,EAAAia,EAAAinE,GACA,kBAAAI,GACAt7D,EAAAhmB,KACAia,EAAAja,EACAA,OAAA2B,GAGA3B,KAAA,KAGAia,EADAja,EAAAshF,EAEAA,GAAA,EAEAt7D,EAAAhmB,KACAia,EAAAja,EACAA,OAAA2B,GAGA3B,KAAA,IAGA,IAOAwB,EAPAg/D,EAAAkR,KACAvlD,EAAAm1D,EAAA9gB,EAAAgT,MAAAtH,IAAA,EAEA,SAAAjyD,EACA,OAAAgnE,GAAAjhF,GAAAia,EAAAkS,GAAA,EAAA+0D,EAAA,OAIA,IAAArzB,EAAA,GACA,IAAArsD,EAAA,EAAmBA,EAAA,EAAOA,IAC1BqsD,EAAArsD,GAAAy/E,GAAAjhF,GAAAwB,EAAA2qB,GAAA,EAAA+0D,EAAA,OAEA,OAAArzB,EAlGAmzB,GAAArR,SAzgHA,SAAAh9D,EAAA+zD,EAAA7oE,GACA,IAAA8oE,EAAAvrE,KAAAmmF,UAAA5uE,IAAAvX,KAAAmmF,UAAA,SACA,OAAAhd,EAAAoC,KAAAxzD,KAAAuzD,EAAA7oE,GAAA8oE,GAwgHAqa,GAAAja,eA5/GA,SAAAp0D,GACA,IAAA3S,EAAA5E,KAAAomF,gBAAA7uE,GACA8uE,EAAArmF,KAAAomF,gBAAA7uE,EAAAsD,eAEA,OAAAjW,IAAAyhF,EACAzhF,GAGA5E,KAAAomF,gBAAA7uE,GAAA8uE,EAAA/hF,QAAA,4BAAAyI,GACA,OAAAA,EAAA+K,MAAA,KAGA9X,KAAAomF,gBAAA7uE,KAi/GAquE,GAAAna,YA5+GA,WACA,OAAAzrE,KAAAsmF,cA4+GAV,GAAA1a,QAt+GA,SAAA/C,GACA,OAAAnoE,KAAAumF,SAAAjiF,QAAA,KAAA6jE,IAs+GAyd,GAAA1J,SAAA+F,GACA2D,GAAAnD,WAAAR,GACA2D,GAAAxQ,aAp9GA,SAAAjN,EAAAua,EAAAtpE,EAAAotE,GACA,IAAAjb,EAAAvrE,KAAAymF,cAAArtE,GACA,OAAA+vD,EAAAoC,GACAA,EAAApD,EAAAua,EAAAtpE,EAAAotE,GACAjb,EAAAjnE,QAAA,MAAA6jE,IAi9GAyd,GAAAc,WA98GA,SAAA3oC,EAAAwtB,GACA,IAAA3mE,EAAA5E,KAAAymF,cAAA1oC,EAAA,mBACA,OAAAorB,EAAAvkE,KAAA2mE,GAAA3mE,EAAAN,QAAA,MAAAinE,IA68GAqa,GAAArhF,IA7lHA,SAAAkoC,GACA,IAAAnuB,EAAAlY,EACA,IAAAA,KAAAqmC,EAEA08B,EADA7qD,EAAAmuB,EAAArmC,IAEApG,KAAAoG,GAAAkY,EAEAte,KAAA,IAAAoG,GAAAkY,EAGAte,KAAAy2E,QAAAhqC,EAIAzsC,KAAA0hF,+BAAA,IAAAtU,QACAptE,KAAAwhF,wBAAApjE,QAAApe,KAAAyhF,cAAArjE,QACA,cAA+BA,SA+kH/BwnE,GAAAxW,OAxhGA,SAAAvhE,EAAAjJ,GACA,OAAAiJ,EAIAuR,EAAApf,KAAAg+E,SAAAh+E,KAAAg+E,QAAAnwE,EAAA3H,SACAlG,KAAAg+E,SAAAh+E,KAAAg+E,QAAA2I,UAAAnX,IAAA3D,KAAAjnE,GAAA,uBAAAiJ,EAAA3H,SAJAkZ,EAAApf,KAAAg+E,SAAAh+E,KAAAg+E,QACAh+E,KAAAg+E,QAAA,YAshGA4H,GAAAzW,YA/gGA,SAAAthE,EAAAjJ,GACA,OAAAiJ,EAIAuR,EAAApf,KAAA4mF,cAAA5mF,KAAA4mF,aAAA/4E,EAAA3H,SACAlG,KAAA4mF,aAAApX,GAAA3D,KAAAjnE,GAAA,uBAAAiJ,EAAA3H,SAJAkZ,EAAApf,KAAA4mF,cAAA5mF,KAAA4mF,aACA5mF,KAAA4mF,aAAA,YA6gGAhB,GAAArW,YA99FA,SAAAsX,EAAAjiF,EAAAygE,GACA,IAAAj/D,EAAAklE,EAAA0B,EAEA,GAAAhtE,KAAA8mF,kBACA,OA7CA,SAAAD,EAAAjiF,EAAAygE,GACA,IAAAj/D,EAAA2gF,EAAAzb,EAAA0b,EAAAH,EAAAI,oBACA,IAAAjnF,KAAAknF,aAKA,IAHAlnF,KAAAknF,aAAA,GACAlnF,KAAAmnF,iBAAA,GACAnnF,KAAAonF,kBAAA,GACAhhF,EAAA,EAAuBA,EAAA,KAAQA,EAC/BklE,EAAAnG,EAAA,KAAA/+D,IACApG,KAAAonF,kBAAAhhF,GAAApG,KAAAmvE,YAAA7D,EAAA,IAAA2b,oBACAjnF,KAAAmnF,iBAAA/gF,GAAApG,KAAAovE,OAAA9D,EAAA,IAAA2b,oBAIA,OAAA5hB,EACA,QAAAzgE,GAEA,KADAmiF,EAAAhlE,GAAAhK,KAAA/X,KAAAonF,kBAAAJ,IACAD,EAAA,MAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAAmnF,iBAAAH,IACAD,EAAA,KAGA,QAAAniF,GAEA,KADAmiF,EAAAhlE,GAAAhK,KAAA/X,KAAAonF,kBAAAJ,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAAmnF,iBAAAH,IACAD,EAAA,MAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAAmnF,iBAAAH,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAAonF,kBAAAJ,IACAD,EAAA,MASAhvE,KAAA/X,KAAA6mF,EAAAjiF,EAAAygE,GAYA,IATArlE,KAAAknF,eACAlnF,KAAAknF,aAAA,GACAlnF,KAAAmnF,iBAAA,GACAnnF,KAAAonF,kBAAA,IAMAhhF,EAAA,EAAmBA,EAAA,GAAQA,IAAA,CAY3B,GAVAklE,EAAAnG,EAAA,KAAA/+D,IACAi/D,IAAArlE,KAAAmnF,iBAAA/gF,KACApG,KAAAmnF,iBAAA/gF,GAAA,IAAAgnE,OAAA,IAAAptE,KAAAovE,OAAA9D,EAAA,IAAAhnE,QAAA,iBACAtE,KAAAonF,kBAAAhhF,GAAA,IAAAgnE,OAAA,IAAAptE,KAAAmvE,YAAA7D,EAAA,IAAAhnE,QAAA,kBAEA+gE,GAAArlE,KAAAknF,aAAA9gF,KACA4mE,EAAA,IAAAhtE,KAAAovE,OAAA9D,EAAA,SAAAtrE,KAAAmvE,YAAA7D,EAAA,IACAtrE,KAAAknF,aAAA9gF,GAAA,IAAAgnE,OAAAJ,EAAA1oE,QAAA,cAGA+gE,GAAA,SAAAzgE,GAAA5E,KAAAmnF,iBAAA/gF,GAAAylE,KAAAgb,GACA,OAAAzgF,EACa,GAAAi/D,GAAA,QAAAzgE,GAAA5E,KAAAonF,kBAAAhhF,GAAAylE,KAAAgb,GACb,OAAAzgF,EACa,IAAAi/D,GAAArlE,KAAAknF,aAAA9gF,GAAAylE,KAAAgb,GACb,OAAAzgF,IA87FAw/E,GAAAtW,YA33FA,SAAApC,GACA,OAAAltE,KAAA8mF,mBACA5hB,EAAAllE,KAAA,iBACAgwE,GAAAj4D,KAAA/X,MAEAktE,EACAltE,KAAAuwE,mBAEAvwE,KAAAqwE,eAGAnL,EAAAllE,KAAA,kBACAA,KAAAqwE,aAAAN,IAEA/vE,KAAAuwE,oBAAArD,EACAltE,KAAAuwE,mBAAAvwE,KAAAqwE,eA62FAuV,GAAAvW,iBAh5FA,SAAAnC,GACA,OAAAltE,KAAA8mF,mBACA5hB,EAAAllE,KAAA,iBACAgwE,GAAAj4D,KAAA/X,MAEAktE,EACAltE,KAAAwwE,wBAEAxwE,KAAAswE,oBAGApL,EAAAllE,KAAA,uBACAA,KAAAswE,kBAAAR,IAEA9vE,KAAAwwE,yBAAAtD,EACAltE,KAAAwwE,wBAAAxwE,KAAAswE,oBAk4FAsV,GAAA1zB,KAxsFA,SAAAoZ,GACA,OAAAmG,GAAAnG,EAAAtrE,KAAAo4E,MAAAtH,IAAA9wE,KAAAo4E,MAAArH,KAAA7e,MAwsFA0zB,GAAAyB,eA5rFA,WACA,OAAArnF,KAAAo4E,MAAArH,KA4rFA6U,GAAA0B,eAjsFA,WACA,OAAAtnF,KAAAo4E,MAAAtH,KAksFA8U,GAAA3T,SAplFA,SAAApkE,EAAAjJ,GACA,IAAAqtE,EAAA7yD,EAAApf,KAAAunF,WAAAvnF,KAAAunF,UACAvnF,KAAAunF,UAAA15E,IAAA,IAAAA,GAAA7N,KAAAunF,UAAAZ,SAAA9a,KAAAjnE,GAAA,uBACA,WAAAiJ,EAAAgkE,GAAAI,EAAAjyE,KAAAo4E,MAAAtH,KACA,EAAAmB,EAAApkE,EAAAlJ,OAAAstE,GAilFA2T,GAAA7T,YAvkFA,SAAAlkE,GACA,WAAAA,EAAAgkE,GAAA7xE,KAAAwnF,aAAAxnF,KAAAo4E,MAAAtH,KACA,EAAA9wE,KAAAwnF,aAAA35E,EAAAlJ,OAAA3E,KAAAwnF,cAskFA5B,GAAA5T,cA9kFA,SAAAnkE,GACA,WAAAA,EAAAgkE,GAAA7xE,KAAAynF,eAAAznF,KAAAo4E,MAAAtH,KACA,EAAA9wE,KAAAynF,eAAA55E,EAAAlJ,OAAA3E,KAAAynF,gBA6kFA7B,GAAAvT,cApgFA,SAAAqV,EAAA9iF,EAAAygE,GACA,IAAAj/D,EAAAklE,EAAA0B,EAEA,GAAAhtE,KAAA2nF,oBACA,OApEA,SAAAD,EAAA9iF,EAAAygE,GACA,IAAAj/D,EAAA2gF,EAAAzb,EAAA0b,EAAAU,EAAAT,oBACA,IAAAjnF,KAAA4nF,eAKA,IAJA5nF,KAAA4nF,eAAA,GACA5nF,KAAA6nF,oBAAA,GACA7nF,KAAA8nF,kBAAA,GAEA1hF,EAAA,EAAuBA,EAAA,IAAOA,EAC9BklE,EAAAnG,EAAA,SAAAxgE,IAAAyB,GACApG,KAAA8nF,kBAAA1hF,GAAApG,KAAA+xE,YAAAzG,EAAA,IAAA2b,oBACAjnF,KAAA6nF,oBAAAzhF,GAAApG,KAAAgyE,cAAA1G,EAAA,IAAA2b,oBACAjnF,KAAA4nF,eAAAxhF,GAAApG,KAAAiyE,SAAA3G,EAAA,IAAA2b,oBAIA,OAAA5hB,EACA,SAAAzgE,GAEA,KADAmiF,EAAAhlE,GAAAhK,KAAA/X,KAAA4nF,eAAAZ,IACAD,EAAA,KACa,QAAAniF,GAEb,KADAmiF,EAAAhlE,GAAAhK,KAAA/X,KAAA6nF,oBAAAb,IACAD,EAAA,MAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA8nF,kBAAAd,IACAD,EAAA,KAGA,SAAAniF,GAEA,KADAmiF,EAAAhlE,GAAAhK,KAAA/X,KAAA4nF,eAAAZ,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA6nF,oBAAAb,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA8nF,kBAAAd,IACAD,EAAA,KACa,QAAAniF,GAEb,KADAmiF,EAAAhlE,GAAAhK,KAAA/X,KAAA6nF,oBAAAb,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA4nF,eAAAZ,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA8nF,kBAAAd,IACAD,EAAA,MAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA8nF,kBAAAd,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA4nF,eAAAZ,IAEAD,GAGA,KADAA,EAAAhlE,GAAAhK,KAAA/X,KAAA6nF,oBAAAb,IACAD,EAAA,MASAhvE,KAAA/X,KAAA0nF,EAAA9iF,EAAAygE,GAUA,IAPArlE,KAAA4nF,iBACA5nF,KAAA4nF,eAAA,GACA5nF,KAAA8nF,kBAAA,GACA9nF,KAAA6nF,oBAAA,GACA7nF,KAAA+nF,mBAAA,IAGA3hF,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAc1B,GAXAklE,EAAAnG,EAAA,SAAAxgE,IAAAyB,GACAi/D,IAAArlE,KAAA+nF,mBAAA3hF,KACApG,KAAA+nF,mBAAA3hF,GAAA,IAAAgnE,OAAA,IAAAptE,KAAAiyE,SAAA3G,EAAA,IAAAhnE,QAAA,qBACAtE,KAAA6nF,oBAAAzhF,GAAA,IAAAgnE,OAAA,IAAAptE,KAAAgyE,cAAA1G,EAAA,IAAAhnE,QAAA,qBACAtE,KAAA8nF,kBAAA1hF,GAAA,IAAAgnE,OAAA,IAAAptE,KAAA+xE,YAAAzG,EAAA,IAAAhnE,QAAA,sBAEAtE,KAAA4nF,eAAAxhF,KACA4mE,EAAA,IAAAhtE,KAAAiyE,SAAA3G,EAAA,SAAAtrE,KAAAgyE,cAAA1G,EAAA,SAAAtrE,KAAA+xE,YAAAzG,EAAA,IACAtrE,KAAA4nF,eAAAxhF,GAAA,IAAAgnE,OAAAJ,EAAA1oE,QAAA,cAGA+gE,GAAA,SAAAzgE,GAAA5E,KAAA+nF,mBAAA3hF,GAAAylE,KAAA6b,GACA,OAAAthF,EACa,GAAAi/D,GAAA,QAAAzgE,GAAA5E,KAAA6nF,oBAAAzhF,GAAAylE,KAAA6b,GACb,OAAAthF,EACa,GAAAi/D,GAAA,OAAAzgE,GAAA5E,KAAA8nF,kBAAA1hF,GAAAylE,KAAA6b,GACb,OAAAthF,EACa,IAAAi/D,GAAArlE,KAAA4nF,eAAAxhF,GAAAylE,KAAA6b,GACb,OAAAthF,IAm+EAw/E,GAAAxT,cAr7EA,SAAAlF,GACA,OAAAltE,KAAA2nF,qBACAziB,EAAAllE,KAAA,mBACA4yE,GAAA76D,KAAA/X,MAEAktE,EACAltE,KAAAozE,qBAEApzE,KAAAizE,iBAGA/N,EAAAllE,KAAA,oBACAA,KAAAizE,eAAAR,IAEAzyE,KAAAozE,sBAAAlG,EACAltE,KAAAozE,qBAAApzE,KAAAizE,iBAu6EA2S,GAAAzT,mBAl6EA,SAAAjF,GACA,OAAAltE,KAAA2nF,qBACAziB,EAAAllE,KAAA,mBACA4yE,GAAA76D,KAAA/X,MAEAktE,EACAltE,KAAAqzE,0BAEArzE,KAAAkzE,sBAGAhO,EAAAllE,KAAA,yBACAA,KAAAkzE,oBAAAR,IAEA1yE,KAAAqzE,2BAAAnG,EACAltE,KAAAqzE,0BAAArzE,KAAAkzE,sBAo5EA0S,GAAA1T,iBA/4EA,SAAAhF,GACA,OAAAltE,KAAA2nF,qBACAziB,EAAAllE,KAAA,mBACA4yE,GAAA76D,KAAA/X,MAEAktE,EACAltE,KAAAszE,wBAEAtzE,KAAAmzE,oBAGAjO,EAAAllE,KAAA,uBACAA,KAAAmzE,kBAAAR,IAEA3yE,KAAAszE,yBAAApG,EACAltE,KAAAszE,wBAAAtzE,KAAAmzE,oBAk4EAyS,GAAA5R,KAtuEA,SAAA3gB,GAGA,aAAAA,EAAA,IAAA6Q,cAAAzlD,OAAA,IAouEAmnE,GAAAvf,SAhuEA,SAAAmN,EAAAE,EAAAsU,GACA,OAAAxU,EAAA,GACAwU,EAAA,UAEAA,EAAA,WAwzEA3R,GAAA,MACAlB,uBAAA,uBACAjK,QAAA,SAAA/C,GACA,IAAAr8D,EAAAq8D,EAAA,GACAoD,EAAA,IAAAnD,EAAAD,EAAA,aACA,IAAAr8D,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,UACA,OAAAq8D,EAAAoD,KAMAzG,EAAA0b,KAAA/b,EAAA,wDAAA4R,IACAvR,EAAAmjB,SAAAxjB,EAAA,gEAAA6R,IAEA,IAAA4R,GAAAl8E,KAAA4oB,IAmBA,SAAAuzD,GAAA58D,EAAA8nC,EAAAl4C,EAAAwkE,GACA,IAAA1C,EAAAiC,GAAA7rB,EAAAl4C,GAMA,OAJAoQ,EAAAuyD,eAAA6B,EAAA1C,EAAAa,cACAvyD,EAAAwyD,OAAA4B,EAAA1C,EAAAc,MACAxyD,EAAAyyD,SAAA2B,EAAA1C,EAAAe,QAEAzyD,EAAA0yD,UAaA,SAAAmK,GAAAjgB,GACA,OAAAA,EAAA,EACAn8D,KAAAiB,MAAAk7D,GAEAn8D,KAAAk+C,KAAAie,GAmDA,SAAAkgB,GAAA1K,GAGA,YAAAA,EAAA,OAGA,SAAA2K,GAAAlZ,GAEA,cAAAA,EAAA,KAkDA,SAAAmZ,GAAAC,GACA,kBACA,OAAAxoF,KAAAo3D,GAAAoxB,IAIA,IAAAC,GAAAF,GAAA,MACAG,GAAAH,GAAA,KACAI,GAAAJ,GAAA,KACAK,GAAAL,GAAA,KACAM,GAAAN,GAAA,KACAO,GAAAP,GAAA,KACAQ,GAAAR,GAAA,KACAS,GAAAT,GAAA,KACAU,GAAAV,GAAA,KAWA,SAAAW,GAAApuE,GACA,kBACA,OAAA9a,KAAAqb,UAAArb,KAAA0uB,MAAA5T,GAAAihB,KAIA,IAAAu4B,GAAA40B,GAAA,gBACArV,GAAAqV,GAAA,WACAxV,GAAAwV,GAAA,WACA1V,GAAA0V,GAAA,SACAvL,GAAAuL,GAAA,QACA9Z,GAAA8Z,GAAA,UACA3L,GAAA2L,GAAA,SAMA7wE,GAAArM,KAAAqM,MACA8wE,GAAA,CACA5T,GAAA,GACAlsE,EAAA,GACAwE,EAAA,GACAzE,EAAA,GACAwoC,EAAA,GACA+jC,EAAA,IA6EAyT,GAAAp9E,KAAA4oB,IAEA,SAAA80B,GAAAl9C,GACA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAGA,SAAA68E,KAQA,IAAArpF,KAAAqb,UACA,OAAArb,KAAAmrE,aAAAM,cAGA,IAGAiI,EAAAF,EAHAK,EAAAuV,GAAAppF,KAAA89E,eAAA,IACAH,EAAAyL,GAAAppF,KAAA+9E,OACA3O,EAAAga,GAAAppF,KAAAg+E,SAIAtK,EAAAxL,EAAA2L,EAAA,IACAL,EAAAtL,EAAAwL,EAAA,IACAG,GAAA,GACAH,GAAA,GAQA,IAAA4V,EALAphB,EAAAkH,EAAA,IAMAuG,EALAvG,GAAA,GAMAma,EAAA5L,EACAv0E,EAAAoqE,EACA3lE,EAAA6lE,EACArqE,EAAAwqE,IAAA50B,QAAA,GAAA36C,QAAA,gBACAi6B,EAAAv+B,KAAA0oF,YAEA,IAAAnqD,EAGA,YAGA,IAAAirD,EAAAjrD,EAAA,SACAkrD,EAAA//B,GAAA1pD,KAAAg+E,WAAAt0B,GAAAnrB,GAAA,OACAmrD,EAAAhgC,GAAA1pD,KAAA+9E,SAAAr0B,GAAAnrB,GAAA,OACAorD,EAAAjgC,GAAA1pD,KAAA89E,iBAAAp0B,GAAAnrB,GAAA,OAEA,OAAAirD,EAAA,KACAF,EAAAG,EAAAH,EAAA,SACA3T,EAAA8T,EAAA9T,EAAA,SACA4T,EAAAG,EAAAH,EAAA,SACAngF,GAAAyE,GAAAxE,EAAA,SACAD,EAAAugF,EAAAvgF,EAAA,SACAyE,EAAA87E,EAAA97E,EAAA,SACAxE,EAAAsgF,EAAAtgF,EAAA,QAGA,IAAAugF,GAAAtM,GAAAzlE,UAwGA,OAtGA+xE,GAAAvuE,QA5tDA,WACA,OAAArb,KAAAwmE,UA4tDAojB,GAAAh1D,IAxVA,WACA,IAAAt1B,EAAAU,KAAA0uB,MAaA,OAXA1uB,KAAA89E,cAAAoK,GAAAloF,KAAA89E,eACA99E,KAAA+9E,MAAAmK,GAAAloF,KAAA+9E,OACA/9E,KAAAg+E,QAAAkK,GAAAloF,KAAAg+E,SAEA1+E,EAAAg1D,aAAA4zB,GAAA5oF,EAAAg1D,cACAh1D,EAAAu0E,QAAAqU,GAAA5oF,EAAAu0E,SACAv0E,EAAAo0E,QAAAwU,GAAA5oF,EAAAo0E,SACAp0E,EAAAk0E,MAAA0U,GAAA5oF,EAAAk0E,OACAl0E,EAAA8vE,OAAA8Y,GAAA5oF,EAAA8vE,QACA9vE,EAAAi+E,MAAA2K,GAAA5oF,EAAAi+E,OAEAv9E,MA2UA4pF,GAAAv+C,IA7TA,SAAAgoB,EAAAl4C,GACA,OAAAgtE,GAAAnoF,KAAAqzD,EAAAl4C,EAAA,IA6TAyuE,GAAAllF,SAzTA,SAAA2uD,EAAAl4C,GACA,OAAAgtE,GAAAnoF,KAAAqzD,EAAAl4C,GAAA,IAyTAyuE,GAAAxyB,GApPA,SAAA0S,GACA,IAAA9pE,KAAAqb,UACA,OAAA0gB,IAEA,IAAA4hD,EACAvO,EACA9a,EAAAt0D,KAAA89E,cAIA,cAFAhU,EAAAD,EAAAC,KAEA,YAAAA,GAAA,SAAAA,EAGA,OAFA6T,EAAA39E,KAAA+9E,MAAAzpB,EAAA,MACA8a,EAAApvE,KAAAg+E,QAAAqK,GAAA1K,GACA7T,GACA,mBAAAsF,EACA,qBAAAA,EAAA,EACA,kBAAAA,EAAA,QAKA,OADAuO,EAAA39E,KAAA+9E,MAAA/xE,KAAAqM,MAAAiwE,GAAAtoF,KAAAg+E,UACAlU,GACA,kBAAA6T,EAAA,EAAArpB,EAAA,OACA,iBAAAqpB,EAAArpB,EAAA,MACA,qBAAAqpB,EAAArpB,EAAA,KACA,yBAAAqpB,EAAArpB,EAAA,IACA,0BAAAqpB,EAAArpB,EAAA,IAEA,yBAAAtoD,KAAAiB,MAAA,MAAA0wE,GAAArpB,EACA,kBAAA7yD,MAAA,gBAAAqoE,KAwNA8f,GAAAnB,kBACAmB,GAAAlB,aACAkB,GAAAjB,aACAiB,GAAAhB,WACAgB,GAAAf,UACAe,GAAAd,WACAc,GAAAb,YACAa,GAAAZ,cACAY,GAAAX,WACAW,GAAA1yB,QA3NA,WACA,OAAAl3D,KAAAqb,UAIArb,KAAA89E,cACA,MAAA99E,KAAA+9E,MACA/9E,KAAAg+E,QAAA,UACA,QAAA5V,EAAApoE,KAAAg+E,QAAA,IANAjiD,KA0NA6tD,GAAA3L,QAzTA,WACA,IAIApK,EAAAH,EAAAF,EAAA+J,EAAAsM,EAJAv1B,EAAAt0D,KAAA89E,cACAH,EAAA39E,KAAA+9E,MACA3O,EAAApvE,KAAAg+E,QACA1+E,EAAAU,KAAA0uB,MAwCA,OAnCA4lC,GAAA,GAAAqpB,GAAA,GAAAvO,GAAA,GACA9a,GAAA,GAAAqpB,GAAA,GAAAvO,GAAA,IACA9a,GAAA,MAAA8zB,GAAAE,GAAAlZ,GAAAuO,GACAA,EAAA,EACAvO,EAAA,GAKA9vE,EAAAg1D,eAAA,IAEAuf,EAAA3L,EAAA5T,EAAA,KACAh1D,EAAAu0E,UAAA,GAEAH,EAAAxL,EAAA2L,EAAA,IACAv0E,EAAAo0E,UAAA,GAEAF,EAAAtL,EAAAwL,EAAA,IACAp0E,EAAAk0E,QAAA,GAEAmK,GAAAzV,EAAAsL,EAAA,IAGAqW,EAAA3hB,EAAAmgB,GAAA1K,IACAvO,GAAAya,EACAlM,GAAAyK,GAAAE,GAAAuB,IAGAtM,EAAArV,EAAAkH,EAAA,IACAA,GAAA,GAEA9vE,EAAAq+E,OACAr+E,EAAA8vE,SACA9vE,EAAAi+E,QAEAv9E,MA8QA4pF,GAAA1rE,MAjMA,WACA,OAAAghE,GAAAl/E,OAiMA4pF,GAAA7oF,IA9LA,SAAA+oE,GAEA,OADAA,EAAAD,EAAAC,GACA9pE,KAAAqb,UAAArb,KAAA8pE,EAAA,OAAA/tC,KA6LA6tD,GAAAt1B,gBACAs1B,GAAA/V,WACA+V,GAAAlW,WACAkW,GAAApW,SACAoW,GAAAjM,QACAiM,GAAAnM,MAjLA,WACA,OAAAvV,EAAAloE,KAAA29E,OAAA,IAiLAiM,GAAAxa,UACAwa,GAAArM,SACAqM,GAAAjH,SA3GA,SAAAmH,GACA,IAAA9pF,KAAAqb,UACA,OAAArb,KAAAmrE,aAAAM,cAGA,IAAArG,EAAAplE,KAAAmrE,aACAI,EA5DA,SAAAwe,EAAArH,EAAAtd,GACA,IAAA75C,EAAA2zD,GAAA6K,GAAAn1D,MACAi/C,EAAAx7D,GAAAkT,EAAA6rC,GAAA,MACAsc,EAAAr7D,GAAAkT,EAAA6rC,GAAA,MACAoc,EAAAn7D,GAAAkT,EAAA6rC,GAAA,MACAumB,EAAAtlE,GAAAkT,EAAA6rC,GAAA,MACAgY,EAAA/2D,GAAAkT,EAAA6rC,GAAA,MACAmmB,EAAAllE,GAAAkT,EAAA6rC,GAAA,MAEAppD,EAAA6lE,GAAAsV,GAAA5T,IAAA,KAAA1B,IACAA,EAAAsV,GAAA9/E,GAAA,MAAAwqE,IACAH,GAAA,UACAA,EAAAyV,GAAAt7E,GAAA,MAAA6lE,IACAF,GAAA,UACAA,EAAA2V,GAAA//E,GAAA,MAAAoqE,IACAmK,GAAA,UACAA,EAAAwL,GAAAv3C,GAAA,MAAA+rC,IACAvO,GAAA,UACAA,EAAA+Z,GAAAxT,GAAA,MAAAvG,IACAmO,GAAA,gBAAAA,GAKA,OAHAvvE,EAAA,GAAA00E,EACA10E,EAAA,IAAA+7E,EAAA,EACA/7E,EAAA,GAAAo3D,EA3BA,SAAAhsD,EAAA+uD,EAAAua,EAAA8D,EAAAphB,GACA,OAAAA,EAAAgQ,aAAAjN,GAAA,IAAAua,EAAAtpE,EAAAotE,IA2BAxmE,MAAA,KAAAhS,GAoCAg8E,CAAAhqF,MAAA8pF,EAAA1kB,GAMA,OAJA0kB,IACAve,EAAAnG,EAAAshB,YAAA1mF,KAAAurE,IAGAnG,EAAAqd,WAAAlX,IAgGAqe,GAAA5F,YAAAqF,GACAO,GAAAhvE,SAAAyuE,GACAO,GAAA3rE,OAAAorE,GACAO,GAAAxkB,UACAwkB,GAAAze,cAEAye,GAAAK,YAAAxlB,EAAA,sFAAA4kB,IACAO,GAAApJ,QAMAzV,EAAA,gBACAA,EAAA,mBAIAgC,GAAA,IAAAL,IACAK,GAAA,IAlzHA,wBAmzHAY,GAAA,aAAAta,EAAArxC,EAAAyqB,GACAA,EAAAm6B,GAAA,IAAA56C,KAAA,IAAAxR,WAAA64C,EAAA,OAEAsa,GAAA,aAAAta,EAAArxC,EAAAyqB,GACAA,EAAAm6B,GAAA,IAAA56C,KAAAo8C,EAAA/U,MAMAyR,EAAAolB,QAAA,SAz7IAtlB,EA27IAuT,GAEArT,EAAAhlD,GAAAkiE,GACAld,EAAA/4D,IAl0DA,WAGA,OAAAoxE,GAAA,WAFA,GAAArlE,MAAAC,KAAAC,UAAA,KAk0DA8sD,EAAA74D,IA7zDA,WAGA,OAAAkxE,GAAA,UAFA,GAAArlE,MAAAC,KAAAC,UAAA,KA6zDA8sD,EAAAriE,IAxzDA,WACA,OAAAupB,KAAAvpB,IAAAupB,KAAAvpB,OAAA,IAAAupB,MAwzDA84C,EAAAS,IAAAJ,EACAL,EAAAyf,KAnjBA,SAAAlxB,GACA,OAAA8kB,GAAA,IAAA9kB,IAmjBAyR,EAAAsK,OAjcA,SAAAxqE,EAAAia,GACA,OAAAmnE,GAAAphF,EAAAia,EAAA,WAicAimD,EAAAE,SACAF,EAAAM,OAAAiR,GACAvR,EAAAib,QAAA7Y,EACApC,EAAAv5C,SAAA2zD,GACApa,EAAAmD,WACAnD,EAAAmN,SA/bA,SAAAiU,EAAAthF,EAAAia,GACA,OAAAonE,GAAAC,EAAAthF,EAAAia,EAAA,aA+bAimD,EAAAogB,UAvjBA,WACA,OAAA/M,GAAAn4D,MAAA,KAAAhI,WAAAktE,aAujBApgB,EAAAqG,WAAAmL,GACAxR,EAAAoZ,cACApZ,EAAAqK,YAvcA,SAAAvqE,EAAAia,GACA,OAAAmnE,GAAAphF,EAAAia,EAAA,gBAucAimD,EAAAiN,YA5bA,SAAAmU,EAAAthF,EAAAia,GACA,OAAAonE,GAAAC,EAAAthF,EAAAia,EAAA,gBA4bAimD,EAAAyR,gBACAzR,EAAAqlB,aA9kFA,SAAArvE,EAAA2xB,GACA,SAAAA,EAAA,CACA,IAAA24B,EAAAglB,EAAA9gB,EAAAgL,GAGA,OADA8V,EAAAlU,GAAAp7D,MAEAwuD,EAAA8gB,EAAA3T,SAEAhqC,EAAA48B,EAAAC,EAAA78B,IACA24B,EAAA,IAAAoE,EAAA/8B,IACAiqC,aAAAX,GAAAj7D,GACAi7D,GAAAj7D,GAAAsqD,EAGAiR,GAAAv7D,QAGA,MAAAi7D,GAAAj7D,KACA,MAAAi7D,GAAAj7D,GAAA47D,aACAX,GAAAj7D,GAAAi7D,GAAAj7D,GAAA47D,aACiB,MAAAX,GAAAj7D,WACjBi7D,GAAAj7D,IAIA,OAAAi7D,GAAAj7D,IAsjFAgqD,EAAAiR,QA3hFA,WACA,OAAA31D,EAAA21D,KA2hFAjR,EAAAkN,cApcA,SAAAkU,EAAAthF,EAAAia,GACA,OAAAonE,GAAAC,EAAAthF,EAAAia,EAAA,kBAocAimD,EAAA+E,iBACA/E,EAAAulB,qBA/LA,SAAAC,GACA,YAAA/jF,IAAA+jF,EACAjyE,GAEA,uBACAA,GAAAiyE,GACA,IA0LAxlB,EAAAylB,sBApLA,SAAAC,EAAAC,GACA,YAAAlkF,IAAA4iF,GAAAqB,UAGAjkF,IAAAkkF,EACAtB,GAAAqB,IAEArB,GAAAqB,GAAAC,EACA,MAAAD,IACArB,GAAA5T,GAAAkV,EAAA,IAEA,KA0KA3lB,EAAAqd,eA73CA,SAAAuI,EAAAjoF,GACA,IAAAs7C,EAAA2sC,EAAA3sC,KAAAt7C,EAAA,WACA,OAAAs7C,GAAA,aACAA,GAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,yBAu3CA+mB,EAAAjtD,UAAAmqE,GAGAld,EAAA6lB,UAAA,CACAC,eAAA,mBACAC,uBAAA,sBACAC,kBAAA,0BACA5c,KAAA,aACA6c,KAAA,QACAC,aAAA,WACAC,QAAA,eACA1c,KAAA,aACAN,MAAA,WAGAnJ,EAp/IgEX","file":"/js/site-dashboard.js","sourcesContent":["import Chart from 'chart.js';\n\nclass GoogleAnaylytics {\n    static init() {\n        window.chartColors = {\n            red: 'rgb(255, 99, 132)',\n            orange: 'rgb(255, 159, 64)',\n            yellow: 'rgb(255, 205, 86)',\n            green: 'rgb(75, 192, 192)',\n            blue: 'rgb(54, 162, 235)',\n            purple: 'rgb(153, 102, 255)',\n            grey: 'rgb(231,233,237)'\n        };\n        // == NOTE ==\n        // This code uses ES6 promises. If you want to use this code in a browser\n        // that doesn't supporting promises natively, you'll have to include a polyfill.\n        gapi.analytics.ready(function() {\n            var data = {ids: window.gid};\n            var access_token = window.gtok;\n\n            /**\n             * Authorize the user immediately if the user has already granted access.\n             * If no access has been created, render an authorize button inside the\n             * element with the ID \"embed-api-auth-container\".\n             */\n            gapi.analytics.auth.authorize({\n                'serverAuth': {\n                    'access_token': access_token\n                }\n            });\n\n            gapi.analytics.createComponent('ActiveUsers', {\n\n                initialize: function initialize() {\n                    this.activeUsers = 0;\n                    gapi.analytics.auth.once('signOut', this.handleSignOut_.bind(this));\n                },\n\n                execute: function execute() {\n                    // Stop any polling currently going on.\n                    if (this.polling_) {\n                        this.stop();\n                    }\n\n                    this.render_();\n\n                    // Wait until the user is authorized.\n                    if (gapi.analytics.auth.isAuthorized()) {\n                        this.pollActiveUsers_();\n                    } else {\n                        gapi.analytics.auth.once('signIn', this.pollActiveUsers_.bind(this));\n                    }\n                },\n\n                stop: function stop() {\n                    clearTimeout(this.timeout_);\n                    this.polling_ = false;\n                    this.emit('stop', { activeUsers: this.activeUsers });\n                },\n\n                render_: function render_() {\n                    var opts = this.get();\n\n                    // Render the component inside the container.\n                    this.container = typeof opts.container == 'string' ? document.getElementById(opts.container) : opts.container;\n\n                    this.container.innerHTML = opts.template || this.template;\n                    this.container.querySelector('b').innerHTML = this.activeUsers;\n                },\n\n                pollActiveUsers_: function pollActiveUsers_() {\n                    var options = this.get();\n                    var pollingInterval = (options.pollingInterval || 5) * 1000;\n\n                    if (isNaN(pollingInterval) || pollingInterval < 5000) {\n                        throw new Error('Frequency must be 5 seconds or more.');\n                    }\n\n                    this.polling_ = true;\n                    gapi.client.analytics.data.realtime.get({ ids: options.ids, metrics: 'rt:activeUsers' }).then(function (response) {\n                        var result = response.result;\n                        var newValue = result.totalResults ? +result.rows[0][0] : 0;\n                        var oldValue = this.activeUsers;\n\n                        this.emit('success', { activeUsers: this.activeUsers });\n\n                        if (newValue != oldValue) {\n                            this.activeUsers = newValue;\n                            this.onChange_(newValue - oldValue);\n                        }\n\n                        if (this.polling_ == true) {\n                            this.timeout_ = setTimeout(this.pollActiveUsers_.bind(this), pollingInterval);\n                        }\n                    }.bind(this));\n                },\n\n                onChange_: function onChange_(delta) {\n                    var valueContainer = this.container.querySelector('b');\n                    if (valueContainer) valueContainer.innerHTML = this.activeUsers;\n\n                    this.emit('change', { activeUsers: this.activeUsers, delta: delta });\n                    if (delta > 0) {\n                        this.emit('increase', { activeUsers: this.activeUsers, delta: delta });\n                    } else {\n                        this.emit('decrease', { activeUsers: this.activeUsers, delta: delta });\n                    }\n                },\n\n                handleSignOut_: function handleSignOut_() {\n                    this.stop();\n                    gapi.analytics.auth.once('signIn', this.handleSignIn_.bind(this));\n                },\n\n                handleSignIn_: function handleSignIn_() {\n                    this.pollActiveUsers_();\n                    gapi.analytics.auth.once('signOut', this.handleSignOut_.bind(this));\n                },\n\n                template: '<div class=\"ActiveUsers is-increasing\">' + 'Active Users: <b class=\"ActiveUsers-value\"></b>' + '</div>'\n\n            });\n\n\n            /**\n             * Create a new ActiveUsers instance to be rendered inside of an\n             * element with the id \"active-users-container\" and poll for changes every\n             * five seconds.\n             */\n            var activeUsers = new gapi.analytics.ext.ActiveUsers({\n                container: 'active-users-container',\n                pollingInterval: 5\n            });\n\n\n            /**\n             * Add CSS animation to visually show the when users come and go.\n             */\n            activeUsers.once('success', function() {\n                var element = this.container.firstChild;\n                var timeout;\n\n                this.on('change', function(data) {\n                    var element = this.container.firstChild;\n                    var animationClass = data.delta > 0 ? 'is-increasing' : 'is-decreasing';\n                    element.className += (' ' + animationClass);\n\n                    clearTimeout(timeout);\n                    timeout = setTimeout(function() {\n                        element.className =\n                            element.className.replace(/ is-(increasing|decreasing)/g, '');\n                    }, 3000);\n                });\n            });\n            activeUsers.set(data).execute();\n\n            renderWeekOverWeekChart(data.ids);\n            renderYearOverYearChart(data.ids);\n            renderTopBrowsersChart(data.ids);\n            renderTopCountriesChart(data.ids);\n\n            /**\n             * Draw the a chart.js line chart with data from the specified view that\n             * overlays session data for the current week over session data for the\n             * previous week.\n             */\n            function renderWeekOverWeekChart(ids) {\n\n                // Adjust `now` to experiment with different days, for testing only...\n                var now = window.moment(); // .subtract(3, 'day');\n\n                var thisWeek = query({\n                    'ids': ids,\n                    'dimensions': 'ga:date,ga:nthDay',\n                    'metrics': 'ga:sessions',\n                    'start-date': window.moment(now).subtract(1, 'day').day(0).format('YYYY-MM-DD'),\n                    'end-date': window.moment(now).format('YYYY-MM-DD')\n                });\n\n                var lastWeek = query({\n                    'ids': ids,\n                    'dimensions': 'ga:date,ga:nthDay',\n                    'metrics': 'ga:sessions',\n                    'start-date': window.moment(now).subtract(1, 'day').day(0).subtract(1, 'week')\n                        .format('YYYY-MM-DD'),\n                    'end-date': window.moment(now).subtract(1, 'day').day(6).subtract(1, 'week')\n                        .format('YYYY-MM-DD')\n                });\n\n                Promise.all([thisWeek, lastWeek]).then(function(results) {\n\n                    var data1 = results[0].rows.map(function(row) { return +row[2]; });\n                    var data2 = results[1].rows.map(function(row) { return +row[2]; });\n                    var labels = results[1].rows.map(function(row) { return +row[0]; });\n\n                    labels = labels.map(function(label) {\n                        return window.moment(label, 'YYYYMMDD').format('ddd');\n                    });\n\n                    var data = {\n                        labels : labels,\n                        datasets : [\n                            {\n                                label: 'Last Week',\n                                fillColor : 'rgba(220,220,220,0.5)',\n                                strokeColor : 'rgba(220,220,220,1)',\n                                pointColor : 'rgba(220,220,220,1)',\n                                pointStrokeColor : '#fff',\n                                backgroundColor: window.chartColors.blue,\n                                borderColor: window.chartColors.blue,\n                                borderWidth: 1,\n                                data : data2\n                            },\n                            {\n                                label: 'This Week',\n                                fillColor : 'rgba(151,187,205,0.5)',\n                                strokeColor : 'rgba(151,187,205,1)',\n                                pointColor : 'rgba(151,187,205,1)',\n                                pointStrokeColor : '#fff',\n                                backgroundColor: window.chartColors.green,\n                                borderColor: window.chartColors.green,\n                                borderWidth: 1,\n                                data : data1\n                            }\n                        ]\n                    };\n\n                    Chart.Line(makeCanvas('chart-1-container'), {\n                        data: data\n                    });\n                });\n            }\n\n\n            /**\n             * Draw the a chart.js bar chart with data from the specified view that\n             * overlays session data for the current year over session data for the\n             * previous year, grouped by month.\n             */\n            function renderYearOverYearChart(ids) {\n\n                // Adjust `now` to experiment with different days, for testing only...\n                var now = window.moment(); // .subtract(3, 'day');\n\n                var thisYear = query({\n                    'ids': ids,\n                    'dimensions': 'ga:month,ga:nthMonth',\n                    'metrics': 'ga:users',\n                    'start-date': window.moment(now).date(1).month(0).format('YYYY-MM-DD'),\n                    'end-date': window.moment(now).format('YYYY-MM-DD')\n                });\n\n                var lastYear = query({\n                    'ids': ids,\n                    'dimensions': 'ga:month,ga:nthMonth',\n                    'metrics': 'ga:users',\n                    'start-date': window.moment(now).subtract(1, 'year').date(1).month(0)\n                        .format('YYYY-MM-DD'),\n                    'end-date': window.moment(now).date(1).month(0).subtract(1, 'day')\n                        .format('YYYY-MM-DD')\n                });\n\n                Promise.all([thisYear, lastYear]).then(function(results) {\n                    var data1 = results[0].rows.map(function(row) { return +row[2]; });\n                    var data2 = results[1].rows.map(function(row) { return +row[2]; });\n                    var labels = ['Jan','Feb','Mar','Apr','May','Jun',\n                        'Jul','Aug','Sep','Oct','Nov','Dec'];\n\n                    // Ensure the data arrays are at least as long as the labels array.\n                    // Chart.js bar charts don't (yet) accept sparse datasets.\n                    for (var i = 0, len = labels.length; i < len; i++) {\n                        if (data1[i] === undefined) data1[i] = null;\n                        if (data2[i] === undefined) data2[i] = null;\n                    }\n\n                    var data = {\n                        labels : labels,\n                        datasets : [\n                            {\n                                label: 'Last Year',\n                                fillColor : 'rgba(220,220,220,0.5)',\n                                strokeColor : 'rgba(220,220,220,1)',\n                                backgroundColor: window.chartColors.orange,\n                                borderColor: 'rgba(255, 159, 64, 1)',\n                                data : data2\n                            },\n                            {\n                                label: 'This Year',\n                                fillColor : 'rgba(151,187,205,0.5)',\n                                strokeColor : 'rgba(151,187,205,1)',\n                                backgroundColor: window.chartColors.purple,\n                                borderColor:'rgba(153, 102, 255, 1)',\n                                data : data1\n                            }\n                        ]\n                    };\n\n                    Chart.Bar(makeCanvas('chart-2-container'),{\n                        data: data\n                    });\n                })\n                    .catch(function(err) {\n                        console.error(err.stack);\n                    });\n            }\n\n\n            /**\n             * Draw the a chart.js doughnut chart with data from the specified view that\n             * show the top 5 browsers over the past seven days.\n             */\n            function renderTopBrowsersChart(ids) {\n                var now = window.moment();\n                query({\n                    'ids': ids,\n                    'dimensions': 'ga:browser',\n                    'metrics': 'ga:pageviews',\n                    'sort': '-ga:pageviews',\n                    // 'max-results': 5,\n                    'start-date': window.moment(now).date(1).month(0).format('YYYY-MM-DD'),\n                    'end-date': window.moment(now).format('YYYY-MM-DD')\n                })\n                    .then(function(response) {\n\n                        let chartData = [];\n                        let labels = [];\n                        response.rows.forEach(function(row, i) {\n                            chartData.push(row[1]);\n                            labels.push(row[0]);\n                        });\n                        data = {\n                            datasets: [{\n                                data: chartData,\n                                backgroundColor: [\n                                    window.chartColors.red,\n                                    window.chartColors.orange,\n                                    window.chartColors.yellow,\n                                    window.chartColors.green,\n                                    window.chartColors.blue,\n                                    window.chartColors.purple,\n                                    window.chartColors.grey\n                                ]\n                            }],\n                            labels: labels,\n\n                        };\n                        Chart.Doughnut(makeCanvas('chart-3-container'),{\n                            data:data\n                        });\n                    });\n            }\n\n\n            /**\n             * Draw the a chart.js doughnut chart with data from the specified view that\n             * compares sessions from mobile, desktop, and tablet over the past seven\n             * days.\n             */\n            function renderTopCountriesChart(ids) {\n                var now = window.moment();\n                query({\n                    'ids': ids,\n                    'dimensions': 'ga:country',\n                    'metrics': 'ga:users',\n                    'sort': '-ga:users',\n                    // 'max-results': 5,\n                    'start-date': window.moment(now).date(1).month(0).format('YYYY-MM-DD'),\n                    'end-date': window.moment(now).format('YYYY-MM-DD')\n                })\n                    .then(function(response) {\n                        var totalUsers = response.totalsForAllResults['ga:users'];\n                        $('.totalVisitors').text(totalUsers);\n                        let chartData = [];\n                        let labels = [];\n                        let colors = [\n                            'rgb(255, 99, 132)',\n                            'rgb(255, 159, 64)',\n                            'rgb(255, 205, 86)',\n                            'rgb(75, 192, 192)',\n                            'rgb(54, 162, 235)',\n                            'rgb(153, 102, 255)',\n                            'rgb(231,233,237)'\n                        ];\n                        let bgColors = [];\n                        let colorCounter = 0;\n                        \n                        response.rows.forEach(function(row, i) {\n                            // var percentage = parseFloat((row[1]/parseInt(totalUsers)*100).toFixed(1));\n                            chartData.push(row[1]);\n                            labels.push(row[0]);\n                            //\n                            bgColors.push(colors[colorCounter]);\n                            colorCounter++;\n                            if(colorCounter>=colors.length){\n                                colorCounter =0;\n                            }\n\n                        });\n\n                        data = {\n                            datasets: [{\n                                data: chartData,\n                                backgroundColor: bgColors\n                            }],\n                            labels: labels,\n\n                        };\n                        Chart.Doughnut(makeCanvas('chart-4-container'),{\n                            data:data,\n                            // options: {\n                            //     tooltips: {\n                            //         callbacks: {\n                            //             label: function (tooltipItem, data) {\n                            //                 var dataset = data.datasets[tooltipItem.datasetIndex];\n                            //                 var currentValue = dataset.data[tooltipItem.index];\n                            //                 var tooltipLabel = data.labels[tooltipItem.index];\n                            //                 return tooltipLabel + ': '+ currentValue + \"%\";\n                            //             }\n                            //         }\n                            //     }\n                            // }\n                        });\n\n                    });\n            }\n\n\n            /**\n             * Extend the Embed APIs `gapi.analytics.report.Data` component to\n             * return a promise the is fulfilled with the value returned by the API.\n             * @param {Object} params The request parameters.\n             * @return {Promise} A promise.\n             */\n            function query(params) {\n                return new Promise(function(resolve, reject) {\n                    var data = new gapi.analytics.report.Data({query: params});\n                    data.once('success', function(response) { resolve(response); })\n                        .once('error', function(response) { reject(response); })\n                        .execute();\n                });\n            }\n\n\n            /**\n             * Create a new canvas inside the specified element. Set it to be the width\n             * and height of its container.\n             * @param {string} id The id attribute of the element to host the canvas.\n             * @return {RenderingContext} The 2D canvas context.\n             */\n            function makeCanvas(id) {\n                var container = document.getElementById(id);\n                var canvas = document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n\n                container.innerHTML = '';\n                canvas.width = container.offsetWidth;\n                canvas.height = container.offsetHeight;\n                container.appendChild(canvas);\n\n                return ctx;\n            }\n\n\n\n            // Set some global Chart.js defaults.\n            Chart.defaults.global.animationSteps = 60;\n            Chart.defaults.global.animationEasing = 'easeInOutQuart';\n            Chart.defaults.global.responsive = true;\n            Chart.defaults.global.maintainAspectRatio = false;\n\n\n        });\n    }\n}\nwindow.GoogleAnaylytics = GoogleAnaylytics;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"R89r\";","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n"],"sourceRoot":""}